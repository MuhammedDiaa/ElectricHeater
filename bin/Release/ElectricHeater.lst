gplink-1.4.0 #1106 (Oct  6 2014)
Copyright (c) 1998-2014 gputils project
Listing File Generated: 7-17-2020  06:58:44
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:42 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"adc.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_Start_conversion_Int
                                           	global	_ADC_GetResult
                                           	global	_ADC_Update
                                           	global	_ADC_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_adc_0	udata
                                           r0x1007	res	1
                                           r0x1008	res	1
                                           r0x1009	res	1
                                           r0x1003	res	1
                                           r0x1004	res	1
                                           r0x1005	res	1
                                           r0x1006	res	1
                                           r0x1000	res	1
                                           r0x1001	res	1
                                           r0x1002	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_adc	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Start_conversion_Int	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   r0x1000
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;; Starting pCode block
                                           _Start_conversion_Int	;Function start
                                           ; 2 exit points
                                           ;	.line	31; "adc.c"	void Start_conversion_Int(unsigned char channel){
00112d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
00112e   1303     bcf     0x03, 0x6        
00112f   00ed     movwf   0x6d             	MOVWF	r0x1000
                                           ;	.line	33; "adc.c"	ADC_SELECT_CHANNEL(channel);
001130   3004     movlw   0x04             	MOVLW	0x04
001131   056d     andwf   0x6d, 0x0        	ANDWF	r0x1000,W
001132   00ee     movwf   0x6e             	MOVWF	r0x1001
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
001133   1003     bcf     0x03, 0x0        	BCF	STATUS,0
001134   0c6e     rrf     0x6e, 0x0        	RRF	r0x1001,W
001135   00ef     movwf   0x6f             	MOVWF	r0x1002
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
001136   1003     bcf     0x03, 0x0        	BCF	STATUS,0
001137   0cef     rrf     0x6f, 0x1        	RRF	r0x1002,F
001138   0c6f     rrf     0x6f, 0x0        	RRF	r0x1002,W
001139   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00113a   293e     goto    0x013e           	GOTO	_00001_DS_
00113b   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
00113c   1303     bcf     0x03, 0x6        
00113d   129f     bcf     0x1f, 0x5        	BCF	_ADCON0bits,5
                                           _00001_DS_
00113e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00113f   2943     goto    0x0143           	GOTO	_00002_DS_
001140   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
001141   1303     bcf     0x03, 0x6        
001142   169f     bsf     0x1f, 0x5        	BSF	_ADCON0bits,5
                                           _00002_DS_
001143   3002     movlw   0x02             	MOVLW	0x02
001144   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
001145   1303     bcf     0x03, 0x6        
001146   056d     andwf   0x6d, 0x0        	ANDWF	r0x1000,W
001147   00ee     movwf   0x6e             	MOVWF	r0x1001
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
001148   1003     bcf     0x03, 0x0        	BCF	STATUS,0
001149   0c6e     rrf     0x6e, 0x0        	RRF	r0x1001,W
00114a   00ef     movwf   0x6f             	MOVWF	r0x1002
00114b   0c6f     rrf     0x6f, 0x0        	RRF	r0x1002,W
00114c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00114d   2951     goto    0x0151           	GOTO	_00003_DS_
00114e   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
00114f   1303     bcf     0x03, 0x6        
001150   121f     bcf     0x1f, 0x4        	BCF	_ADCON0bits,4
                                           _00003_DS_
001151   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
001152   2956     goto    0x0156           	GOTO	_00004_DS_
001153   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
001154   1303     bcf     0x03, 0x6        
001155   161f     bsf     0x1f, 0x4        	BSF	_ADCON0bits,4
                                           _00004_DS_
001156   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
001157   1303     bcf     0x03, 0x6        
001158   086d     movf    0x6d, 0x0        	MOVF	r0x1000,W
001159   3901     andlw   0x01             	ANDLW	0x01
00115a   00ee     movwf   0x6e             	MOVWF	r0x1001
00115b   00ed     movwf   0x6d             	MOVWF	r0x1000
00115c   0c6d     rrf     0x6d, 0x0        	RRF	r0x1000,W
00115d   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00115e   2962     goto    0x0162           	GOTO	_00005_DS_
00115f   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
001160   1303     bcf     0x03, 0x6        
001161   119f     bcf     0x1f, 0x3        	BCF	_ADCON0bits,3
                                           _00005_DS_
001162   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
001163   2967     goto    0x0167           	GOTO	_00006_DS_
001164   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
001165   1303     bcf     0x03, 0x6        
001166   159f     bsf     0x1f, 0x3        	BSF	_ADCON0bits,3
                                           _00006_DS_
                                           ;	.line	34; "adc.c"	ADC_SELECT_RESULT_JUSTIFICATION(RIGHT);
001167   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1bits
001168   1303     bcf     0x03, 0x6        
001169   179f     bsf     0x1f, 0x7        	BSF	_ADCON1bits,7
                                           ;	.line	35; "adc.c"	ADC_SET_STATE(ADC_ON);
00116a   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
00116b   1303     bcf     0x03, 0x6        
00116c   141f     bsf     0x1f, 0x0        	BSF	_ADCON0bits,0
                                           ;	.line	36; "adc.c"	ADC_START_CONVERSION();
00116d   151f     bsf     0x1f, 0x2        	BSF	_ADCON0bits,2
                                           ;	.line	37; "adc.c"	GIE  = 1 ;
00116e   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	38; "adc.c"	PEIE = 1 ;
00116f   170b     bsf     0x0b, 0x6        	BSF	_INTCONbits,6
                                           ;	.line	39; "adc.c"	ADIE = 1 ;
001170   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
001171   1303     bcf     0x03, 0x6        
001172   170c     bsf     0x0c, 0x6        	BSF	_PIE1bits,6
001173   0008     return                   	RETURN	
                                           ; exit point of _Start_conversion_Int
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _ADC_GetResult	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;5 compiler assigned registers:
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;   r0x1005
                                           ;   r0x1006
                                           ;   STK00
                                           ;; Starting pCode block
                                           _ADC_GetResult	;Function start
                                           ; 2 exit points
                                           ;	.line	16; "adc.c"	unsigned int ADC_GetResult(unsigned char channel)
001174   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
001175   1303     bcf     0x03, 0x6        
001176   00e9     movwf   0x69             	MOVWF	r0x1003
                                           ;	.line	20; "adc.c"	ADC_SELECT_CHANNEL(channel);
001177   3004     movlw   0x04             	MOVLW	0x04
001178   0569     andwf   0x69, 0x0        	ANDWF	r0x1003,W
001179   00ea     movwf   0x6a             	MOVWF	r0x1004
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
00117a   1003     bcf     0x03, 0x0        	BCF	STATUS,0
00117b   0c6a     rrf     0x6a, 0x0        	RRF	r0x1004,W
00117c   00eb     movwf   0x6b             	MOVWF	r0x1005
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
00117d   1003     bcf     0x03, 0x0        	BCF	STATUS,0
00117e   0ceb     rrf     0x6b, 0x1        	RRF	r0x1005,F
00117f   0c6b     rrf     0x6b, 0x0        	RRF	r0x1005,W
001180   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
001181   2985     goto    0x0185           	GOTO	_00007_DS_
001182   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
001183   1303     bcf     0x03, 0x6        
001184   129f     bcf     0x1f, 0x5        	BCF	_ADCON0bits,5
                                           _00007_DS_
001185   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
001186   298a     goto    0x018a           	GOTO	_00008_DS_
001187   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
001188   1303     bcf     0x03, 0x6        
001189   169f     bsf     0x1f, 0x5        	BSF	_ADCON0bits,5
                                           _00008_DS_
00118a   3002     movlw   0x02             	MOVLW	0x02
00118b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
00118c   1303     bcf     0x03, 0x6        
00118d   0569     andwf   0x69, 0x0        	ANDWF	r0x1003,W
00118e   00ea     movwf   0x6a             	MOVWF	r0x1004
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
00118f   1003     bcf     0x03, 0x0        	BCF	STATUS,0
001190   0c6a     rrf     0x6a, 0x0        	RRF	r0x1004,W
001191   00eb     movwf   0x6b             	MOVWF	r0x1005
001192   0c6b     rrf     0x6b, 0x0        	RRF	r0x1005,W
001193   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
001194   2998     goto    0x0198           	GOTO	_00009_DS_
001195   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
001196   1303     bcf     0x03, 0x6        
001197   121f     bcf     0x1f, 0x4        	BCF	_ADCON0bits,4
                                           _00009_DS_
001198   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
001199   299d     goto    0x019d           	GOTO	_00010_DS_
00119a   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
00119b   1303     bcf     0x03, 0x6        
00119c   161f     bsf     0x1f, 0x4        	BSF	_ADCON0bits,4
                                           _00010_DS_
00119d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
00119e   1303     bcf     0x03, 0x6        
00119f   0869     movf    0x69, 0x0        	MOVF	r0x1003,W
0011a0   3901     andlw   0x01             	ANDLW	0x01
0011a1   00ea     movwf   0x6a             	MOVWF	r0x1004
0011a2   00e9     movwf   0x69             	MOVWF	r0x1003
0011a3   0c69     rrf     0x69, 0x0        	RRF	r0x1003,W
0011a4   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0011a5   29a9     goto    0x01a9           	GOTO	_00011_DS_
0011a6   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
0011a7   1303     bcf     0x03, 0x6        
0011a8   119f     bcf     0x1f, 0x3        	BCF	_ADCON0bits,3
                                           _00011_DS_
0011a9   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0011aa   29ae     goto    0x01ae           	GOTO	_00012_DS_
0011ab   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
0011ac   1303     bcf     0x03, 0x6        
0011ad   159f     bsf     0x1f, 0x3        	BSF	_ADCON0bits,3
                                           _00012_DS_
                                           ;	.line	21; "adc.c"	ADC_SELECT_RESULT_JUSTIFICATION(RIGHT);
0011ae   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1bits
0011af   1303     bcf     0x03, 0x6        
0011b0   179f     bsf     0x1f, 0x7        	BSF	_ADCON1bits,7
                                           ;	.line	22; "adc.c"	ADC_SET_STATE(ADC_ON);
0011b1   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
0011b2   1303     bcf     0x03, 0x6        
0011b3   141f     bsf     0x1f, 0x0        	BSF	_ADCON0bits,0
                                           ;	.line	23; "adc.c"	ADC_START_CONVERSION();
0011b4   151f     bsf     0x1f, 0x2        	BSF	_ADCON0bits,2
                                           _00113_DS_
                                           ;	.line	24; "adc.c"	ADC_WAIT_FOR_RESULT();
0011b5   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
0011b6   1303     bcf     0x03, 0x6        
0011b7   01e9     clrf    0x69             	CLRF	r0x1003
0011b8   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
0011b9   1303     bcf     0x03, 0x6        
0011ba   1d1f     btfss   0x1f, 0x2        	BTFSS	_ADCON0bits,2
0011bb   29bf     goto    0x01bf           	GOTO	_00013_DS_
0011bc   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
0011bd   1303     bcf     0x03, 0x6        
0011be   0ae9     incf    0x69, 0x1        	INCF	r0x1003,F
                                           _00013_DS_
0011bf   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
0011c0   1303     bcf     0x03, 0x6        
0011c1   0869     movf    0x69, 0x0        	MOVF	r0x1003,W
0011c2   00ea     movwf   0x6a             	MOVWF	r0x1004
                                           ;	.line	25; "adc.c"	ret = ADC_READ_RESULT(RIGHT);
0011c3   3a01     xorlw   0x01             	XORLW	0x01
0011c4   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0011c5   29b5     goto    0x01b5           	GOTO	_00113_DS_
0011c6   1283     bcf     0x03, 0x5        	BANKSEL	_ADRESH
0011c7   1303     bcf     0x03, 0x6        
0011c8   081e     movf    0x1e, 0x0        	MOVF	_ADRESH,W
0011c9   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
0011ca   1303     bcf     0x03, 0x6        
0011cb   00ec     movwf   0x6c             	MOVWF	r0x1006
0011cc   00e9     movwf   0x69             	MOVWF	r0x1003
0011cd   01ea     clrf    0x6a             	CLRF	r0x1004
                                           ;;99	MOVF	r0x1003,W
0011ce   01eb     clrf    0x6b             	CLRF	r0x1005
0011cf   1683     bsf     0x03, 0x5        	BANKSEL	_ADRESL
0011d0   1303     bcf     0x03, 0x6        
0011d1   081e     movf    0x1e, 0x0        	MOVF	_ADRESL,W
0011d2   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
0011d3   1303     bcf     0x03, 0x6        
0011d4   00e9     movwf   0x69             	MOVWF	r0x1003
0011d5   01ea     clrf    0x6a             	CLRF	r0x1004
0011d6   0869     movf    0x69, 0x0        	MOVF	r0x1003,W
0011d7   04eb     iorwf   0x6b, 0x1        	IORWF	r0x1005,F
0011d8   3000     movlw   0x00             	MOVLW	0x00
0011d9   04ec     iorwf   0x6c, 0x1        	IORWF	r0x1006,F
                                           ;	.line	27; "adc.c"	return ret;
0011da   086b     movf    0x6b, 0x0        	MOVF	r0x1005,W
0011db   00ff     movwf   0x7f             	MOVWF	STK00
0011dc   086c     movf    0x6c, 0x0        	MOVF	r0x1006,W
0011dd   0008     return                   	RETURN	
                                           ; exit point of _ADC_GetResult
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _ADC_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _ADC_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	14; "adc.c"	}
0011de   0008     return                   	RETURN	
                                           ; exit point of _ADC_Update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _ADC_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   r0x1007
                                           ;   r0x1008
                                           ;   r0x1009
                                           ;; Starting pCode block
                                           _ADC_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	3; "adc.c"	void ADC_Init(unsigned char clock_source)
0011df   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
0011e0   1303     bcf     0x03, 0x6        
0011e1   00e6     movwf   0x66             	MOVWF	r0x1007
                                           ;	.line	5; "adc.c"	ADC_SET_STATE(ADC_OFF);
0011e2   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
0011e3   1303     bcf     0x03, 0x6        
0011e4   101f     bcf     0x1f, 0x0        	BCF	_ADCON0bits,0
                                           ;	.line	6; "adc.c"	ADC_SELECT_CLOCK_SOURCE(clock_source);
0011e5   3004     movlw   0x04             	MOVLW	0x04
0011e6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
0011e7   1303     bcf     0x03, 0x6        
0011e8   0566     andwf   0x66, 0x0        	ANDWF	r0x1007,W
0011e9   00e7     movwf   0x67             	MOVWF	r0x1008
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
0011ea   1003     bcf     0x03, 0x0        	BCF	STATUS,0
0011eb   0c67     rrf     0x67, 0x0        	RRF	r0x1008,W
0011ec   00e8     movwf   0x68             	MOVWF	r0x1009
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
0011ed   1003     bcf     0x03, 0x0        	BCF	STATUS,0
0011ee   0ce8     rrf     0x68, 0x1        	RRF	r0x1009,F
0011ef   0c68     rrf     0x68, 0x0        	RRF	r0x1009,W
0011f0   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0011f1   29f5     goto    0x01f5           	GOTO	_00014_DS_
0011f2   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1bits
0011f3   1303     bcf     0x03, 0x6        
0011f4   131f     bcf     0x1f, 0x6        	BCF	_ADCON1bits,6
                                           _00014_DS_
0011f5   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0011f6   29fa     goto    0x01fa           	GOTO	_00015_DS_
0011f7   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1bits
0011f8   1303     bcf     0x03, 0x6        
0011f9   171f     bsf     0x1f, 0x6        	BSF	_ADCON1bits,6
                                           _00015_DS_
0011fa   3002     movlw   0x02             	MOVLW	0x02
0011fb   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
0011fc   1303     bcf     0x03, 0x6        
0011fd   0566     andwf   0x66, 0x0        	ANDWF	r0x1007,W
0011fe   00e7     movwf   0x67             	MOVWF	r0x1008
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
0011ff   1003     bcf     0x03, 0x0        	BCF	STATUS,0
001200   0c67     rrf     0x67, 0x0        	RRF	r0x1008,W
001201   00e8     movwf   0x68             	MOVWF	r0x1009
001202   0c68     rrf     0x68, 0x0        	RRF	r0x1009,W
001203   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
001204   2a08     goto    0x0208           	GOTO	_00016_DS_
001205   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
001206   1303     bcf     0x03, 0x6        
001207   139f     bcf     0x1f, 0x7        	BCF	_ADCON0bits,7
                                           _00016_DS_
001208   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
001209   2a0d     goto    0x020d           	GOTO	_00017_DS_
00120a   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
00120b   1303     bcf     0x03, 0x6        
00120c   179f     bsf     0x1f, 0x7        	BSF	_ADCON0bits,7
                                           _00017_DS_
00120d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
00120e   1303     bcf     0x03, 0x6        
00120f   0866     movf    0x66, 0x0        	MOVF	r0x1007,W
001210   3901     andlw   0x01             	ANDLW	0x01
001211   00e7     movwf   0x67             	MOVWF	r0x1008
001212   00e6     movwf   0x66             	MOVWF	r0x1007
001213   0c66     rrf     0x66, 0x0        	RRF	r0x1007,W
001214   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
001215   2a19     goto    0x0219           	GOTO	_00018_DS_
001216   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
001217   1303     bcf     0x03, 0x6        
001218   131f     bcf     0x1f, 0x6        	BCF	_ADCON0bits,6
                                           _00018_DS_
001219   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00121a   2a1e     goto    0x021e           	GOTO	_00019_DS_
00121b   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
00121c   1303     bcf     0x03, 0x6        
00121d   171f     bsf     0x1f, 0x6        	BSF	_ADCON0bits,6
                                           _00019_DS_
                                           ;	.line	9; "adc.c"	ADC_CONFIGURE_PORT(2);
00121e   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1bits
00121f   1303     bcf     0x03, 0x6        
001220   119f     bcf     0x1f, 0x3        	BCF	_ADCON1bits,3
001221   111f     bcf     0x1f, 0x2        	BCF	_ADCON1bits,2
001222   149f     bsf     0x1f, 0x1        	BSF	_ADCON1bits,1
001223   101f     bcf     0x1f, 0x0        	BCF	_ADCON1bits,0
001224   0008     return                   	RETURN	
                                           ; exit point of _ADC_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  162+   43 =   205 instructions (  496 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:42 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"cooler.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_Heater_Init
                                           	extern	_Heater_SetState
                                           	extern	_Heater_GetState
                                           	extern	_Heater_update
                                           	extern	_LED_Init
                                           	extern	_LED_Update
                                           	extern	_LED_GetState
                                           	extern	_LED_SetState
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_SettingMode_update
                                           	extern	_SettingMode_Get_SSD_state
                                           	extern	_SettingMode_OFF_mode
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_Cooler_update
                                           	global	_Cooler_GetState
                                           	global	_Cooler_SetState
                                           	global	_Cooler_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_cooler	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Cooler_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _Cooler_SetState
                                           ;   _Cooler_SetState
                                           ;1 compiler assigned register :
                                           ;   r0x1006
                                           ;; Starting pCode block
                                           _Cooler_update	;Function start
                                           ; 2 exit points
                                           ;	.line	18; "cooler.c"	Cooler_SetState(Flags.Cooler_Operation);
001732   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001733   1703     bsf     0x03, 0x6        
001734   0819     movf    0x19, 0x0        	MOVF	(_Flags + 3),W
                                           ;;1	MOVWF	r0x1006
001735   2740     call    0x0740           	CALL	_Cooler_SetState
001736   0008     return                   	RETURN	
                                           ; exit point of _Cooler_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Cooler_GetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;2 compiler assigned registers:
                                           ;   STK00
                                           ;   r0x1007
                                           ;; Starting pCode block
                                           _Cooler_GetState	;Function start
                                           ; 2 exit points
                                           ;	.line	13; "cooler.c"	return GPIO_GetPortPinState(PORT_C,2);
001737   3002     movlw   0x02             	MOVLW	0x02
001738   00ff     movwf   0x7f             	MOVWF	STK00
001739   3002     movlw   0x02             	MOVLW	0x02
00173a   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
00173b   120a     bcf     0x0a, 0x4        
00173c   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
00173d   118a     bcf     0x0a, 0x3        	PAGESEL	$
00173e   160a     bsf     0x0a, 0x4        
                                           ;;1	MOVWF	r0x1007
00173f   0008     return                   	RETURN	
                                           ; exit point of _Cooler_GetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Cooler_SetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;3 compiler assigned registers:
                                           ;   r0x1005
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _Cooler_SetState	;Function start
                                           ; 2 exit points
                                           ;;1	MOVWF	r0x1005
                                           ;	.line	8; "cooler.c"	GPIO_SetPortPinState(PORT_C,2,state);
001740   00fe     movwf   0x7e             	MOVWF	STK01
001741   3002     movlw   0x02             	MOVLW	0x02
001742   00ff     movwf   0x7f             	MOVWF	STK00
001743   3002     movlw   0x02             	MOVLW	0x02
001744   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
001745   120a     bcf     0x0a, 0x4        
001746   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
001747   118a     bcf     0x0a, 0x3        	PAGESEL	$
001748   160a     bsf     0x0a, 0x4        
001749   0008     return                   	RETURN	
                                           ; exit point of _Cooler_SetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Cooler_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;2 compiler assigned registers:
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _Cooler_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	4; "cooler.c"	GPIO_InitPortPin(PORT_C,2,GPIO_OUT);
00174a   3000     movlw   0x00             	MOVLW	0x00
00174b   00fe     movwf   0x7e             	MOVWF	STK01
00174c   3002     movlw   0x02             	MOVLW	0x02
00174d   00ff     movwf   0x7f             	MOVWF	STK00
00174e   3002     movlw   0x02             	MOVLW	0x02
00174f   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
001750   120a     bcf     0x0a, 0x4        
001751   2660     call    0x0660           	CALL	_GPIO_InitPortPin
001752   118a     bcf     0x0a, 0x3        	PAGESEL	$
001753   160a     bsf     0x0a, 0x4        
001754   0008     return                   	RETURN	
                                           ; exit point of _Cooler_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   21+    7 =    28 instructions (   70 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:42 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"gpio.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_GPIO_GetPortPinState
                                           	global	_GPIO_SetPortState
                                           	global	_GPIO_SetPortPinState
                                           	global	_GPIO_Update
                                           	global	_GPIO_InitPort
                                           	global	_GPIO_InitPortPin
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_gpio_0	udata
                                           r0x1011	res	1
                                           r0x1012	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           r0x1015	res	1
                                           r0x1016	res	1
                                           r0x1017	res	1
                                           r0x1006	res	1
                                           r0x1007	res	1
                                           r0x1008	res	1
                                           r0x1009	res	1
                                           r0x100A	res	1
                                           r0x100B	res	1
                                           r0x100C	res	1
                                           r0x100E	res	1
                                           r0x100D	res	1
                                           r0x100F	res	1
                                           r0x1010	res	1
                                           r0x1000	res	1
                                           r0x1001	res	1
                                           r0x1002	res	1
                                           r0x1003	res	1
                                           r0x1004	res	1
                                           r0x1005	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_gpio	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_GetPortPinState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;7 compiler assigned registers:
                                           ;   r0x1000
                                           ;   STK00
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;   r0x1005
                                           ;; Starting pCode block
                                           _GPIO_GetPortPinState	;Function start
                                           ; 2 exit points
                                           ;	.line	74; "gpio.c"	unsigned char GPIO_GetPortPinState(tPort port, unsigned char pin)
0003f3   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
0003f4   1303     bcf     0x03, 0x6        
0003f5   00b2     movwf   0x32             	MOVWF	r0x1000
0003f6   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0003f7   00b3     movwf   0x33             	MOVWF	r0x1001
                                           ;	.line	76; "gpio.c"	unsigned char ret = 0;
0003f8   01b4     clrf    0x34             	CLRF	r0x1002
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x5=5), size=1
                                           ;	.line	78; "gpio.c"	switch(port)
0003f9   3005     movlw   0x05             	MOVLW	0x05
0003fa   0232     subwf   0x32, 0x0        	SUBWF	r0x1000,W
0003fb   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003fc   2d0e     goto    0x050e           	GOTO	_00212_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
0003fd   3004     movlw   0x04             	MOVLW	HIGH(_00219_DS_)
0003fe   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
0003ff   1303     bcf     0x03, 0x6        
000400   008a     movwf   0x0a             	MOVWF	PCLATH
000401   300b     movlw   0x0b             	MOVLW	_00219_DS_
000402   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
000403   1303     bcf     0x03, 0x6        
000404   0732     addwf   0x32, 0x0        	ADDWF	r0x1000,W
000405   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000406   2c0a     goto    0x040a           	GOTO	_00001_DS_
000407   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000408   1303     bcf     0x03, 0x6        
000409   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00001_DS_
00040a   0082     movwf   0x02             	MOVWF	PCL
                                           _00219_DS_
00040b   2c10     goto    0x0410           	GOTO	_00206_DS_
00040c   2c43     goto    0x0443           	GOTO	_00207_DS_
00040d   2c76     goto    0x0476           	GOTO	_00208_DS_
00040e   2ca9     goto    0x04a9           	GOTO	_00209_DS_
00040f   2cdc     goto    0x04dc           	GOTO	_00210_DS_
                                           _00206_DS_
                                           ;	.line	81; "gpio.c"	ret =  READ_REGISTER_PIN(PORTA, pin);
000410   3000     movlw   0x00             	MOVLW	0x00
000411   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
000412   1303     bcf     0x03, 0x6        
000413   00b5     movwf   0x35             	MOVWF	r0x1003
000414   3001     movlw   0x01             	MOVLW	0x01
000415   00b2     movwf   0x32             	MOVWF	r0x1000
000416   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
000417   3c00     sublw   0x00             	SUBLW	0x00
000418   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000419   2c21     goto    0x0421           	GOTO	_00221_DS_
                                           _00220_DS_
00041a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
00041b   1303     bcf     0x03, 0x6        
00041c   0db2     rlf     0x32, 0x1        	RLF	r0x1000,F
00041d   0db5     rlf     0x35, 0x1        	RLF	r0x1003,F
00041e   3e01     addlw   0x01             	ADDLW	0x01
00041f   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000420   2c1a     goto    0x041a           	GOTO	_00220_DS_
                                           _00221_DS_
000421   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
000422   1303     bcf     0x03, 0x6        
000423   0805     movf    0x05, 0x0        	MOVF	_PORTA,W
000424   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
000425   1303     bcf     0x03, 0x6        
000426   00b6     movwf   0x36             	MOVWF	r0x1004
000427   01b7     clrf    0x37             	CLRF	r0x1005
000428   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
000429   05b2     andwf   0x32, 0x1        	ANDWF	r0x1000,F
00042a   3000     movlw   0x00             	MOVLW	0x00
00042b   05b5     andwf   0x35, 0x1        	ANDWF	r0x1003,F
00042c   0835     movf    0x35, 0x0        	MOVF	r0x1003,W
00042d   00b7     movwf   0x37             	MOVWF	r0x1005
00042e   0832     movf    0x32, 0x0        	MOVF	r0x1000,W
00042f   00b6     movwf   0x36             	MOVWF	r0x1004
000430   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
000431   3c00     sublw   0x00             	SUBLW	0x00
000432   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000433   2c3e     goto    0x043e           	GOTO	_00223_DS_
                                           _00222_DS_
000434   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000435   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
000436   1303     bcf     0x03, 0x6        
000437   1bb7     btfsc   0x37, 0x7        	BTFSC	r0x1005,7
000438   1403     bsf     0x03, 0x0        	BSF	STATUS,0
000439   0cb7     rrf     0x37, 0x1        	RRF	r0x1005,F
00043a   0cb6     rrf     0x36, 0x1        	RRF	r0x1004,F
00043b   3e01     addlw   0x01             	ADDLW	0x01
00043c   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00043d   2c34     goto    0x0434           	GOTO	_00222_DS_
                                           _00223_DS_
00043e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
00043f   1303     bcf     0x03, 0x6        
000440   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
000441   00b4     movwf   0x34             	MOVWF	r0x1002
                                           ;	.line	82; "gpio.c"	break;
000442   2d0e     goto    0x050e           	GOTO	_00212_DS_
                                           _00207_DS_
                                           ;	.line	84; "gpio.c"	ret =  READ_REGISTER_PIN(PORTB, pin);
000443   3000     movlw   0x00             	MOVLW	0x00
000444   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
000445   1303     bcf     0x03, 0x6        
000446   00b5     movwf   0x35             	MOVWF	r0x1003
000447   3001     movlw   0x01             	MOVLW	0x01
000448   00b2     movwf   0x32             	MOVWF	r0x1000
000449   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
00044a   3c00     sublw   0x00             	SUBLW	0x00
00044b   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00044c   2c54     goto    0x0454           	GOTO	_00225_DS_
                                           _00224_DS_
00044d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
00044e   1303     bcf     0x03, 0x6        
00044f   0db2     rlf     0x32, 0x1        	RLF	r0x1000,F
000450   0db5     rlf     0x35, 0x1        	RLF	r0x1003,F
000451   3e01     addlw   0x01             	ADDLW	0x01
000452   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000453   2c4d     goto    0x044d           	GOTO	_00224_DS_
                                           _00225_DS_
000454   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
000455   1303     bcf     0x03, 0x6        
000456   0806     movf    0x06, 0x0        	MOVF	_PORTB,W
000457   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
000458   1303     bcf     0x03, 0x6        
000459   00b6     movwf   0x36             	MOVWF	r0x1004
00045a   01b7     clrf    0x37             	CLRF	r0x1005
00045b   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
00045c   05b2     andwf   0x32, 0x1        	ANDWF	r0x1000,F
00045d   3000     movlw   0x00             	MOVLW	0x00
00045e   05b5     andwf   0x35, 0x1        	ANDWF	r0x1003,F
00045f   0835     movf    0x35, 0x0        	MOVF	r0x1003,W
000460   00b7     movwf   0x37             	MOVWF	r0x1005
000461   0832     movf    0x32, 0x0        	MOVF	r0x1000,W
000462   00b6     movwf   0x36             	MOVWF	r0x1004
000463   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
000464   3c00     sublw   0x00             	SUBLW	0x00
000465   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000466   2c71     goto    0x0471           	GOTO	_00227_DS_
                                           _00226_DS_
000467   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000468   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
000469   1303     bcf     0x03, 0x6        
00046a   1bb7     btfsc   0x37, 0x7        	BTFSC	r0x1005,7
00046b   1403     bsf     0x03, 0x0        	BSF	STATUS,0
00046c   0cb7     rrf     0x37, 0x1        	RRF	r0x1005,F
00046d   0cb6     rrf     0x36, 0x1        	RRF	r0x1004,F
00046e   3e01     addlw   0x01             	ADDLW	0x01
00046f   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000470   2c67     goto    0x0467           	GOTO	_00226_DS_
                                           _00227_DS_
000471   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
000472   1303     bcf     0x03, 0x6        
000473   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
000474   00b4     movwf   0x34             	MOVWF	r0x1002
                                           ;	.line	85; "gpio.c"	break;
000475   2d0e     goto    0x050e           	GOTO	_00212_DS_
                                           _00208_DS_
                                           ;	.line	87; "gpio.c"	ret =  READ_REGISTER_PIN(PORTC, pin);
000476   3000     movlw   0x00             	MOVLW	0x00
000477   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
000478   1303     bcf     0x03, 0x6        
000479   00b5     movwf   0x35             	MOVWF	r0x1003
00047a   3001     movlw   0x01             	MOVLW	0x01
00047b   00b2     movwf   0x32             	MOVWF	r0x1000
00047c   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
00047d   3c00     sublw   0x00             	SUBLW	0x00
00047e   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00047f   2c87     goto    0x0487           	GOTO	_00229_DS_
                                           _00228_DS_
000480   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
000481   1303     bcf     0x03, 0x6        
000482   0db2     rlf     0x32, 0x1        	RLF	r0x1000,F
000483   0db5     rlf     0x35, 0x1        	RLF	r0x1003,F
000484   3e01     addlw   0x01             	ADDLW	0x01
000485   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000486   2c80     goto    0x0480           	GOTO	_00228_DS_
                                           _00229_DS_
000487   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
000488   1303     bcf     0x03, 0x6        
000489   0807     movf    0x07, 0x0        	MOVF	_PORTC,W
00048a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
00048b   1303     bcf     0x03, 0x6        
00048c   00b6     movwf   0x36             	MOVWF	r0x1004
00048d   01b7     clrf    0x37             	CLRF	r0x1005
00048e   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
00048f   05b2     andwf   0x32, 0x1        	ANDWF	r0x1000,F
000490   3000     movlw   0x00             	MOVLW	0x00
000491   05b5     andwf   0x35, 0x1        	ANDWF	r0x1003,F
000492   0835     movf    0x35, 0x0        	MOVF	r0x1003,W
000493   00b7     movwf   0x37             	MOVWF	r0x1005
000494   0832     movf    0x32, 0x0        	MOVF	r0x1000,W
000495   00b6     movwf   0x36             	MOVWF	r0x1004
000496   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
000497   3c00     sublw   0x00             	SUBLW	0x00
000498   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000499   2ca4     goto    0x04a4           	GOTO	_00231_DS_
                                           _00230_DS_
00049a   1003     bcf     0x03, 0x0        	BCF	STATUS,0
00049b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
00049c   1303     bcf     0x03, 0x6        
00049d   1bb7     btfsc   0x37, 0x7        	BTFSC	r0x1005,7
00049e   1403     bsf     0x03, 0x0        	BSF	STATUS,0
00049f   0cb7     rrf     0x37, 0x1        	RRF	r0x1005,F
0004a0   0cb6     rrf     0x36, 0x1        	RRF	r0x1004,F
0004a1   3e01     addlw   0x01             	ADDLW	0x01
0004a2   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0004a3   2c9a     goto    0x049a           	GOTO	_00230_DS_
                                           _00231_DS_
0004a4   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
0004a5   1303     bcf     0x03, 0x6        
0004a6   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
0004a7   00b4     movwf   0x34             	MOVWF	r0x1002
                                           ;	.line	88; "gpio.c"	break;
0004a8   2d0e     goto    0x050e           	GOTO	_00212_DS_
                                           _00209_DS_
                                           ;	.line	90; "gpio.c"	ret =  READ_REGISTER_PIN(PORTD, pin);
0004a9   3000     movlw   0x00             	MOVLW	0x00
0004aa   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
0004ab   1303     bcf     0x03, 0x6        
0004ac   00b5     movwf   0x35             	MOVWF	r0x1003
0004ad   3001     movlw   0x01             	MOVLW	0x01
0004ae   00b2     movwf   0x32             	MOVWF	r0x1000
0004af   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
0004b0   3c00     sublw   0x00             	SUBLW	0x00
0004b1   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004b2   2cba     goto    0x04ba           	GOTO	_00233_DS_
                                           _00232_DS_
0004b3   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
0004b4   1303     bcf     0x03, 0x6        
0004b5   0db2     rlf     0x32, 0x1        	RLF	r0x1000,F
0004b6   0db5     rlf     0x35, 0x1        	RLF	r0x1003,F
0004b7   3e01     addlw   0x01             	ADDLW	0x01
0004b8   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0004b9   2cb3     goto    0x04b3           	GOTO	_00232_DS_
                                           _00233_DS_
0004ba   1283     bcf     0x03, 0x5        	BANKSEL	_PORTD
0004bb   1303     bcf     0x03, 0x6        
0004bc   0808     movf    0x08, 0x0        	MOVF	_PORTD,W
0004bd   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
0004be   1303     bcf     0x03, 0x6        
0004bf   00b6     movwf   0x36             	MOVWF	r0x1004
0004c0   01b7     clrf    0x37             	CLRF	r0x1005
0004c1   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
0004c2   05b2     andwf   0x32, 0x1        	ANDWF	r0x1000,F
0004c3   3000     movlw   0x00             	MOVLW	0x00
0004c4   05b5     andwf   0x35, 0x1        	ANDWF	r0x1003,F
0004c5   0835     movf    0x35, 0x0        	MOVF	r0x1003,W
0004c6   00b7     movwf   0x37             	MOVWF	r0x1005
0004c7   0832     movf    0x32, 0x0        	MOVF	r0x1000,W
0004c8   00b6     movwf   0x36             	MOVWF	r0x1004
0004c9   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
0004ca   3c00     sublw   0x00             	SUBLW	0x00
0004cb   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004cc   2cd7     goto    0x04d7           	GOTO	_00235_DS_
                                           _00234_DS_
0004cd   1003     bcf     0x03, 0x0        	BCF	STATUS,0
0004ce   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
0004cf   1303     bcf     0x03, 0x6        
0004d0   1bb7     btfsc   0x37, 0x7        	BTFSC	r0x1005,7
0004d1   1403     bsf     0x03, 0x0        	BSF	STATUS,0
0004d2   0cb7     rrf     0x37, 0x1        	RRF	r0x1005,F
0004d3   0cb6     rrf     0x36, 0x1        	RRF	r0x1004,F
0004d4   3e01     addlw   0x01             	ADDLW	0x01
0004d5   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0004d6   2ccd     goto    0x04cd           	GOTO	_00234_DS_
                                           _00235_DS_
0004d7   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
0004d8   1303     bcf     0x03, 0x6        
0004d9   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
0004da   00b4     movwf   0x34             	MOVWF	r0x1002
                                           ;	.line	91; "gpio.c"	break;
0004db   2d0e     goto    0x050e           	GOTO	_00212_DS_
                                           _00210_DS_
                                           ;	.line	93; "gpio.c"	ret =  READ_REGISTER_PIN(PORTE, pin);
0004dc   3000     movlw   0x00             	MOVLW	0x00
0004dd   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
0004de   1303     bcf     0x03, 0x6        
0004df   00b5     movwf   0x35             	MOVWF	r0x1003
0004e0   3001     movlw   0x01             	MOVLW	0x01
0004e1   00b2     movwf   0x32             	MOVWF	r0x1000
0004e2   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
0004e3   3c00     sublw   0x00             	SUBLW	0x00
0004e4   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004e5   2ced     goto    0x04ed           	GOTO	_00237_DS_
                                           _00236_DS_
0004e6   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
0004e7   1303     bcf     0x03, 0x6        
0004e8   0db2     rlf     0x32, 0x1        	RLF	r0x1000,F
0004e9   0db5     rlf     0x35, 0x1        	RLF	r0x1003,F
0004ea   3e01     addlw   0x01             	ADDLW	0x01
0004eb   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0004ec   2ce6     goto    0x04e6           	GOTO	_00236_DS_
                                           _00237_DS_
0004ed   1283     bcf     0x03, 0x5        	BANKSEL	_PORTE
0004ee   1303     bcf     0x03, 0x6        
0004ef   0809     movf    0x09, 0x0        	MOVF	_PORTE,W
0004f0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
0004f1   1303     bcf     0x03, 0x6        
0004f2   00b6     movwf   0x36             	MOVWF	r0x1004
0004f3   01b7     clrf    0x37             	CLRF	r0x1005
0004f4   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
0004f5   05b2     andwf   0x32, 0x1        	ANDWF	r0x1000,F
0004f6   3000     movlw   0x00             	MOVLW	0x00
0004f7   05b5     andwf   0x35, 0x1        	ANDWF	r0x1003,F
0004f8   0835     movf    0x35, 0x0        	MOVF	r0x1003,W
0004f9   00b7     movwf   0x37             	MOVWF	r0x1005
0004fa   0832     movf    0x32, 0x0        	MOVF	r0x1000,W
0004fb   00b6     movwf   0x36             	MOVWF	r0x1004
0004fc   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
0004fd   3c00     sublw   0x00             	SUBLW	0x00
0004fe   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004ff   2d0a     goto    0x050a           	GOTO	_00239_DS_
                                           _00238_DS_
000500   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000501   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
000502   1303     bcf     0x03, 0x6        
000503   1bb7     btfsc   0x37, 0x7        	BTFSC	r0x1005,7
000504   1403     bsf     0x03, 0x0        	BSF	STATUS,0
000505   0cb7     rrf     0x37, 0x1        	RRF	r0x1005,F
000506   0cb6     rrf     0x36, 0x1        	RRF	r0x1004,F
000507   3e01     addlw   0x01             	ADDLW	0x01
000508   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000509   2d00     goto    0x0500           	GOTO	_00238_DS_
                                           _00239_DS_
00050a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
00050b   1303     bcf     0x03, 0x6        
00050c   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
00050d   00b4     movwf   0x34             	MOVWF	r0x1002
                                           _00212_DS_
                                           ;	.line	100; "gpio.c"	return ret;
00050e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1002
00050f   1303     bcf     0x03, 0x6        
000510   0834     movf    0x34, 0x0        	MOVF	r0x1002,W
000511   0008     return                   	RETURN	
                                           ; exit point of _GPIO_GetPortPinState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_SetPortState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;9 compiler assigned registers:
                                           ;   r0x100A
                                           ;   STK00
                                           ;   r0x100B
                                           ;   r0x100C
                                           ;   r0x100D
                                           ;   r0x100E
                                           ;   r0x100F
                                           ;   r0x1010
                                           ;   STK01
                                           ;; Starting pCode block
                                           _GPIO_SetPortState	;Function start
                                           ; 2 exit points
                                           ;	.line	64; "gpio.c"	void GPIO_SetPortState(tPort port, unsigned char state)
000512   1683     bsf     0x03, 0x5        	BANKSEL	r0x100A
000513   1303     bcf     0x03, 0x6        
000514   00ab     movwf   0x2b             	MOVWF	r0x100A
000515   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000516   00ac     movwf   0x2c             	MOVWF	r0x100B
                                           ;	.line	68; "gpio.c"	for (i = 0; i < 8; i++)
000517   01ad     clrf    0x2d             	CLRF	r0x100C
                                           _00190_DS_
                                           ;	.line	70; "gpio.c"	GPIO_SetPortPinState(port, i, READ_REGISTER_PIN(state, i));
000518   3000     movlw   0x00             	MOVLW	0x00
000519   1683     bsf     0x03, 0x5        	BANKSEL	r0x100D
00051a   1303     bcf     0x03, 0x6        
00051b   00af     movwf   0x2f             	MOVWF	r0x100D
00051c   3001     movlw   0x01             	MOVLW	0x01
00051d   00ae     movwf   0x2e             	MOVWF	r0x100E
00051e   082d     movf    0x2d, 0x0        	MOVF	r0x100C,W
00051f   3c00     sublw   0x00             	SUBLW	0x00
000520   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000521   2d29     goto    0x0529           	GOTO	_00199_DS_
                                           _00198_DS_
000522   1683     bsf     0x03, 0x5        	BANKSEL	r0x100E
000523   1303     bcf     0x03, 0x6        
000524   0dae     rlf     0x2e, 0x1        	RLF	r0x100E,F
000525   0daf     rlf     0x2f, 0x1        	RLF	r0x100D,F
000526   3e01     addlw   0x01             	ADDLW	0x01
000527   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000528   2d22     goto    0x0522           	GOTO	_00198_DS_
                                           ;;100	MOVF	r0x100B,W
                                           _00199_DS_
000529   1683     bsf     0x03, 0x5        	BANKSEL	r0x1010
00052a   1303     bcf     0x03, 0x6        
00052b   01b1     clrf    0x31             	CLRF	r0x1010
                                           ;;99	MOVF	r0x100F,W
00052c   082c     movf    0x2c, 0x0        	MOVF	r0x100B,W
00052d   00b0     movwf   0x30             	MOVWF	r0x100F
00052e   05ae     andwf   0x2e, 0x1        	ANDWF	r0x100E,F
00052f   3000     movlw   0x00             	MOVLW	0x00
000530   05af     andwf   0x2f, 0x1        	ANDWF	r0x100D,F
000531   082f     movf    0x2f, 0x0        	MOVF	r0x100D,W
000532   00b1     movwf   0x31             	MOVWF	r0x1010
000533   082e     movf    0x2e, 0x0        	MOVF	r0x100E,W
000534   00b0     movwf   0x30             	MOVWF	r0x100F
000535   082d     movf    0x2d, 0x0        	MOVF	r0x100C,W
000536   3c00     sublw   0x00             	SUBLW	0x00
000537   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000538   2d43     goto    0x0543           	GOTO	_00201_DS_
                                           _00200_DS_
000539   1003     bcf     0x03, 0x0        	BCF	STATUS,0
00053a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1010
00053b   1303     bcf     0x03, 0x6        
00053c   1bb1     btfsc   0x31, 0x7        	BTFSC	r0x1010,7
00053d   1403     bsf     0x03, 0x0        	BSF	STATUS,0
00053e   0cb1     rrf     0x31, 0x1        	RRF	r0x1010,F
00053f   0cb0     rrf     0x30, 0x1        	RRF	r0x100F,F
000540   3e01     addlw   0x01             	ADDLW	0x01
000541   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000542   2d39     goto    0x0539           	GOTO	_00200_DS_
                                           _00201_DS_
000543   1683     bsf     0x03, 0x5        	BANKSEL	r0x100F
000544   1303     bcf     0x03, 0x6        
000545   0830     movf    0x30, 0x0        	MOVF	r0x100F,W
000546   00ae     movwf   0x2e             	MOVWF	r0x100E
000547   00fe     movwf   0x7e             	MOVWF	STK01
000548   082d     movf    0x2d, 0x0        	MOVF	r0x100C,W
000549   00ff     movwf   0x7f             	MOVWF	STK00
00054a   082b     movf    0x2b, 0x0        	MOVF	r0x100A,W
00054b   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
                                           ;	.line	68; "gpio.c"	for (i = 0; i < 8; i++)
00054c   1683     bsf     0x03, 0x5        	BANKSEL	r0x100C
00054d   1303     bcf     0x03, 0x6        
00054e   0aad     incf    0x2d, 0x1        	INCF	r0x100C,F
                                           ;;unsigned compare: left < lit(0x8=8), size=1
00054f   3008     movlw   0x08             	MOVLW	0x08
000550   022d     subwf   0x2d, 0x0        	SUBWF	r0x100C,W
000551   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000552   2d18     goto    0x0518           	GOTO	_00190_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
000553   0008     return                   	RETURN	
                                           ; exit point of _GPIO_SetPortState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_SetPortPinState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;6 compiler assigned registers:
                                           ;   r0x1006
                                           ;   STK00
                                           ;   r0x1007
                                           ;   STK01
                                           ;   r0x1008
                                           ;   r0x1009
                                           ;; Starting pCode block
                                           _GPIO_SetPortPinState	;Function start
                                           ; 2 exit points
                                           ;	.line	42; "gpio.c"	void GPIO_SetPortPinState(tPort port, unsigned char pin, unsigned char state)
000554   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000555   1303     bcf     0x03, 0x6        
000556   00a7     movwf   0x27             	MOVWF	r0x1006
000557   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000558   00a8     movwf   0x28             	MOVWF	r0x1007
000559   087e     movf    0x7e, 0x0        	MOVF	STK01,W
00055a   00a9     movwf   0x29             	MOVWF	r0x1008
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x5=5), size=1
                                           ;	.line	44; "gpio.c"	switch(port)
00055b   3005     movlw   0x05             	MOVLW	0x05
00055c   0227     subwf   0x27, 0x0        	SUBWF	r0x1006,W
00055d   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00055e   2e48     goto    0x0648           	GOTO	_00158_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00055f   3005     movlw   0x05             	MOVLW	HIGH(_00164_DS_)
000560   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000561   1303     bcf     0x03, 0x6        
000562   008a     movwf   0x0a             	MOVWF	PCLATH
000563   306d     movlw   0x6d             	MOVLW	_00164_DS_
000564   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000565   1303     bcf     0x03, 0x6        
000566   0727     addwf   0x27, 0x0        	ADDWF	r0x1006,W
000567   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000568   2d6c     goto    0x056c           	GOTO	_00002_DS_
000569   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00056a   1303     bcf     0x03, 0x6        
00056b   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00002_DS_
00056c   0082     movwf   0x02             	MOVWF	PCL
                                           _00164_DS_
00056d   2d72     goto    0x0572           	GOTO	_00152_DS_
00056e   2d9d     goto    0x059d           	GOTO	_00153_DS_
00056f   2dc8     goto    0x05c8           	GOTO	_00154_DS_
000570   2df3     goto    0x05f3           	GOTO	_00155_DS_
000571   2e1e     goto    0x061e           	GOTO	_00156_DS_
                                           _00152_DS_
                                           ;	.line	47; "gpio.c"	SET_REGISTER_PIN(PORTA, pin, state);
000572   3001     movlw   0x01             	MOVLW	0x01
000573   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000574   1303     bcf     0x03, 0x6        
000575   00a7     movwf   0x27             	MOVWF	r0x1006
000576   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
000577   3c00     sublw   0x00             	SUBLW	0x00
000578   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000579   2d80     goto    0x0580           	GOTO	_00166_DS_
                                           _00165_DS_
00057a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
00057b   1303     bcf     0x03, 0x6        
00057c   0da7     rlf     0x27, 0x1        	RLF	r0x1006,F
00057d   3e01     addlw   0x01             	ADDLW	0x01
00057e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00057f   2d7a     goto    0x057a           	GOTO	_00165_DS_
                                           _00166_DS_
000580   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000581   1303     bcf     0x03, 0x6        
000582   09a7     comf    0x27, 0x1        	COMF	r0x1006,F
000583   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
000584   1303     bcf     0x03, 0x6        
000585   0805     movf    0x05, 0x0        	MOVF	_PORTA,W
000586   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000587   1303     bcf     0x03, 0x6        
000588   05a7     andwf   0x27, 0x1        	ANDWF	r0x1006,F
000589   0829     movf    0x29, 0x0        	MOVF	r0x1008,W
00058a   00aa     movwf   0x2a             	MOVWF	r0x1009
00058b   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
00058c   3c00     sublw   0x00             	SUBLW	0x00
00058d   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00058e   2d95     goto    0x0595           	GOTO	_00168_DS_
                                           _00167_DS_
00058f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000590   1303     bcf     0x03, 0x6        
000591   0daa     rlf     0x2a, 0x1        	RLF	r0x1009,F
000592   3e01     addlw   0x01             	ADDLW	0x01
000593   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000594   2d8f     goto    0x058f           	GOTO	_00167_DS_
                                           _00168_DS_
000595   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000596   1303     bcf     0x03, 0x6        
000597   082a     movf    0x2a, 0x0        	MOVF	r0x1009,W
000598   0427     iorwf   0x27, 0x0        	IORWF	r0x1006,W
000599   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
00059a   1303     bcf     0x03, 0x6        
00059b   0085     movwf   0x05             	MOVWF	_PORTA
                                           ;	.line	48; "gpio.c"	break;
00059c   2e48     goto    0x0648           	GOTO	_00158_DS_
                                           _00153_DS_
                                           ;	.line	50; "gpio.c"	SET_REGISTER_PIN(PORTB, pin, state);
00059d   3001     movlw   0x01             	MOVLW	0x01
00059e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
00059f   1303     bcf     0x03, 0x6        
0005a0   00a7     movwf   0x27             	MOVWF	r0x1006
0005a1   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
0005a2   3c00     sublw   0x00             	SUBLW	0x00
0005a3   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005a4   2dab     goto    0x05ab           	GOTO	_00170_DS_
                                           _00169_DS_
0005a5   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005a6   1303     bcf     0x03, 0x6        
0005a7   0da7     rlf     0x27, 0x1        	RLF	r0x1006,F
0005a8   3e01     addlw   0x01             	ADDLW	0x01
0005a9   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0005aa   2da5     goto    0x05a5           	GOTO	_00169_DS_
                                           _00170_DS_
0005ab   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005ac   1303     bcf     0x03, 0x6        
0005ad   09a7     comf    0x27, 0x1        	COMF	r0x1006,F
0005ae   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
0005af   1303     bcf     0x03, 0x6        
0005b0   0806     movf    0x06, 0x0        	MOVF	_PORTB,W
0005b1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005b2   1303     bcf     0x03, 0x6        
0005b3   05a7     andwf   0x27, 0x1        	ANDWF	r0x1006,F
0005b4   0829     movf    0x29, 0x0        	MOVF	r0x1008,W
0005b5   00aa     movwf   0x2a             	MOVWF	r0x1009
0005b6   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
0005b7   3c00     sublw   0x00             	SUBLW	0x00
0005b8   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005b9   2dc0     goto    0x05c0           	GOTO	_00172_DS_
                                           _00171_DS_
0005ba   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
0005bb   1303     bcf     0x03, 0x6        
0005bc   0daa     rlf     0x2a, 0x1        	RLF	r0x1009,F
0005bd   3e01     addlw   0x01             	ADDLW	0x01
0005be   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0005bf   2dba     goto    0x05ba           	GOTO	_00171_DS_
                                           _00172_DS_
0005c0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
0005c1   1303     bcf     0x03, 0x6        
0005c2   082a     movf    0x2a, 0x0        	MOVF	r0x1009,W
0005c3   0427     iorwf   0x27, 0x0        	IORWF	r0x1006,W
0005c4   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
0005c5   1303     bcf     0x03, 0x6        
0005c6   0086     movwf   0x06             	MOVWF	_PORTB
                                           ;	.line	51; "gpio.c"	break;
0005c7   2e48     goto    0x0648           	GOTO	_00158_DS_
                                           _00154_DS_
                                           ;	.line	53; "gpio.c"	SET_REGISTER_PIN(PORTC, pin, state);
0005c8   3001     movlw   0x01             	MOVLW	0x01
0005c9   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005ca   1303     bcf     0x03, 0x6        
0005cb   00a7     movwf   0x27             	MOVWF	r0x1006
0005cc   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
0005cd   3c00     sublw   0x00             	SUBLW	0x00
0005ce   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005cf   2dd6     goto    0x05d6           	GOTO	_00174_DS_
                                           _00173_DS_
0005d0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005d1   1303     bcf     0x03, 0x6        
0005d2   0da7     rlf     0x27, 0x1        	RLF	r0x1006,F
0005d3   3e01     addlw   0x01             	ADDLW	0x01
0005d4   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0005d5   2dd0     goto    0x05d0           	GOTO	_00173_DS_
                                           _00174_DS_
0005d6   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005d7   1303     bcf     0x03, 0x6        
0005d8   09a7     comf    0x27, 0x1        	COMF	r0x1006,F
0005d9   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
0005da   1303     bcf     0x03, 0x6        
0005db   0807     movf    0x07, 0x0        	MOVF	_PORTC,W
0005dc   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005dd   1303     bcf     0x03, 0x6        
0005de   05a7     andwf   0x27, 0x1        	ANDWF	r0x1006,F
0005df   0829     movf    0x29, 0x0        	MOVF	r0x1008,W
0005e0   00aa     movwf   0x2a             	MOVWF	r0x1009
0005e1   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
0005e2   3c00     sublw   0x00             	SUBLW	0x00
0005e3   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005e4   2deb     goto    0x05eb           	GOTO	_00176_DS_
                                           _00175_DS_
0005e5   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
0005e6   1303     bcf     0x03, 0x6        
0005e7   0daa     rlf     0x2a, 0x1        	RLF	r0x1009,F
0005e8   3e01     addlw   0x01             	ADDLW	0x01
0005e9   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0005ea   2de5     goto    0x05e5           	GOTO	_00175_DS_
                                           _00176_DS_
0005eb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
0005ec   1303     bcf     0x03, 0x6        
0005ed   082a     movf    0x2a, 0x0        	MOVF	r0x1009,W
0005ee   0427     iorwf   0x27, 0x0        	IORWF	r0x1006,W
0005ef   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
0005f0   1303     bcf     0x03, 0x6        
0005f1   0087     movwf   0x07             	MOVWF	_PORTC
                                           ;	.line	54; "gpio.c"	break;
0005f2   2e48     goto    0x0648           	GOTO	_00158_DS_
                                           _00155_DS_
                                           ;	.line	56; "gpio.c"	SET_REGISTER_PIN(PORTD, pin, state);
0005f3   3001     movlw   0x01             	MOVLW	0x01
0005f4   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005f5   1303     bcf     0x03, 0x6        
0005f6   00a7     movwf   0x27             	MOVWF	r0x1006
0005f7   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
0005f8   3c00     sublw   0x00             	SUBLW	0x00
0005f9   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005fa   2e01     goto    0x0601           	GOTO	_00178_DS_
                                           _00177_DS_
0005fb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005fc   1303     bcf     0x03, 0x6        
0005fd   0da7     rlf     0x27, 0x1        	RLF	r0x1006,F
0005fe   3e01     addlw   0x01             	ADDLW	0x01
0005ff   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000600   2dfb     goto    0x05fb           	GOTO	_00177_DS_
                                           _00178_DS_
000601   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000602   1303     bcf     0x03, 0x6        
000603   09a7     comf    0x27, 0x1        	COMF	r0x1006,F
000604   1283     bcf     0x03, 0x5        	BANKSEL	_PORTD
000605   1303     bcf     0x03, 0x6        
000606   0808     movf    0x08, 0x0        	MOVF	_PORTD,W
000607   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000608   1303     bcf     0x03, 0x6        
000609   05a7     andwf   0x27, 0x1        	ANDWF	r0x1006,F
00060a   0829     movf    0x29, 0x0        	MOVF	r0x1008,W
00060b   00aa     movwf   0x2a             	MOVWF	r0x1009
00060c   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
00060d   3c00     sublw   0x00             	SUBLW	0x00
00060e   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00060f   2e16     goto    0x0616           	GOTO	_00180_DS_
                                           _00179_DS_
000610   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000611   1303     bcf     0x03, 0x6        
000612   0daa     rlf     0x2a, 0x1        	RLF	r0x1009,F
000613   3e01     addlw   0x01             	ADDLW	0x01
000614   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000615   2e10     goto    0x0610           	GOTO	_00179_DS_
                                           _00180_DS_
000616   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000617   1303     bcf     0x03, 0x6        
000618   082a     movf    0x2a, 0x0        	MOVF	r0x1009,W
000619   0427     iorwf   0x27, 0x0        	IORWF	r0x1006,W
00061a   1283     bcf     0x03, 0x5        	BANKSEL	_PORTD
00061b   1303     bcf     0x03, 0x6        
00061c   0088     movwf   0x08             	MOVWF	_PORTD
                                           ;	.line	57; "gpio.c"	break;
00061d   2e48     goto    0x0648           	GOTO	_00158_DS_
                                           _00156_DS_
                                           ;	.line	59; "gpio.c"	SET_REGISTER_PIN(PORTE, pin, state);
00061e   3001     movlw   0x01             	MOVLW	0x01
00061f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000620   1303     bcf     0x03, 0x6        
000621   00a7     movwf   0x27             	MOVWF	r0x1006
000622   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
000623   3c00     sublw   0x00             	SUBLW	0x00
000624   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000625   2e2c     goto    0x062c           	GOTO	_00182_DS_
                                           _00181_DS_
000626   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000627   1303     bcf     0x03, 0x6        
000628   0da7     rlf     0x27, 0x1        	RLF	r0x1006,F
000629   3e01     addlw   0x01             	ADDLW	0x01
00062a   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00062b   2e26     goto    0x0626           	GOTO	_00181_DS_
                                           _00182_DS_
00062c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
00062d   1303     bcf     0x03, 0x6        
00062e   09a7     comf    0x27, 0x1        	COMF	r0x1006,F
00062f   1283     bcf     0x03, 0x5        	BANKSEL	_PORTE
000630   1303     bcf     0x03, 0x6        
000631   0809     movf    0x09, 0x0        	MOVF	_PORTE,W
000632   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000633   1303     bcf     0x03, 0x6        
000634   05a7     andwf   0x27, 0x1        	ANDWF	r0x1006,F
000635   0829     movf    0x29, 0x0        	MOVF	r0x1008,W
000636   00aa     movwf   0x2a             	MOVWF	r0x1009
000637   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
000638   3c00     sublw   0x00             	SUBLW	0x00
000639   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00063a   2e41     goto    0x0641           	GOTO	_00184_DS_
                                           _00183_DS_
00063b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
00063c   1303     bcf     0x03, 0x6        
00063d   0daa     rlf     0x2a, 0x1        	RLF	r0x1009,F
00063e   3e01     addlw   0x01             	ADDLW	0x01
00063f   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000640   2e3b     goto    0x063b           	GOTO	_00183_DS_
                                           _00184_DS_
000641   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000642   1303     bcf     0x03, 0x6        
000643   082a     movf    0x2a, 0x0        	MOVF	r0x1009,W
000644   0427     iorwf   0x27, 0x0        	IORWF	r0x1006,W
000645   1283     bcf     0x03, 0x5        	BANKSEL	_PORTE
000646   1303     bcf     0x03, 0x6        
000647   0089     movwf   0x09             	MOVWF	_PORTE
                                           _00158_DS_
                                           ;	.line	61; "gpio.c"	}
000648   0008     return                   	RETURN	
                                           ; exit point of _GPIO_SetPortPinState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _GPIO_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	39; "gpio.c"	}
000649   0008     return                   	RETURN	
                                           ; exit point of _GPIO_Update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_InitPort	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;5 compiler assigned registers:
                                           ;   r0x1015
                                           ;   STK00
                                           ;   r0x1016
                                           ;   r0x1017
                                           ;   STK01
                                           ;; Starting pCode block
                                           _GPIO_InitPort	;Function start
                                           ; 2 exit points
                                           ;	.line	26; "gpio.c"	void GPIO_InitPort(tPort port, tPortDirection direction)
00064a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
00064b   1303     bcf     0x03, 0x6        
00064c   00a4     movwf   0x24             	MOVWF	r0x1015
00064d   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00064e   00a5     movwf   0x25             	MOVWF	r0x1016
                                           ;	.line	30; "gpio.c"	for (i = 0; i < 8; i++)
00064f   01a6     clrf    0x26             	CLRF	r0x1017
                                           _00143_DS_
                                           ;	.line	32; "gpio.c"	GPIO_InitPortPin(port, i, direction);
000650   1683     bsf     0x03, 0x5        	BANKSEL	r0x1016
000651   1303     bcf     0x03, 0x6        
000652   0825     movf    0x25, 0x0        	MOVF	r0x1016,W
000653   00fe     movwf   0x7e             	MOVWF	STK01
000654   0826     movf    0x26, 0x0        	MOVF	r0x1017,W
000655   00ff     movwf   0x7f             	MOVWF	STK00
000656   0824     movf    0x24, 0x0        	MOVF	r0x1015,W
000657   2660     call    0x0660           	CALL	_GPIO_InitPortPin
                                           ;	.line	30; "gpio.c"	for (i = 0; i < 8; i++)
000658   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
000659   1303     bcf     0x03, 0x6        
00065a   0aa6     incf    0x26, 0x1        	INCF	r0x1017,F
                                           ;;unsigned compare: left < lit(0x8=8), size=1
00065b   3008     movlw   0x08             	MOVLW	0x08
00065c   0226     subwf   0x26, 0x0        	SUBWF	r0x1017,W
00065d   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00065e   2e50     goto    0x0650           	GOTO	_00143_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00065f   0008     return                   	RETURN	
                                           ; exit point of _GPIO_InitPort
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_InitPortPin	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;6 compiler assigned registers:
                                           ;   r0x1011
                                           ;   STK00
                                           ;   r0x1012
                                           ;   STK01
                                           ;   r0x1013
                                           ;   r0x1014
                                           ;; Starting pCode block
                                           _GPIO_InitPortPin	;Function start
                                           ; 2 exit points
                                           ;	.line	4; "gpio.c"	void GPIO_InitPortPin(tPort port, unsigned char pin, tPortDirection direction)
000660   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000661   1303     bcf     0x03, 0x6        
000662   00a0     movwf   0x20             	MOVWF	r0x1011
000663   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000664   00a1     movwf   0x21             	MOVWF	r0x1012
000665   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000666   00a2     movwf   0x22             	MOVWF	r0x1013
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x5=5), size=1
                                           ;	.line	6; "gpio.c"	switch(port)
000667   3005     movlw   0x05             	MOVLW	0x05
000668   0220     subwf   0x20, 0x0        	SUBWF	r0x1011,W
000669   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00066a   2f54     goto    0x0754           	GOTO	_00111_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00066b   3006     movlw   0x06             	MOVLW	HIGH(_00117_DS_)
00066c   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00066d   1303     bcf     0x03, 0x6        
00066e   008a     movwf   0x0a             	MOVWF	PCLATH
00066f   3079     movlw   0x79             	MOVLW	_00117_DS_
000670   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000671   1303     bcf     0x03, 0x6        
000672   0720     addwf   0x20, 0x0        	ADDWF	r0x1011,W
000673   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000674   2e78     goto    0x0678           	GOTO	_00003_DS_
000675   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000676   1303     bcf     0x03, 0x6        
000677   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00003_DS_
000678   0082     movwf   0x02             	MOVWF	PCL
                                           _00117_DS_
000679   2e7e     goto    0x067e           	GOTO	_00105_DS_
00067a   2ea9     goto    0x06a9           	GOTO	_00106_DS_
00067b   2ed4     goto    0x06d4           	GOTO	_00107_DS_
00067c   2eff     goto    0x06ff           	GOTO	_00108_DS_
00067d   2f2a     goto    0x072a           	GOTO	_00109_DS_
                                           _00105_DS_
                                           ;	.line	9; "gpio.c"	SET_REGISTER_PIN(TRISA, pin, direction);
00067e   3001     movlw   0x01             	MOVLW	0x01
00067f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000680   1303     bcf     0x03, 0x6        
000681   00a0     movwf   0x20             	MOVWF	r0x1011
000682   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
000683   3c00     sublw   0x00             	SUBLW	0x00
000684   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000685   2e8c     goto    0x068c           	GOTO	_00119_DS_
                                           _00118_DS_
000686   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000687   1303     bcf     0x03, 0x6        
000688   0da0     rlf     0x20, 0x1        	RLF	r0x1011,F
000689   3e01     addlw   0x01             	ADDLW	0x01
00068a   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00068b   2e86     goto    0x0686           	GOTO	_00118_DS_
                                           _00119_DS_
00068c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00068d   1303     bcf     0x03, 0x6        
00068e   09a0     comf    0x20, 0x1        	COMF	r0x1011,F
00068f   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
000690   1303     bcf     0x03, 0x6        
000691   0805     movf    0x05, 0x0        	MOVF	_TRISA,W
000692   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000693   1303     bcf     0x03, 0x6        
000694   05a0     andwf   0x20, 0x1        	ANDWF	r0x1011,F
000695   0822     movf    0x22, 0x0        	MOVF	r0x1013,W
000696   00a3     movwf   0x23             	MOVWF	r0x1014
000697   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
000698   3c00     sublw   0x00             	SUBLW	0x00
000699   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00069a   2ea1     goto    0x06a1           	GOTO	_00121_DS_
                                           _00120_DS_
00069b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00069c   1303     bcf     0x03, 0x6        
00069d   0da3     rlf     0x23, 0x1        	RLF	r0x1014,F
00069e   3e01     addlw   0x01             	ADDLW	0x01
00069f   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0006a0   2e9b     goto    0x069b           	GOTO	_00120_DS_
                                           _00121_DS_
0006a1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
0006a2   1303     bcf     0x03, 0x6        
0006a3   0823     movf    0x23, 0x0        	MOVF	r0x1014,W
0006a4   0420     iorwf   0x20, 0x0        	IORWF	r0x1011,W
0006a5   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
0006a6   1303     bcf     0x03, 0x6        
0006a7   0085     movwf   0x05             	MOVWF	_TRISA
                                           ;	.line	10; "gpio.c"	break;
0006a8   2f54     goto    0x0754           	GOTO	_00111_DS_
                                           _00106_DS_
                                           ;	.line	12; "gpio.c"	SET_REGISTER_PIN(TRISB, pin, direction);
0006a9   3001     movlw   0x01             	MOVLW	0x01
0006aa   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006ab   1303     bcf     0x03, 0x6        
0006ac   00a0     movwf   0x20             	MOVWF	r0x1011
0006ad   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
0006ae   3c00     sublw   0x00             	SUBLW	0x00
0006af   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0006b0   2eb7     goto    0x06b7           	GOTO	_00123_DS_
                                           _00122_DS_
0006b1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006b2   1303     bcf     0x03, 0x6        
0006b3   0da0     rlf     0x20, 0x1        	RLF	r0x1011,F
0006b4   3e01     addlw   0x01             	ADDLW	0x01
0006b5   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0006b6   2eb1     goto    0x06b1           	GOTO	_00122_DS_
                                           _00123_DS_
0006b7   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006b8   1303     bcf     0x03, 0x6        
0006b9   09a0     comf    0x20, 0x1        	COMF	r0x1011,F
0006ba   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
0006bb   1303     bcf     0x03, 0x6        
0006bc   0806     movf    0x06, 0x0        	MOVF	_TRISB,W
0006bd   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006be   1303     bcf     0x03, 0x6        
0006bf   05a0     andwf   0x20, 0x1        	ANDWF	r0x1011,F
0006c0   0822     movf    0x22, 0x0        	MOVF	r0x1013,W
0006c1   00a3     movwf   0x23             	MOVWF	r0x1014
0006c2   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
0006c3   3c00     sublw   0x00             	SUBLW	0x00
0006c4   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0006c5   2ecc     goto    0x06cc           	GOTO	_00125_DS_
                                           _00124_DS_
0006c6   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
0006c7   1303     bcf     0x03, 0x6        
0006c8   0da3     rlf     0x23, 0x1        	RLF	r0x1014,F
0006c9   3e01     addlw   0x01             	ADDLW	0x01
0006ca   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0006cb   2ec6     goto    0x06c6           	GOTO	_00124_DS_
                                           _00125_DS_
0006cc   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
0006cd   1303     bcf     0x03, 0x6        
0006ce   0823     movf    0x23, 0x0        	MOVF	r0x1014,W
0006cf   0420     iorwf   0x20, 0x0        	IORWF	r0x1011,W
0006d0   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
0006d1   1303     bcf     0x03, 0x6        
0006d2   0086     movwf   0x06             	MOVWF	_TRISB
                                           ;	.line	13; "gpio.c"	break;
0006d3   2f54     goto    0x0754           	GOTO	_00111_DS_
                                           _00107_DS_
                                           ;	.line	15; "gpio.c"	SET_REGISTER_PIN(TRISC, pin, direction);
0006d4   3001     movlw   0x01             	MOVLW	0x01
0006d5   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006d6   1303     bcf     0x03, 0x6        
0006d7   00a0     movwf   0x20             	MOVWF	r0x1011
0006d8   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
0006d9   3c00     sublw   0x00             	SUBLW	0x00
0006da   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0006db   2ee2     goto    0x06e2           	GOTO	_00127_DS_
                                           _00126_DS_
0006dc   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006dd   1303     bcf     0x03, 0x6        
0006de   0da0     rlf     0x20, 0x1        	RLF	r0x1011,F
0006df   3e01     addlw   0x01             	ADDLW	0x01
0006e0   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0006e1   2edc     goto    0x06dc           	GOTO	_00126_DS_
                                           _00127_DS_
0006e2   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006e3   1303     bcf     0x03, 0x6        
0006e4   09a0     comf    0x20, 0x1        	COMF	r0x1011,F
0006e5   1683     bsf     0x03, 0x5        	BANKSEL	_TRISC
0006e6   1303     bcf     0x03, 0x6        
0006e7   0807     movf    0x07, 0x0        	MOVF	_TRISC,W
0006e8   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006e9   1303     bcf     0x03, 0x6        
0006ea   05a0     andwf   0x20, 0x1        	ANDWF	r0x1011,F
0006eb   0822     movf    0x22, 0x0        	MOVF	r0x1013,W
0006ec   00a3     movwf   0x23             	MOVWF	r0x1014
0006ed   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
0006ee   3c00     sublw   0x00             	SUBLW	0x00
0006ef   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0006f0   2ef7     goto    0x06f7           	GOTO	_00129_DS_
                                           _00128_DS_
0006f1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
0006f2   1303     bcf     0x03, 0x6        
0006f3   0da3     rlf     0x23, 0x1        	RLF	r0x1014,F
0006f4   3e01     addlw   0x01             	ADDLW	0x01
0006f5   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0006f6   2ef1     goto    0x06f1           	GOTO	_00128_DS_
                                           _00129_DS_
0006f7   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
0006f8   1303     bcf     0x03, 0x6        
0006f9   0823     movf    0x23, 0x0        	MOVF	r0x1014,W
0006fa   0420     iorwf   0x20, 0x0        	IORWF	r0x1011,W
0006fb   1683     bsf     0x03, 0x5        	BANKSEL	_TRISC
0006fc   1303     bcf     0x03, 0x6        
0006fd   0087     movwf   0x07             	MOVWF	_TRISC
                                           ;	.line	16; "gpio.c"	break;
0006fe   2f54     goto    0x0754           	GOTO	_00111_DS_
                                           _00108_DS_
                                           ;	.line	18; "gpio.c"	SET_REGISTER_PIN(TRISD, pin, direction);
0006ff   3001     movlw   0x01             	MOVLW	0x01
000700   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000701   1303     bcf     0x03, 0x6        
000702   00a0     movwf   0x20             	MOVWF	r0x1011
000703   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
000704   3c00     sublw   0x00             	SUBLW	0x00
000705   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000706   2f0d     goto    0x070d           	GOTO	_00131_DS_
                                           _00130_DS_
000707   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000708   1303     bcf     0x03, 0x6        
000709   0da0     rlf     0x20, 0x1        	RLF	r0x1011,F
00070a   3e01     addlw   0x01             	ADDLW	0x01
00070b   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00070c   2f07     goto    0x0707           	GOTO	_00130_DS_
                                           _00131_DS_
00070d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00070e   1303     bcf     0x03, 0x6        
00070f   09a0     comf    0x20, 0x1        	COMF	r0x1011,F
000710   1683     bsf     0x03, 0x5        	BANKSEL	_TRISD
000711   1303     bcf     0x03, 0x6        
000712   0808     movf    0x08, 0x0        	MOVF	_TRISD,W
000713   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000714   1303     bcf     0x03, 0x6        
000715   05a0     andwf   0x20, 0x1        	ANDWF	r0x1011,F
000716   0822     movf    0x22, 0x0        	MOVF	r0x1013,W
000717   00a3     movwf   0x23             	MOVWF	r0x1014
000718   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
000719   3c00     sublw   0x00             	SUBLW	0x00
00071a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00071b   2f22     goto    0x0722           	GOTO	_00133_DS_
                                           _00132_DS_
00071c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00071d   1303     bcf     0x03, 0x6        
00071e   0da3     rlf     0x23, 0x1        	RLF	r0x1014,F
00071f   3e01     addlw   0x01             	ADDLW	0x01
000720   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000721   2f1c     goto    0x071c           	GOTO	_00132_DS_
                                           _00133_DS_
000722   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
000723   1303     bcf     0x03, 0x6        
000724   0823     movf    0x23, 0x0        	MOVF	r0x1014,W
000725   0420     iorwf   0x20, 0x0        	IORWF	r0x1011,W
000726   1683     bsf     0x03, 0x5        	BANKSEL	_TRISD
000727   1303     bcf     0x03, 0x6        
000728   0088     movwf   0x08             	MOVWF	_TRISD
                                           ;	.line	19; "gpio.c"	break;
000729   2f54     goto    0x0754           	GOTO	_00111_DS_
                                           _00109_DS_
                                           ;	.line	21; "gpio.c"	SET_REGISTER_PIN(TRISE, pin, direction);
00072a   3001     movlw   0x01             	MOVLW	0x01
00072b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00072c   1303     bcf     0x03, 0x6        
00072d   00a0     movwf   0x20             	MOVWF	r0x1011
00072e   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
00072f   3c00     sublw   0x00             	SUBLW	0x00
000730   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000731   2f38     goto    0x0738           	GOTO	_00135_DS_
                                           _00134_DS_
000732   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000733   1303     bcf     0x03, 0x6        
000734   0da0     rlf     0x20, 0x1        	RLF	r0x1011,F
000735   3e01     addlw   0x01             	ADDLW	0x01
000736   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000737   2f32     goto    0x0732           	GOTO	_00134_DS_
                                           _00135_DS_
000738   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000739   1303     bcf     0x03, 0x6        
00073a   09a0     comf    0x20, 0x1        	COMF	r0x1011,F
00073b   1683     bsf     0x03, 0x5        	BANKSEL	_TRISE
00073c   1303     bcf     0x03, 0x6        
00073d   0809     movf    0x09, 0x0        	MOVF	_TRISE,W
00073e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00073f   1303     bcf     0x03, 0x6        
000740   05a0     andwf   0x20, 0x1        	ANDWF	r0x1011,F
000741   0822     movf    0x22, 0x0        	MOVF	r0x1013,W
000742   00a3     movwf   0x23             	MOVWF	r0x1014
000743   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
000744   3c00     sublw   0x00             	SUBLW	0x00
000745   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000746   2f4d     goto    0x074d           	GOTO	_00137_DS_
                                           _00136_DS_
000747   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
000748   1303     bcf     0x03, 0x6        
000749   0da3     rlf     0x23, 0x1        	RLF	r0x1014,F
00074a   3e01     addlw   0x01             	ADDLW	0x01
00074b   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00074c   2f47     goto    0x0747           	GOTO	_00136_DS_
                                           _00137_DS_
00074d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00074e   1303     bcf     0x03, 0x6        
00074f   0823     movf    0x23, 0x0        	MOVF	r0x1014,W
000750   0420     iorwf   0x20, 0x0        	IORWF	r0x1011,W
000751   1683     bsf     0x03, 0x5        	BANKSEL	_TRISE
000752   1303     bcf     0x03, 0x6        
000753   0089     movwf   0x09             	MOVWF	_TRISE
                                           _00111_DS_
                                           ;	.line	23; "gpio.c"	}
000754   0008     return                   	RETURN	
                                           ; exit point of _GPIO_InitPortPin
                                           
                                           
                                           ;	code size estimation:
                                           ;	  600+  133 =   733 instructions ( 1732 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:42 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"heater.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_LED_Init
                                           	extern	_LED_Update
                                           	extern	_LED_GetState
                                           	extern	_LED_SetState
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_SettingMode_update
                                           	extern	_SettingMode_Get_SSD_state
                                           	extern	_SettingMode_OFF_mode
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_Heater_update
                                           	global	_Heater_GetState
                                           	global	_Heater_SetState
                                           	global	_Heater_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_heater	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Heater_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _Heater_SetState
                                           ;   _Heater_SetState
                                           ;1 compiler assigned register :
                                           ;   r0x1006
                                           ;; Starting pCode block
                                           _Heater_update	;Function start
                                           ; 2 exit points
                                           ;	.line	20; "heater.c"	Heater_SetState(Flags.Heater_Operation);
001755   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001756   1703     bsf     0x03, 0x6        
001757   0818     movf    0x18, 0x0        	MOVF	(_Flags + 2),W
                                           ;;1	MOVWF	r0x1006
001758   2763     call    0x0763           	CALL	_Heater_SetState
001759   0008     return                   	RETURN	
                                           ; exit point of _Heater_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Heater_GetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;2 compiler assigned registers:
                                           ;   STK00
                                           ;   r0x1007
                                           ;; Starting pCode block
                                           _Heater_GetState	;Function start
                                           ; 2 exit points
                                           ;	.line	16; "heater.c"	return GPIO_GetPortPinState(PORT_C,5);
00175a   3005     movlw   0x05             	MOVLW	0x05
00175b   00ff     movwf   0x7f             	MOVWF	STK00
00175c   3002     movlw   0x02             	MOVLW	0x02
00175d   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
00175e   120a     bcf     0x0a, 0x4        
00175f   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
001760   118a     bcf     0x0a, 0x3        	PAGESEL	$
001761   160a     bsf     0x0a, 0x4        
                                           ;;1	MOVWF	r0x1007
001762   0008     return                   	RETURN	
                                           ; exit point of _Heater_GetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Heater_SetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;3 compiler assigned registers:
                                           ;   r0x1005
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _Heater_SetState	;Function start
                                           ; 2 exit points
                                           ;;1	MOVWF	r0x1005
                                           ;	.line	11; "heater.c"	GPIO_SetPortPinState(PORT_C,5,state);
001763   00fe     movwf   0x7e             	MOVWF	STK01
001764   3005     movlw   0x05             	MOVLW	0x05
001765   00ff     movwf   0x7f             	MOVWF	STK00
001766   3002     movlw   0x02             	MOVLW	0x02
001767   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
001768   120a     bcf     0x0a, 0x4        
001769   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
00176a   118a     bcf     0x0a, 0x3        	PAGESEL	$
00176b   160a     bsf     0x0a, 0x4        
00176c   0008     return                   	RETURN	
                                           ; exit point of _Heater_SetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Heater_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;2 compiler assigned registers:
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _Heater_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	5; "heater.c"	GPIO_InitPortPin(PORT_C,5,GPIO_OUT);
00176d   3000     movlw   0x00             	MOVLW	0x00
00176e   00fe     movwf   0x7e             	MOVWF	STK01
00176f   3005     movlw   0x05             	MOVLW	0x05
001770   00ff     movwf   0x7f             	MOVWF	STK00
001771   3002     movlw   0x02             	MOVLW	0x02
001772   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
001773   120a     bcf     0x0a, 0x4        
001774   2660     call    0x0660           	CALL	_GPIO_InitPortPin
001775   118a     bcf     0x0a, 0x3        	PAGESEL	$
001776   160a     bsf     0x0a, 0x4        
001777   0008     return                   	RETURN	
                                           ; exit point of _Heater_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   21+    7 =    28 instructions (   70 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:42 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"i2c.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	__mullong
                                           	extern	__divulong
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_I2C_Read
                                           	global	_I2C_Write
                                           	global	_I2C_End
                                           	global	_I2C_Begin
                                           	global	_I2C_Hold
                                           	global	_I2C_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_i2c_0	udata
                                           r0x100A	res	1
                                           r0x1009	res	1
                                           r0x1008	res	1
                                           r0x1007	res	1
                                           r0x100B	res	1
                                           r0x1006	res	1
                                           r0x1001	res	1
                                           r0x1000	res	1
                                           r0x1002	res	1
                                           r0x1003	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_i2c	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_Read	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;6 compiler assigned registers:
                                           ;   r0x1000
                                           ;   STK00
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;; Starting pCode block
                                           _I2C_Read	;Function start
                                           ; 2 exit points
                                           ;	.line	36; "i2c.c"	unsigned short I2C_Read(unsigned short ack)
000755   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
000756   1703     bsf     0x03, 0x6        
000757   00d2     movwf   0x52             	MOVWF	r0x1000
000758   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000759   00d1     movwf   0x51             	MOVWF	r0x1001
                                           ;	.line	39; "i2c.c"	I2C_Hold();
00075a   2799     call    0x0799           	CALL	_I2C_Hold
                                           ;	.line	40; "i2c.c"	RCEN = 1;
00075b   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
00075c   1303     bcf     0x03, 0x6        
00075d   1591     bsf     0x11, 0x3        	BSF	_SSPCON2bits,3
                                           ;	.line	42; "i2c.c"	I2C_Hold();
00075e   2799     call    0x0799           	CALL	_I2C_Hold
                                           ;	.line	43; "i2c.c"	incoming = SSPBUF;
00075f   1283     bcf     0x03, 0x5        	BANKSEL	_SSPBUF
000760   1303     bcf     0x03, 0x6        
000761   0813     movf    0x13, 0x0        	MOVF	_SSPBUF,W
000762   1283     bcf     0x03, 0x5        	BANKSEL	r0x1002
000763   1703     bsf     0x03, 0x6        
000764   00d3     movwf   0x53             	MOVWF	r0x1002
000765   01d4     clrf    0x54             	CLRF	r0x1003
                                           ;	.line	44; "i2c.c"	I2C_Hold();
000766   2799     call    0x0799           	CALL	_I2C_Hold
                                           ;	.line	45; "i2c.c"	ACKDT = (ack)?0:1;
000767   1283     bcf     0x03, 0x5        	BANKSEL	r0x1001
000768   1703     bsf     0x03, 0x6        
000769   0851     movf    0x51, 0x0        	MOVF	r0x1001,W
00076a   0452     iorwf   0x52, 0x0        	IORWF	r0x1000,W
00076b   3000     movlw   0x00             	MOVLW	0x00
00076c   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00076d   3001     movlw   0x01             	MOVLW	0x01
                                           ;;1	MOVWF	r0x1004
00076e   00d1     movwf   0x51             	MOVWF	r0x1001
00076f   0c51     rrf     0x51, 0x0        	RRF	r0x1001,W
000770   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000771   2f75     goto    0x0775           	GOTO	_00001_DS_
000772   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
000773   1303     bcf     0x03, 0x6        
000774   1291     bcf     0x11, 0x5        	BCF	_SSPCON2bits,5
                                           _00001_DS_
000775   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000776   2f7a     goto    0x077a           	GOTO	_00002_DS_
000777   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
000778   1303     bcf     0x03, 0x6        
000779   1691     bsf     0x11, 0x5        	BSF	_SSPCON2bits,5
                                           _00002_DS_
                                           ;	.line	46; "i2c.c"	ACKEN = 1;
00077a   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
00077b   1303     bcf     0x03, 0x6        
00077c   1611     bsf     0x11, 0x4        	BSF	_SSPCON2bits,4
                                           ;	.line	48; "i2c.c"	return incoming;
00077d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1002
00077e   1703     bsf     0x03, 0x6        
00077f   0853     movf    0x53, 0x0        	MOVF	r0x1002,W
000780   00ff     movwf   0x7f             	MOVWF	STK00
000781   0854     movf    0x54, 0x0        	MOVF	r0x1003,W
000782   0008     return                   	RETURN	
                                           ; exit point of _I2C_Read
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_Write	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;3 compiler assigned registers:
                                           ;   r0x1005
                                           ;   STK00
                                           ;   r0x1006
                                           ;; Starting pCode block
                                           _I2C_Write	;Function start
                                           ; 2 exit points
                                           ;;1	MOVWF	r0x1005
                                           ;	.line	30; "i2c.c"	void I2C_Write(unsigned data)
000783   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000784   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000785   1703     bsf     0x03, 0x6        
000786   00d0     movwf   0x50             	MOVWF	r0x1006
                                           ;	.line	32; "i2c.c"	I2C_Hold();
000787   2799     call    0x0799           	CALL	_I2C_Hold
                                           ;	.line	33; "i2c.c"	SSPBUF = data;
000788   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000789   1703     bsf     0x03, 0x6        
00078a   0850     movf    0x50, 0x0        	MOVF	r0x1006,W
00078b   1283     bcf     0x03, 0x5        	BANKSEL	_SSPBUF
00078c   1303     bcf     0x03, 0x6        
00078d   0093     movwf   0x13             	MOVWF	_SSPBUF
00078e   0008     return                   	RETURN	
                                           ; exit point of _I2C_Write
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_End	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;; Starting pCode block
                                           _I2C_End	;Function start
                                           ; 2 exit points
                                           ;	.line	26; "i2c.c"	I2C_Hold();
00078f   2799     call    0x0799           	CALL	_I2C_Hold
                                           ;	.line	27; "i2c.c"	PEN = 1;
000790   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
000791   1303     bcf     0x03, 0x6        
000792   1511     bsf     0x11, 0x2        	BSF	_SSPCON2bits,2
000793   0008     return                   	RETURN	
                                           ; exit point of _I2C_End
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_Begin	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;; Starting pCode block
                                           _I2C_Begin	;Function start
                                           ; 2 exit points
                                           ;	.line	21; "i2c.c"	I2C_Hold();
000794   2799     call    0x0799           	CALL	_I2C_Hold
                                           ;	.line	22; "i2c.c"	SEN = 1;
000795   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
000796   1303     bcf     0x03, 0x6        
000797   1411     bsf     0x11, 0x0        	BSF	_SSPCON2bits,0
000798   0008     return                   	RETURN	
                                           ; exit point of _I2C_Begin
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_Hold	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _I2C_Hold	;Function start
                                           ; 2 exit points
                                           _00110_DS_
                                           ;	.line	16; "i2c.c"	while (   (SSPCON2 & 0b00011111)    ||    (SSPSTAT & 0b00000100)   ) ;
000799   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2
00079a   1303     bcf     0x03, 0x6        
00079b   0811     movf    0x11, 0x0        	MOVF	_SSPCON2,W
00079c   391f     andlw   0x1f             	ANDLW	0x1f
00079d   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00079e   2f99     goto    0x0799           	GOTO	_00110_DS_
00079f   1914     btfsc   0x14, 0x2        	BTFSC	_SSPSTAT,2
0007a0   2f99     goto    0x0799           	GOTO	_00110_DS_
0007a1   0008     return                   	RETURN	
                                           ; exit point of _I2C_Hold
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mullong
                                           ;   __divulong
                                           ;   __mullong
                                           ;   __divulong
                                           ;12 compiler assigned registers:
                                           ;   r0x1007
                                           ;   STK00
                                           ;   r0x1008
                                           ;   STK01
                                           ;   r0x1009
                                           ;   STK02
                                           ;   r0x100A
                                           ;   STK06
                                           ;   STK05
                                           ;   STK04
                                           ;   STK03
                                           ;   r0x100B
                                           ;; Starting pCode block
                                           _I2C_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	3; "i2c.c"	void I2C_Init(const unsigned long feq_K)
0007a2   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
0007a3   1703     bsf     0x03, 0x6        
0007a4   00ce     movwf   0x4e             	MOVWF	r0x1007
0007a5   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0007a6   00cd     movwf   0x4d             	MOVWF	r0x1008
0007a7   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0007a8   00cc     movwf   0x4c             	MOVWF	r0x1009
0007a9   087d     movf    0x7d, 0x0        	MOVF	STK02,W
0007aa   00cb     movwf   0x4b             	MOVWF	r0x100A
                                           ;	.line	5; "i2c.c"	TRISC3 = 1;  TRISC4 = 1;
0007ab   1683     bsf     0x03, 0x5        	BANKSEL	_TRISCbits
0007ac   1303     bcf     0x03, 0x6        
0007ad   1587     bsf     0x07, 0x3        	BSF	_TRISCbits,3
0007ae   1607     bsf     0x07, 0x4        	BSF	_TRISCbits,4
                                           ;	.line	7; "i2c.c"	SSPCON  = 0b00101000;
0007af   3028     movlw   0x28             	MOVLW	0x28
0007b0   1283     bcf     0x03, 0x5        	BANKSEL	_SSPCON
0007b1   1303     bcf     0x03, 0x6        
0007b2   0094     movwf   0x14             	MOVWF	_SSPCON
                                           ;	.line	8; "i2c.c"	SSPCON2 = 0b00000000;
0007b3   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2
0007b4   1303     bcf     0x03, 0x6        
0007b5   0191     clrf    0x11             	CLRF	_SSPCON2
                                           ;	.line	10; "i2c.c"	SSPADD = (_XTAL_FREQ/(4*feq_K*100))-1;
0007b6   1283     bcf     0x03, 0x5        	BANKSEL	r0x100A
0007b7   1703     bsf     0x03, 0x6        
0007b8   084b     movf    0x4b, 0x0        	MOVF	r0x100A,W
0007b9   00f9     movwf   0x79             	MOVWF	STK06
0007ba   084c     movf    0x4c, 0x0        	MOVF	r0x1009,W
0007bb   00fa     movwf   0x7a             	MOVWF	STK05
0007bc   084d     movf    0x4d, 0x0        	MOVF	r0x1008,W
0007bd   00fb     movwf   0x7b             	MOVWF	STK04
0007be   084e     movf    0x4e, 0x0        	MOVF	r0x1007,W
0007bf   00fc     movwf   0x7c             	MOVWF	STK03
0007c0   3090     movlw   0x90             	MOVLW	0x90
0007c1   00fd     movwf   0x7d             	MOVWF	STK02
0007c2   3001     movlw   0x01             	MOVLW	0x01
0007c3   00fe     movwf   0x7e             	MOVWF	STK01
0007c4   3000     movlw   0x00             	MOVLW	0x00
0007c5   00ff     movwf   0x7f             	MOVWF	STK00
0007c6   3000     movlw   0x00             	MOVLW	0x00
0007c7   118a     bcf     0x0a, 0x3        	PAGESEL	__mullong
0007c8   160a     bsf     0x0a, 0x4        
0007c9   23cc     call    0x03cc           	CALL	__mullong
0007ca   118a     bcf     0x0a, 0x3        	PAGESEL	$
0007cb   120a     bcf     0x0a, 0x4        
0007cc   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
0007cd   1703     bsf     0x03, 0x6        
0007ce   00ce     movwf   0x4e             	MOVWF	r0x1007
0007cf   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0007d0   00cd     movwf   0x4d             	MOVWF	r0x1008
0007d1   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0007d2   00cc     movwf   0x4c             	MOVWF	r0x1009
0007d3   087d     movf    0x7d, 0x0        	MOVF	STK02,W
0007d4   00cb     movwf   0x4b             	MOVWF	r0x100A
0007d5   00f9     movwf   0x79             	MOVWF	STK06
0007d6   084c     movf    0x4c, 0x0        	MOVF	r0x1009,W
0007d7   00fa     movwf   0x7a             	MOVWF	STK05
0007d8   084d     movf    0x4d, 0x0        	MOVF	r0x1008,W
0007d9   00fb     movwf   0x7b             	MOVWF	STK04
0007da   084e     movf    0x4e, 0x0        	MOVF	r0x1007,W
0007db   00fc     movwf   0x7c             	MOVWF	STK03
0007dc   3000     movlw   0x00             	MOVLW	0x00
0007dd   00fd     movwf   0x7d             	MOVWF	STK02
0007de   3012     movlw   0x12             	MOVLW	0x12
0007df   00fe     movwf   0x7e             	MOVWF	STK01
0007e0   307a     movlw   0x7a             	MOVLW	0x7a
0007e1   00ff     movwf   0x7f             	MOVWF	STK00
0007e2   3000     movlw   0x00             	MOVLW	0x00
0007e3   118a     bcf     0x0a, 0x3        	PAGESEL	__divulong
0007e4   160a     bsf     0x0a, 0x4        
0007e5   2516     call    0x0516           	CALL	__divulong
0007e6   118a     bcf     0x0a, 0x3        	PAGESEL	$
0007e7   120a     bcf     0x0a, 0x4        
0007e8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
0007e9   1703     bsf     0x03, 0x6        
0007ea   00ce     movwf   0x4e             	MOVWF	r0x1007
0007eb   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0007ec   00cd     movwf   0x4d             	MOVWF	r0x1008
0007ed   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0007ee   00cc     movwf   0x4c             	MOVWF	r0x1009
0007ef   087d     movf    0x7d, 0x0        	MOVF	STK02,W
0007f0   00cb     movwf   0x4b             	MOVWF	r0x100A
0007f1   00cf     movwf   0x4f             	MOVWF	r0x100B
0007f2   034f     decf    0x4f, 0x0        	DECF	r0x100B,W
0007f3   1683     bsf     0x03, 0x5        	BANKSEL	_SSPADD
0007f4   1303     bcf     0x03, 0x6        
0007f5   0093     movwf   0x13             	MOVWF	_SSPADD
                                           ;	.line	11; "i2c.c"	SSPSTAT = 0b00000000;
0007f6   0194     clrf    0x14             	CLRF	_SSPSTAT
0007f7   0008     return                   	RETURN	
                                           ; exit point of _I2C_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  109+   27 =   136 instructions (  326 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:42 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"Interrupt.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_Heater_Init
                                           	extern	_Heater_SetState
                                           	extern	_Heater_GetState
                                           	extern	_Heater_update
                                           	extern	_SettingMode_update
                                           	extern	_SettingMode_Get_SSD_state
                                           	extern	_SettingMode_OFF_mode
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_LED_Init
                                           	extern	_LED_Update
                                           	extern	_LED_GetState
                                           	extern	_LED_SetState
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	___sdcc_saved_fsr
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_ISR
                                           	global	_RB0Int_update
                                           	global	_RB0_INT_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_Interrupt_0	udata
                                           r0x1006	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; interrupt and initialization code
                                           ;--------------------------------------------------------
                                           c_interrupt	code	0x4
                                           __sdcc_interrupt
                                           ;***
                                           ;  pBlock Stats: dbName = I
                                           ;***
                                           ;entry:  _ISR	;Function start
                                           ; 0 exit points
                                           ;functions called:
                                           ;   _TMR0_Update
                                           ;   _RB0Int_update
                                           ;   _TMR0_Update
                                           ;   _RB0Int_update
                                           ;; Starting pCode block
                                           _ISR	;Function start
                                           ; 0 exit points
                                           ;	.line	20; "Interrupt.c"	void ISR(void)__interrupt 0
000004   00f2     movwf   0x72             	MOVWF	WSAVE
000005   0e03     swapf   0x03, 0x0        	SWAPF	STATUS,W
000006   0183     clrf    0x03             	CLRF	STATUS
000007   00f1     movwf   0x71             	MOVWF	SSAVE
000008   080a     movf    0x0a, 0x0        	MOVF	PCLATH,W
000009   018a     clrf    0x0a             	CLRF	PCLATH
00000a   00f0     movwf   0x70             	MOVWF	PSAVE
00000b   0804     movf    0x04, 0x0        	MOVF	FSR,W
00000c   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
00000d   1703     bsf     0x03, 0x6        
00000e   00a8     movwf   0x28             	MOVWF	___sdcc_saved_fsr
                                           ;	.line	23; "Interrupt.c"	if(TMR0IF)
00000f   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000010   1303     bcf     0x03, 0x6        
000011   1d0b     btfss   0x0b, 0x2        	BTFSS	_INTCONbits,2
000012   281d     goto    0x001d           	GOTO	_00120_DS_
                                           ;	.line	25; "Interrupt.c"	TMR0_Update();
000013   118a     bcf     0x0a, 0x3        	PAGESEL	_TMR0_Update
000014   160a     bsf     0x0a, 0x4        
000015   2600     call    0x0600           	CALL	_TMR0_Update
000016   118a     bcf     0x0a, 0x3        	PAGESEL	$
000017   120a     bcf     0x0a, 0x4        
                                           ;	.line	26; "Interrupt.c"	TMR0_InterruptFlag_Clear();
000018   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000019   1303     bcf     0x03, 0x6        
00001a   110b     bcf     0x0b, 0x2        	BCF	_INTCONbits,2
                                           ;	.line	27; "Interrupt.c"	TMR0_UPDATE_REGISTER(5);
00001b   30d8     movlw   0xd8             	MOVLW	0xd8
00001c   0081     movwf   0x01             	MOVWF	_TMR0
                                           _00120_DS_
                                           ;	.line	30; "Interrupt.c"	if(INTF)
00001d   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
00001e   1303     bcf     0x03, 0x6        
00001f   1c8b     btfss   0x0b, 0x1        	BTFSS	_INTCONbits,1
000020   2829     goto    0x0029           	GOTO	_00123_DS_
                                           ;	.line	32; "Interrupt.c"	RB0Int_update();
000021   118a     bcf     0x0a, 0x3        	PAGESEL	_RB0Int_update
000022   160a     bsf     0x0a, 0x4        
000023   2705     call    0x0705           	CALL	_RB0Int_update
000024   118a     bcf     0x0a, 0x3        	PAGESEL	$
000025   120a     bcf     0x0a, 0x4        
                                           ;	.line	34; "Interrupt.c"	CLEAR_RB0_EXINT_FLAG();
000026   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000027   1303     bcf     0x03, 0x6        
000028   108b     bcf     0x0b, 0x1        	BCF	_INTCONbits,1
                                           _00123_DS_
000029   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
00002a   1703     bsf     0x03, 0x6        
00002b   0828     movf    0x28, 0x0        	MOVF	___sdcc_saved_fsr,W
00002c   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00002d   1303     bcf     0x03, 0x6        
00002e   0084     movwf   0x04             	MOVWF	FSR
00002f   0870     movf    0x70, 0x0        	MOVF	PSAVE,W
000030   008a     movwf   0x0a             	MOVWF	PCLATH
000031   0183     clrf    0x03             	CLRF	STATUS
000032   0e71     swapf   0x71, 0x0        	SWAPF	SSAVE,W
000033   0083     movwf   0x03             	MOVWF	STATUS
000034   0ef2     swapf   0x72, 0x1        	SWAPF	WSAVE,F
000035   0e72     swapf   0x72, 0x0        	SWAPF	WSAVE,W
                                           END_OF_INTERRUPT
000036   0009     retfie                   	RETFIE	
                                           
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_Interrupt	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _RB0Int_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   r0x1006
                                           ;; Starting pCode block
                                           _RB0Int_update	;Function start
                                           ; 2 exit points
                                           ;	.line	15; "Interrupt.c"	if(Flags.Operation_Flag == 1){ Flags.Operation_Flag = 0 ;
001705   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001706   1703     bsf     0x03, 0x6        
001707   081a     movf    0x1a, 0x0        	MOVF	(_Flags + 4),W
001708   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
001709   1703     bsf     0x03, 0x6        
00170a   00a5     movwf   0x25             	MOVWF	r0x1006
00170b   3a01     xorlw   0x01             	XORLW	0x01
00170c   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00170d   2f12     goto    0x0712           	GOTO	_00112_DS_
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
00170e   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
00170f   1703     bsf     0x03, 0x6        
001710   019a     clrf    0x1a             	CLRF	(_Flags + 4)
001711   2f1c     goto    0x071c           	GOTO	_00114_DS_
                                           _00112_DS_
                                           ;	.line	16; "Interrupt.c"	}else if(Flags.Operation_Flag == 0){Flags.Operation_Flag = 1 ;}
001712   3000     movlw   0x00             	MOVLW	0x00
001713   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
001714   1703     bsf     0x03, 0x6        
001715   0425     iorwf   0x25, 0x0        	IORWF	r0x1006,W
001716   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001717   2f1c     goto    0x071c           	GOTO	_00114_DS_
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
001718   3001     movlw   0x01             	MOVLW	0x01
001719   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
00171a   1703     bsf     0x03, 0x6        
00171b   009a     movwf   0x1a             	MOVWF	(_Flags + 4)
                                           _00114_DS_
00171c   0008     return                   	RETURN	
                                           ; exit point of _RB0Int_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _RB0_INT_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;2 compiler assigned registers:
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _RB0_INT_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	5; "Interrupt.c"	GPIO_InitPortPin(PORT_B,0,GPIO_IN);
00171d   3001     movlw   0x01             	MOVLW	0x01
00171e   00fe     movwf   0x7e             	MOVWF	STK01
00171f   3000     movlw   0x00             	MOVLW	0x00
001720   00ff     movwf   0x7f             	MOVWF	STK00
001721   3001     movlw   0x01             	MOVLW	0x01
001722   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
001723   120a     bcf     0x0a, 0x4        
001724   2660     call    0x0660           	CALL	_GPIO_InitPortPin
001725   118a     bcf     0x0a, 0x3        	PAGESEL	$
001726   160a     bsf     0x0a, 0x4        
                                           ;	.line	6; "Interrupt.c"	GLOBAL_INT_ENABLE();
001727   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
001728   1303     bcf     0x03, 0x6        
001729   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	7; "Interrupt.c"	RB0_EXINT_ENABLE();
00172a   160b     bsf     0x0b, 0x4        	BSF	_INTCONbits,4
                                           ;	.line	8; "Interrupt.c"	SET_RB0_EDGE(EDGE);//select edge from the header file
00172b   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
00172c   1303     bcf     0x03, 0x6        
00172d   1701     bsf     0x01, 0x6        	BSF	_OPTION_REGbits,6
                                           ;	.line	9; "Interrupt.c"	CLEAR_RB0_EXINT_FLAG();
00172e   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
00172f   1303     bcf     0x03, 0x6        
001730   108b     bcf     0x0b, 0x1        	BCF	_INTCONbits,1
001731   0008     return                   	RETURN	
                                           ; exit point of _RB0_INT_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   54+   21 =    75 instructions (  192 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:43 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"led.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_Heater_Init
                                           	extern	_Heater_SetState
                                           	extern	_Heater_GetState
                                           	extern	_Heater_update
                                           	extern	_SettingMode_update
                                           	extern	_SettingMode_Get_SSD_state
                                           	extern	_SettingMode_OFF_mode
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_LED_SetState
                                           	global	_LED_GetState
                                           	global	_LED_Update
                                           	global	_LED_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_led_0	udata
                                           r0x1011	res	1
                                           r0x1012	res	1
                                           r0x1010	res	1
                                           r0x100B	res	1
                                           r0x100C	res	1
                                           r0x100E	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_led	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _LED_Toggle	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _LED_GetState
                                           ;   _LED_SetState
                                           ;   _LED_SetState
                                           ;   _LED_GetState
                                           ;   _LED_SetState
                                           ;   _LED_SetState
                                           ;3 compiler assigned registers:
                                           ;   r0x100E
                                           ;   r0x100F
                                           ;   STK00
                                           ;; Starting pCode block
                                           _LED_Toggle	;Function start
                                           ; 2 exit points
                                           ;	.line	116; "led.c"	static void LED_Toggle(tLED led)
000df1   1283     bcf     0x03, 0x5        	BANKSEL	r0x100E
000df2   1703     bsf     0x03, 0x6        
000df3   00eb     movwf   0x6b             	MOVWF	r0x100E
                                           ;	.line	118; "led.c"	if (LED_GetState(led) == LED_ON)
000df4   2660     call    0x0660           	CALL	_LED_GetState
                                           ;;1	MOVWF	r0x100F
000df5   3a01     xorlw   0x01             	XORLW	0x01
000df6   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000df7   2dff     goto    0x05ff           	GOTO	_00233_DS_
                                           ;	.line	120; "led.c"	LED_SetState(led, LED_OFF);
000df8   3000     movlw   0x00             	MOVLW	0x00
000df9   00ff     movwf   0x7f             	MOVWF	STK00
000dfa   1283     bcf     0x03, 0x5        	BANKSEL	r0x100E
000dfb   1703     bsf     0x03, 0x6        
000dfc   086b     movf    0x6b, 0x0        	MOVF	r0x100E,W
000dfd   2606     call    0x0606           	CALL	_LED_SetState
000dfe   2e05     goto    0x0605           	GOTO	_00235_DS_
                                           _00233_DS_
                                           ;	.line	124; "led.c"	LED_SetState(led, LED_ON);
000dff   3001     movlw   0x01             	MOVLW	0x01
000e00   00ff     movwf   0x7f             	MOVWF	STK00
000e01   1283     bcf     0x03, 0x5        	BANKSEL	r0x100E
000e02   1703     bsf     0x03, 0x6        
000e03   086b     movf    0x6b, 0x0        	MOVF	r0x100E,W
000e04   2606     call    0x0606           	CALL	_LED_SetState
                                           _00235_DS_
000e05   0008     return                   	RETURN	
                                           ; exit point of _LED_Toggle
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _LED_SetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;5 compiler assigned registers:
                                           ;   r0x100B
                                           ;   STK00
                                           ;   r0x100C
                                           ;   r0x100D
                                           ;   STK01
                                           ;; Starting pCode block
                                           _LED_SetState	;Function start
                                           ; 2 exit points
                                           ;	.line	90; "led.c"	void LED_SetState(tLED led, tLED_State state)
000e06   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
000e07   1703     bsf     0x03, 0x6        
000e08   00e9     movwf   0x69             	MOVWF	r0x100B
000e09   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000e0a   00ea     movwf   0x6a             	MOVWF	r0x100C
                                           ;	.line	92; "led.c"	switch(led)
000e0b   0869     movf    0x69, 0x0        	MOVF	r0x100B,W
                                           ;;1	MOVWF	r0x100D
000e0c   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e0d   2e1f     goto    0x061f           	GOTO	_00199_DS_
000e0e   0869     movf    0x69, 0x0        	MOVF	r0x100B,W
000e0f   3a01     xorlw   0x01             	XORLW	0x01
000e10   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e11   2e2c     goto    0x062c           	GOTO	_00200_DS_
000e12   0869     movf    0x69, 0x0        	MOVF	r0x100B,W
000e13   3a02     xorlw   0x02             	XORLW	0x02
000e14   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e15   2e39     goto    0x0639           	GOTO	_00201_DS_
000e16   0869     movf    0x69, 0x0        	MOVF	r0x100B,W
000e17   3a03     xorlw   0x03             	XORLW	0x03
000e18   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e19   2e46     goto    0x0646           	GOTO	_00202_DS_
000e1a   0869     movf    0x69, 0x0        	MOVF	r0x100B,W
000e1b   3a07     xorlw   0x07             	XORLW	0x07
000e1c   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e1d   2e53     goto    0x0653           	GOTO	_00203_DS_
000e1e   2e5f     goto    0x065f           	GOTO	_00206_DS_
                                           _00199_DS_
                                           ;	.line	95; "led.c"	GPIO_SetPortPinState(PORT_B, 0, state);
000e1f   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000e20   1703     bsf     0x03, 0x6        
000e21   086a     movf    0x6a, 0x0        	MOVF	r0x100C,W
000e22   00fe     movwf   0x7e             	MOVWF	STK01
000e23   3000     movlw   0x00             	MOVLW	0x00
000e24   00ff     movwf   0x7f             	MOVWF	STK00
000e25   3001     movlw   0x01             	MOVLW	0x01
000e26   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000e27   120a     bcf     0x0a, 0x4        
000e28   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
000e29   158a     bsf     0x0a, 0x3        	PAGESEL	$
000e2a   120a     bcf     0x0a, 0x4        
                                           ;	.line	96; "led.c"	break;
000e2b   2e5f     goto    0x065f           	GOTO	_00206_DS_
                                           _00200_DS_
                                           ;	.line	98; "led.c"	GPIO_SetPortPinState(PORT_B, 1, state);
000e2c   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000e2d   1703     bsf     0x03, 0x6        
000e2e   086a     movf    0x6a, 0x0        	MOVF	r0x100C,W
000e2f   00fe     movwf   0x7e             	MOVWF	STK01
000e30   3001     movlw   0x01             	MOVLW	0x01
000e31   00ff     movwf   0x7f             	MOVWF	STK00
000e32   3001     movlw   0x01             	MOVLW	0x01
000e33   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000e34   120a     bcf     0x0a, 0x4        
000e35   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
000e36   158a     bsf     0x0a, 0x3        	PAGESEL	$
000e37   120a     bcf     0x0a, 0x4        
                                           ;	.line	99; "led.c"	break;
000e38   2e5f     goto    0x065f           	GOTO	_00206_DS_
                                           _00201_DS_
                                           ;	.line	101; "led.c"	GPIO_SetPortPinState(PORT_B, 2, state);
000e39   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000e3a   1703     bsf     0x03, 0x6        
000e3b   086a     movf    0x6a, 0x0        	MOVF	r0x100C,W
000e3c   00fe     movwf   0x7e             	MOVWF	STK01
000e3d   3002     movlw   0x02             	MOVLW	0x02
000e3e   00ff     movwf   0x7f             	MOVWF	STK00
000e3f   3001     movlw   0x01             	MOVLW	0x01
000e40   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000e41   120a     bcf     0x0a, 0x4        
000e42   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
000e43   158a     bsf     0x0a, 0x3        	PAGESEL	$
000e44   120a     bcf     0x0a, 0x4        
                                           ;	.line	102; "led.c"	break;
000e45   2e5f     goto    0x065f           	GOTO	_00206_DS_
                                           _00202_DS_
                                           ;	.line	104; "led.c"	GPIO_SetPortPinState(PORT_B, 3, state);
000e46   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000e47   1703     bsf     0x03, 0x6        
000e48   086a     movf    0x6a, 0x0        	MOVF	r0x100C,W
000e49   00fe     movwf   0x7e             	MOVWF	STK01
000e4a   3003     movlw   0x03             	MOVLW	0x03
000e4b   00ff     movwf   0x7f             	MOVWF	STK00
000e4c   3001     movlw   0x01             	MOVLW	0x01
000e4d   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000e4e   120a     bcf     0x0a, 0x4        
000e4f   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
000e50   158a     bsf     0x0a, 0x3        	PAGESEL	$
000e51   120a     bcf     0x0a, 0x4        
                                           ;	.line	105; "led.c"	break;
000e52   2e5f     goto    0x065f           	GOTO	_00206_DS_
                                           _00203_DS_
                                           ;	.line	107; "led.c"	GPIO_SetPortPinState(PORT_B, 7, state);
000e53   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000e54   1703     bsf     0x03, 0x6        
000e55   086a     movf    0x6a, 0x0        	MOVF	r0x100C,W
000e56   00fe     movwf   0x7e             	MOVWF	STK01
000e57   3007     movlw   0x07             	MOVLW	0x07
000e58   00ff     movwf   0x7f             	MOVWF	STK00
000e59   3001     movlw   0x01             	MOVLW	0x01
000e5a   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000e5b   120a     bcf     0x0a, 0x4        
000e5c   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
000e5d   158a     bsf     0x0a, 0x3        	PAGESEL	$
000e5e   120a     bcf     0x0a, 0x4        
                                           _00206_DS_
                                           ;	.line	112; "led.c"	}
000e5f   0008     return                   	RETURN	
                                           ; exit point of _LED_SetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _LED_GetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;4 compiler assigned registers:
                                           ;   r0x100B
                                           ;   r0x100C
                                           ;   r0x100D
                                           ;   STK00
                                           ;; Starting pCode block
                                           _LED_GetState	;Function start
                                           ; 2 exit points
                                           ;	.line	61; "led.c"	tLED_State LED_GetState(tLED led)
000e60   1283     bcf     0x03, 0x5        	BANKSEL	r0x100B
000e61   1703     bsf     0x03, 0x6        
000e62   00e9     movwf   0x69             	MOVWF	r0x100B
                                           ;	.line	63; "led.c"	tLED_State ret = LED_OFF;
000e63   01ea     clrf    0x6a             	CLRF	r0x100C
                                           ;	.line	65; "led.c"	switch(led)
000e64   0869     movf    0x69, 0x0        	MOVF	r0x100B,W
                                           ;;1	MOVWF	r0x100D
000e65   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e66   2e78     goto    0x0678           	GOTO	_00166_DS_
000e67   0869     movf    0x69, 0x0        	MOVF	r0x100B,W
000e68   3a01     xorlw   0x01             	XORLW	0x01
000e69   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e6a   2e84     goto    0x0684           	GOTO	_00167_DS_
000e6b   0869     movf    0x69, 0x0        	MOVF	r0x100B,W
000e6c   3a02     xorlw   0x02             	XORLW	0x02
000e6d   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e6e   2e90     goto    0x0690           	GOTO	_00168_DS_
000e6f   0869     movf    0x69, 0x0        	MOVF	r0x100B,W
000e70   3a03     xorlw   0x03             	XORLW	0x03
000e71   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e72   2e9c     goto    0x069c           	GOTO	_00169_DS_
000e73   0869     movf    0x69, 0x0        	MOVF	r0x100B,W
000e74   3a07     xorlw   0x07             	XORLW	0x07
000e75   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e76   2ea8     goto    0x06a8           	GOTO	_00170_DS_
000e77   2eb3     goto    0x06b3           	GOTO	_00172_DS_
                                           _00166_DS_
                                           ;	.line	68; "led.c"	ret = GPIO_GetPortPinState(PORT_B, 0);
000e78   3000     movlw   0x00             	MOVLW	0x00
000e79   00ff     movwf   0x7f             	MOVWF	STK00
000e7a   3001     movlw   0x01             	MOVLW	0x01
000e7b   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000e7c   120a     bcf     0x0a, 0x4        
000e7d   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
000e7e   158a     bsf     0x0a, 0x3        	PAGESEL	$
000e7f   120a     bcf     0x0a, 0x4        
000e80   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000e81   1703     bsf     0x03, 0x6        
000e82   00ea     movwf   0x6a             	MOVWF	r0x100C
                                           ;	.line	69; "led.c"	break;
000e83   2eb3     goto    0x06b3           	GOTO	_00172_DS_
                                           _00167_DS_
                                           ;	.line	71; "led.c"	ret = GPIO_GetPortPinState(PORT_B, 1);
000e84   3001     movlw   0x01             	MOVLW	0x01
000e85   00ff     movwf   0x7f             	MOVWF	STK00
000e86   3001     movlw   0x01             	MOVLW	0x01
000e87   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000e88   120a     bcf     0x0a, 0x4        
000e89   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
000e8a   158a     bsf     0x0a, 0x3        	PAGESEL	$
000e8b   120a     bcf     0x0a, 0x4        
000e8c   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000e8d   1703     bsf     0x03, 0x6        
000e8e   00ea     movwf   0x6a             	MOVWF	r0x100C
                                           ;	.line	72; "led.c"	break;
000e8f   2eb3     goto    0x06b3           	GOTO	_00172_DS_
                                           _00168_DS_
                                           ;	.line	74; "led.c"	ret = GPIO_GetPortPinState(PORT_B, 2);
000e90   3002     movlw   0x02             	MOVLW	0x02
000e91   00ff     movwf   0x7f             	MOVWF	STK00
000e92   3001     movlw   0x01             	MOVLW	0x01
000e93   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000e94   120a     bcf     0x0a, 0x4        
000e95   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
000e96   158a     bsf     0x0a, 0x3        	PAGESEL	$
000e97   120a     bcf     0x0a, 0x4        
000e98   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000e99   1703     bsf     0x03, 0x6        
000e9a   00ea     movwf   0x6a             	MOVWF	r0x100C
                                           ;	.line	75; "led.c"	break;
000e9b   2eb3     goto    0x06b3           	GOTO	_00172_DS_
                                           _00169_DS_
                                           ;	.line	77; "led.c"	ret = GPIO_GetPortPinState(PORT_B, 3);
000e9c   3003     movlw   0x03             	MOVLW	0x03
000e9d   00ff     movwf   0x7f             	MOVWF	STK00
000e9e   3001     movlw   0x01             	MOVLW	0x01
000e9f   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000ea0   120a     bcf     0x0a, 0x4        
000ea1   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
000ea2   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ea3   120a     bcf     0x0a, 0x4        
000ea4   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000ea5   1703     bsf     0x03, 0x6        
000ea6   00ea     movwf   0x6a             	MOVWF	r0x100C
                                           ;	.line	78; "led.c"	break;
000ea7   2eb3     goto    0x06b3           	GOTO	_00172_DS_
                                           _00170_DS_
                                           ;	.line	80; "led.c"	ret = GPIO_GetPortPinState(PORT_B, 7);
000ea8   3007     movlw   0x07             	MOVLW	0x07
000ea9   00ff     movwf   0x7f             	MOVWF	STK00
000eaa   3001     movlw   0x01             	MOVLW	0x01
000eab   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000eac   120a     bcf     0x0a, 0x4        
000ead   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
000eae   158a     bsf     0x0a, 0x3        	PAGESEL	$
000eaf   120a     bcf     0x0a, 0x4        
000eb0   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000eb1   1703     bsf     0x03, 0x6        
000eb2   00ea     movwf   0x6a             	MOVWF	r0x100C
                                           _00172_DS_
                                           ;	.line	87; "led.c"	return ret;
000eb3   1283     bcf     0x03, 0x5        	BANKSEL	r0x100C
000eb4   1703     bsf     0x03, 0x6        
000eb5   086a     movf    0x6a, 0x0        	MOVF	r0x100C,W
000eb6   0008     return                   	RETURN	
                                           ; exit point of _LED_GetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _LED_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _LED_SetState
                                           ;   _LED_Toggle
                                           ;   _LED_SetState
                                           ;   _LED_SetState
                                           ;   _LED_Toggle
                                           ;   _LED_SetState
                                           ;2 compiler assigned registers:
                                           ;   r0x1010
                                           ;   STK00
                                           ;; Starting pCode block
                                           _LED_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	39; "led.c"	switch(Flags.Toggle_led)
000eb7   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000eb8   1703     bsf     0x03, 0x6        
000eb9   0817     movf    0x17, 0x0        	MOVF	(_Flags + 1),W
000eba   1283     bcf     0x03, 0x5        	BANKSEL	r0x1010
000ebb   1703     bsf     0x03, 0x6        
000ebc   00e8     movwf   0x68             	MOVWF	r0x1010
000ebd   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000ebe   2ec8     goto    0x06c8           	GOTO	_00138_DS_
000ebf   0868     movf    0x68, 0x0        	MOVF	r0x1010,W
000ec0   3a01     xorlw   0x01             	XORLW	0x01
000ec1   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000ec2   2ed1     goto    0x06d1           	GOTO	_00139_DS_
000ec3   0868     movf    0x68, 0x0        	MOVF	r0x1010,W
000ec4   3a03     xorlw   0x03             	XORLW	0x03
000ec5   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000ec6   2eeb     goto    0x06eb           	GOTO	_00142_DS_
000ec7   2ef3     goto    0x06f3           	GOTO	_00145_DS_
                                           _00138_DS_
                                           ;	.line	42; "led.c"	LED_SetState(LED_7,LED_ON);
000ec8   3001     movlw   0x01             	MOVLW	0x01
000ec9   00ff     movwf   0x7f             	MOVWF	STK00
000eca   3007     movlw   0x07             	MOVLW	0x07
000ecb   158a     bsf     0x0a, 0x3        	PAGESEL	_LED_SetState
000ecc   120a     bcf     0x0a, 0x4        
000ecd   2606     call    0x0606           	CALL	_LED_SetState
000ece   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ecf   120a     bcf     0x0a, 0x4        
                                           ;	.line	43; "led.c"	break;
000ed0   2ef3     goto    0x06f3           	GOTO	_00145_DS_
                                           _00139_DS_
                                           ;	.line	45; "led.c"	if(Counters.Led_counter == 50)
000ed1   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000ed2   1703     bsf     0x03, 0x6        
000ed3   0814     movf    0x14, 0x0        	MOVF	(_Counters + 4),W
000ed4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1010
000ed5   1703     bsf     0x03, 0x6        
000ed6   00e8     movwf   0x68             	MOVWF	r0x1010
000ed7   3a32     xorlw   0x32             	XORLW	0x32
000ed8   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000ed9   2edf     goto    0x06df           	GOTO	_00141_DS_
                                           ;	.line	47; "led.c"	LED_Toggle(LED_7);
000eda   3007     movlw   0x07             	MOVLW	0x07
000edb   25f1     call    0x05f1           	CALL	_LED_Toggle
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	48; "led.c"	Counters.Led_counter = 0 ;
000edc   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000edd   1703     bsf     0x03, 0x6        
000ede   0194     clrf    0x14             	CLRF	(_Counters + 4)
                                           _00141_DS_
                                           ;	.line	50; "led.c"	Counters.Led_counter++ ;
000edf   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000ee0   1703     bsf     0x03, 0x6        
000ee1   0814     movf    0x14, 0x0        	MOVF	(_Counters + 4),W
000ee2   1283     bcf     0x03, 0x5        	BANKSEL	r0x1010
000ee3   1703     bsf     0x03, 0x6        
000ee4   00e8     movwf   0x68             	MOVWF	r0x1010
000ee5   0ae8     incf    0x68, 0x1        	INCF	r0x1010,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
000ee6   0868     movf    0x68, 0x0        	MOVF	r0x1010,W
000ee7   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000ee8   1703     bsf     0x03, 0x6        
000ee9   0094     movwf   0x14             	MOVWF	(_Counters + 4)
                                           ;	.line	51; "led.c"	break;
000eea   2ef3     goto    0x06f3           	GOTO	_00145_DS_
                                           _00142_DS_
                                           ;	.line	53; "led.c"	LED_SetState(LED_7,LED_OFF);
000eeb   3000     movlw   0x00             	MOVLW	0x00
000eec   00ff     movwf   0x7f             	MOVWF	STK00
000eed   3007     movlw   0x07             	MOVLW	0x07
000eee   158a     bsf     0x0a, 0x3        	PAGESEL	_LED_SetState
000eef   120a     bcf     0x0a, 0x4        
000ef0   2606     call    0x0606           	CALL	_LED_SetState
000ef1   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ef2   120a     bcf     0x0a, 0x4        
                                           _00145_DS_
                                           ;	.line	57; "led.c"	}
000ef3   0008     return                   	RETURN	
                                           ; exit point of _LED_Update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _LED_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _LED_SetState
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _LED_SetState
                                           ;5 compiler assigned registers:
                                           ;   r0x1011
                                           ;   STK00
                                           ;   r0x1012
                                           ;   r0x1013
                                           ;   STK01
                                           ;; Starting pCode block
                                           _LED_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	3; "led.c"	void LED_Init(tLED led, tLED_State initial_state)
000ef4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1011
000ef5   1703     bsf     0x03, 0x6        
000ef6   00e6     movwf   0x66             	MOVWF	r0x1011
000ef7   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000ef8   00e7     movwf   0x67             	MOVWF	r0x1012
                                           ;	.line	6; "led.c"	switch(led)
000ef9   0866     movf    0x66, 0x0        	MOVF	r0x1011,W
                                           ;;1	MOVWF	r0x1013
000efa   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000efb   2f0d     goto    0x070d           	GOTO	_00105_DS_
000efc   0866     movf    0x66, 0x0        	MOVF	r0x1011,W
000efd   3a01     xorlw   0x01             	XORLW	0x01
000efe   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000eff   2f18     goto    0x0718           	GOTO	_00106_DS_
000f00   0866     movf    0x66, 0x0        	MOVF	r0x1011,W
000f01   3a02     xorlw   0x02             	XORLW	0x02
000f02   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000f03   2f23     goto    0x0723           	GOTO	_00107_DS_
000f04   0866     movf    0x66, 0x0        	MOVF	r0x1011,W
000f05   3a03     xorlw   0x03             	XORLW	0x03
000f06   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000f07   2f2e     goto    0x072e           	GOTO	_00108_DS_
000f08   0866     movf    0x66, 0x0        	MOVF	r0x1011,W
000f09   3a07     xorlw   0x07             	XORLW	0x07
000f0a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000f0b   2f39     goto    0x0739           	GOTO	_00109_DS_
000f0c   2f43     goto    0x0743           	GOTO	_00111_DS_
                                           _00105_DS_
                                           ;	.line	10; "led.c"	GPIO_InitPortPin(PORT_B, 0, GPIO_OUT);
000f0d   3000     movlw   0x00             	MOVLW	0x00
000f0e   00fe     movwf   0x7e             	MOVWF	STK01
000f0f   3000     movlw   0x00             	MOVLW	0x00
000f10   00ff     movwf   0x7f             	MOVWF	STK00
000f11   3001     movlw   0x01             	MOVLW	0x01
000f12   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000f13   120a     bcf     0x0a, 0x4        
000f14   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000f15   158a     bsf     0x0a, 0x3        	PAGESEL	$
000f16   120a     bcf     0x0a, 0x4        
                                           ;	.line	11; "led.c"	break;
000f17   2f43     goto    0x0743           	GOTO	_00111_DS_
                                           _00106_DS_
                                           ;	.line	14; "led.c"	GPIO_InitPortPin(PORT_B, 1, GPIO_OUT);
000f18   3000     movlw   0x00             	MOVLW	0x00
000f19   00fe     movwf   0x7e             	MOVWF	STK01
000f1a   3001     movlw   0x01             	MOVLW	0x01
000f1b   00ff     movwf   0x7f             	MOVWF	STK00
000f1c   3001     movlw   0x01             	MOVLW	0x01
000f1d   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000f1e   120a     bcf     0x0a, 0x4        
000f1f   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000f20   158a     bsf     0x0a, 0x3        	PAGESEL	$
000f21   120a     bcf     0x0a, 0x4        
                                           ;	.line	15; "led.c"	break;
000f22   2f43     goto    0x0743           	GOTO	_00111_DS_
                                           _00107_DS_
                                           ;	.line	18; "led.c"	GPIO_InitPortPin(PORT_B, 2, GPIO_OUT);
000f23   3000     movlw   0x00             	MOVLW	0x00
000f24   00fe     movwf   0x7e             	MOVWF	STK01
000f25   3002     movlw   0x02             	MOVLW	0x02
000f26   00ff     movwf   0x7f             	MOVWF	STK00
000f27   3001     movlw   0x01             	MOVLW	0x01
000f28   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000f29   120a     bcf     0x0a, 0x4        
000f2a   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000f2b   158a     bsf     0x0a, 0x3        	PAGESEL	$
000f2c   120a     bcf     0x0a, 0x4        
                                           ;	.line	19; "led.c"	break;
000f2d   2f43     goto    0x0743           	GOTO	_00111_DS_
                                           _00108_DS_
                                           ;	.line	22; "led.c"	GPIO_InitPortPin(PORT_B, 3, GPIO_OUT);
000f2e   3000     movlw   0x00             	MOVLW	0x00
000f2f   00fe     movwf   0x7e             	MOVWF	STK01
000f30   3003     movlw   0x03             	MOVLW	0x03
000f31   00ff     movwf   0x7f             	MOVWF	STK00
000f32   3001     movlw   0x01             	MOVLW	0x01
000f33   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000f34   120a     bcf     0x0a, 0x4        
000f35   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000f36   158a     bsf     0x0a, 0x3        	PAGESEL	$
000f37   120a     bcf     0x0a, 0x4        
                                           ;	.line	23; "led.c"	break;
000f38   2f43     goto    0x0743           	GOTO	_00111_DS_
                                           _00109_DS_
                                           ;	.line	26; "led.c"	GPIO_InitPortPin(PORT_B, 7, GPIO_OUT);
000f39   3000     movlw   0x00             	MOVLW	0x00
000f3a   00fe     movwf   0x7e             	MOVWF	STK01
000f3b   3007     movlw   0x07             	MOVLW	0x07
000f3c   00ff     movwf   0x7f             	MOVWF	STK00
000f3d   3001     movlw   0x01             	MOVLW	0x01
000f3e   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000f3f   120a     bcf     0x0a, 0x4        
000f40   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000f41   158a     bsf     0x0a, 0x3        	PAGESEL	$
000f42   120a     bcf     0x0a, 0x4        
                                           _00111_DS_
                                           ;	.line	34; "led.c"	LED_SetState(led, initial_state);
000f43   1283     bcf     0x03, 0x5        	BANKSEL	r0x1012
000f44   1703     bsf     0x03, 0x6        
000f45   0867     movf    0x67, 0x0        	MOVF	r0x1012,W
000f46   00ff     movwf   0x7f             	MOVWF	STK00
000f47   0866     movf    0x66, 0x0        	MOVF	r0x1011,W
000f48   158a     bsf     0x0a, 0x3        	PAGESEL	_LED_SetState
000f49   120a     bcf     0x0a, 0x4        
000f4a   2606     call    0x0606           	CALL	_LED_SetState
000f4b   158a     bsf     0x0a, 0x3        	PAGESEL	$
000f4c   120a     bcf     0x0a, 0x4        
000f4d   0008     return                   	RETURN	
                                           ; exit point of _LED_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  225+   62 =   287 instructions (  698 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:43 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"main.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; config word(s)
                                           ;--------------------------------------------------------
002007   3f32     addlw   0x32             	__config 0x3f32
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_Heater_Init
                                           	extern	_Heater_SetState
                                           	extern	_Heater_GetState
                                           	extern	_Heater_update
                                           	extern	_SettingMode_update
                                           	extern	_SettingMode_Get_SSD_state
                                           	extern	_SettingMode_OFF_mode
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_LED_Init
                                           	extern	_LED_Update
                                           	extern	_LED_GetState
                                           	extern	_LED_SetState
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_RB0_INT_Init
                                           	extern	_RB0Int_update
                                           	extern	_ISR
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_main
                                           
                                           	global PSAVE
                                           	global SSAVE
                                           	global WSAVE
                                           	global STK12
                                           	global STK11
                                           	global STK10
                                           	global STK09
                                           	global STK08
                                           	global STK07
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00
                                           
                                           sharebank udata_ovr 0x0070
                                           PSAVE	res 1
                                           SSAVE	res 1
                                           WSAVE	res 1
                                           STK12	res 1
                                           STK11	res 1
                                           STK10	res 1
                                           STK09	res 1
                                           STK08	res 1
                                           STK07	res 1
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
000001   118a     bcf     0x0a, 0x3        	pagesel __sdcc_gsinit_startup
000002   160a     bsf     0x0a, 0x4        
000003   2c7a     goto    0x047a           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_main	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;entry:  _main	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _PB_Init
                                           ;   _PB_Init
                                           ;   _SSD_Init
                                           ;   _SSD_Init
                                           ;   _Heater_Init
                                           ;   _Cooler_Init
                                           ;   _LED_Init
                                           ;   _Temprature_Init
                                           ;   _TMR0_Init
                                           ;   _TMR0_Start
                                           ;   _PB_Init
                                           ;   _PB_Init
                                           ;   _SSD_Init
                                           ;   _SSD_Init
                                           ;   _Heater_Init
                                           ;   _Cooler_Init
                                           ;   _LED_Init
                                           ;   _Temprature_Init
                                           ;   _TMR0_Init
                                           ;   _TMR0_Start
                                           ;2 compiler assigned registers:
                                           ;   STK00
                                           ;   STK01
                                           ;; Starting pCode block
                                           _main	;Function start
                                           ; 2 exit points
                                           ;	.line	15; "main.c"	PB_Init(PB_UP,PB_RELEASED);
001654   3000     movlw   0x00             	MOVLW	0x00
001655   00ff     movwf   0x7f             	MOVWF	STK00
001656   3002     movlw   0x02             	MOVLW	0x02
001657   118a     bcf     0x0a, 0x3        	PAGESEL	_PB_Init
001658   120a     bcf     0x0a, 0x4        
001659   2322     call    0x0322           	CALL	_PB_Init
00165a   118a     bcf     0x0a, 0x3        	PAGESEL	$
00165b   160a     bsf     0x0a, 0x4        
                                           ;	.line	16; "main.c"	PB_Init(PB_DOWN,PB_RELEASED);
00165c   3000     movlw   0x00             	MOVLW	0x00
00165d   00ff     movwf   0x7f             	MOVWF	STK00
00165e   3001     movlw   0x01             	MOVLW	0x01
00165f   118a     bcf     0x0a, 0x3        	PAGESEL	_PB_Init
001660   120a     bcf     0x0a, 0x4        
001661   2322     call    0x0322           	CALL	_PB_Init
001662   118a     bcf     0x0a, 0x3        	PAGESEL	$
001663   160a     bsf     0x0a, 0x4        
                                           ;	.line	18; "main.c"	SSD_Init(SSD_MR,SSD_OFF,SSD_NULL);
001664   300a     movlw   0x0a             	MOVLW	0x0a
001665   00fe     movwf   0x7e             	MOVWF	STK01
001666   3000     movlw   0x00             	MOVLW	0x00
001667   00ff     movwf   0x7f             	MOVWF	STK00
001668   3002     movlw   0x02             	MOVLW	0x02
001669   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_Init
00166a   120a     bcf     0x0a, 0x4        
00166b   2579     call    0x0579           	CALL	_SSD_Init
00166c   118a     bcf     0x0a, 0x3        	PAGESEL	$
00166d   160a     bsf     0x0a, 0x4        
                                           ;	.line	19; "main.c"	SSD_Init(SSD_R,SSD_OFF,SSD_NULL);
00166e   300a     movlw   0x0a             	MOVLW	0x0a
00166f   00fe     movwf   0x7e             	MOVWF	STK01
001670   3000     movlw   0x00             	MOVLW	0x00
001671   00ff     movwf   0x7f             	MOVWF	STK00
001672   3003     movlw   0x03             	MOVLW	0x03
001673   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_Init
001674   120a     bcf     0x0a, 0x4        
001675   2579     call    0x0579           	CALL	_SSD_Init
001676   118a     bcf     0x0a, 0x3        	PAGESEL	$
001677   160a     bsf     0x0a, 0x4        
                                           ;	.line	21; "main.c"	Heater_Init();
001678   118a     bcf     0x0a, 0x3        	PAGESEL	_Heater_Init
001679   160a     bsf     0x0a, 0x4        
00167a   276d     call    0x076d           	CALL	_Heater_Init
00167b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00167c   160a     bsf     0x0a, 0x4        
                                           ;	.line	22; "main.c"	Cooler_Init();
00167d   118a     bcf     0x0a, 0x3        	PAGESEL	_Cooler_Init
00167e   160a     bsf     0x0a, 0x4        
00167f   274a     call    0x074a           	CALL	_Cooler_Init
001680   118a     bcf     0x0a, 0x3        	PAGESEL	$
001681   160a     bsf     0x0a, 0x4        
                                           ;	.line	24; "main.c"	LED_Init(LED_7,LED_OFF);
001682   3000     movlw   0x00             	MOVLW	0x00
001683   00ff     movwf   0x7f             	MOVWF	STK00
001684   3007     movlw   0x07             	MOVLW	0x07
001685   158a     bsf     0x0a, 0x3        	PAGESEL	_LED_Init
001686   120a     bcf     0x0a, 0x4        
001687   26f4     call    0x06f4           	CALL	_LED_Init
001688   118a     bcf     0x0a, 0x3        	PAGESEL	$
001689   160a     bsf     0x0a, 0x4        
                                           ;	.line	26; "main.c"	Temprature_Init();
00168a   158a     bsf     0x0a, 0x3        	PAGESEL	_Temprature_Init
00168b   120a     bcf     0x0a, 0x4        
00168c   27f8     call    0x07f8           	CALL	_Temprature_Init
00168d   118a     bcf     0x0a, 0x3        	PAGESEL	$
00168e   160a     bsf     0x0a, 0x4        
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;	.line	28; "main.c"	Readings.Set_value = 40;
00168f   3028     movlw   0x28             	MOVLW	0x28
001690   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
001691   1703     bsf     0x03, 0x6        
001692   00e2     movwf   0x62             	MOVWF	(_Readings + 4)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
001693   01e3     clrf    0x63             	CLRF	(_Readings + 5)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
001694   01e4     clrf    0x64             	CLRF	(_Readings + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
001695   01e5     clrf    0x65             	CLRF	(_Readings + 7)
                                           ;	.line	30; "main.c"	TMR0_Init();
001696   118a     bcf     0x0a, 0x3        	PAGESEL	_TMR0_Init
001697   160a     bsf     0x0a, 0x4        
001698   264c     call    0x064c           	CALL	_TMR0_Init
001699   118a     bcf     0x0a, 0x3        	PAGESEL	$
00169a   160a     bsf     0x0a, 0x4        
                                           ;	.line	31; "main.c"	TMR0_Start();
00169b   118a     bcf     0x0a, 0x3        	PAGESEL	_TMR0_Start
00169c   160a     bsf     0x0a, 0x4        
00169d   2643     call    0x0643           	CALL	_TMR0_Start
00169e   118a     bcf     0x0a, 0x3        	PAGESEL	$
00169f   160a     bsf     0x0a, 0x4        
                                           _00106_DS_
                                           ;	.line	33; "main.c"	while(1){
0016a0   2ea0     goto    0x06a0           	GOTO	_00106_DS_
0016a1   0008     return                   	RETURN	
                                           ; exit point of _main
                                           
                                           
                                           ;	code size estimation:
                                           ;	   36+   21 =    57 instructions (  156 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:43 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"push_button.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_Heater_Init
                                           	extern	_Heater_SetState
                                           	extern	_Heater_GetState
                                           	extern	_Heater_update
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_LED_Init
                                           	extern	_LED_Update
                                           	extern	_LED_GetState
                                           	extern	_LED_SetState
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_SettingMode_update
                                           	extern	_SettingMode_Get_SSD_state
                                           	extern	_SettingMode_OFF_mode
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	__mulchar
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_PB_GetState
                                           	global	_PB_Update
                                           	global	_PB_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_push_button_0	udata
                                           r0x102A	res	1
                                           r0x102B	res	1
                                           r0x102C	res	1
                                           r0x102D	res	1
                                           r0x102E	res	1
                                           r0x1022	res	1
                                           r0x1023	res	1
                                           r0x1024	res	1
                                           r0x1025	res	1
                                           r0x1026	res	1
                                           r0x1027	res	1
                                           r0x1028	res	1
                                           r0x1029	res	1
                                           r0x101A	res	1
                                           r0x101B	res	1
                                           r0x101C	res	1
                                           r0x101D	res	1
                                           r0x101E	res	1
                                           r0x101F	res	1
                                           r0x1020	res	1
                                           r0x1021	res	1
                                           _pb_info	res	12
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_push_button	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SetValue_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _PB_GetState
                                           ;   _PB_GetState
                                           ;   _PB_GetState
                                           ;   _PB_GetState
                                           ;4 compiler assigned registers:
                                           ;   r0x101E
                                           ;   r0x101F
                                           ;   r0x1020
                                           ;   r0x1021
                                           ;; Starting pCode block
                                           _SetValue_update	;Function start
                                           ; 2 exit points
                                           ;	.line	133; "push_button.c"	if(Readings.Set_value <= 75 && Readings.Set_value >= 35)
000037   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000038   1703     bsf     0x03, 0x6        
000039   0862     movf    0x62, 0x0        	MOVF	(_Readings + 4),W
00003a   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
00003b   1303     bcf     0x03, 0x6        
00003c   00d6     movwf   0x56             	MOVWF	r0x101E
00003d   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
00003e   1703     bsf     0x03, 0x6        
00003f   0863     movf    0x63, 0x0        	MOVF	(_Readings + 5),W
000040   1283     bcf     0x03, 0x5        	BANKSEL	r0x101F
000041   1303     bcf     0x03, 0x6        
000042   00d7     movwf   0x57             	MOVWF	r0x101F
000043   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000044   1703     bsf     0x03, 0x6        
000045   0864     movf    0x64, 0x0        	MOVF	(_Readings + 6),W
000046   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
000047   1303     bcf     0x03, 0x6        
000048   00d8     movwf   0x58             	MOVWF	r0x1020
000049   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
00004a   1703     bsf     0x03, 0x6        
00004b   0865     movf    0x65, 0x0        	MOVF	(_Readings + 7),W
00004c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
00004d   1303     bcf     0x03, 0x6        
00004e   00d9     movwf   0x59             	MOVWF	r0x1021
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4C=76), size=4
00004f   3000     movlw   0x00             	MOVLW	0x00
000050   0259     subwf   0x59, 0x0        	SUBWF	r0x1021,W
000051   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000052   285d     goto    0x005d           	GOTO	_00234_DS_
000053   3000     movlw   0x00             	MOVLW	0x00
000054   0258     subwf   0x58, 0x0        	SUBWF	r0x1020,W
000055   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000056   285d     goto    0x005d           	GOTO	_00234_DS_
000057   3000     movlw   0x00             	MOVLW	0x00
000058   0257     subwf   0x57, 0x0        	SUBWF	r0x101F,W
000059   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00005a   285d     goto    0x005d           	GOTO	_00234_DS_
00005b   304c     movlw   0x4c             	MOVLW	0x4c
00005c   0256     subwf   0x56, 0x0        	SUBWF	r0x101E,W
                                           _00234_DS_
00005d   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00005e   292b     goto    0x012b           	GOTO	_00214_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;;unsigned compare: left < lit(0x23=35), size=4
00005f   3000     movlw   0x00             	MOVLW	0x00
000060   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
000061   1303     bcf     0x03, 0x6        
000062   0259     subwf   0x59, 0x0        	SUBWF	r0x1021,W
000063   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000064   286f     goto    0x006f           	GOTO	_00235_DS_
000065   3000     movlw   0x00             	MOVLW	0x00
000066   0258     subwf   0x58, 0x0        	SUBWF	r0x1020,W
000067   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000068   286f     goto    0x006f           	GOTO	_00235_DS_
000069   3000     movlw   0x00             	MOVLW	0x00
00006a   0257     subwf   0x57, 0x0        	SUBWF	r0x101F,W
00006b   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00006c   286f     goto    0x006f           	GOTO	_00235_DS_
00006d   3023     movlw   0x23             	MOVLW	0x23
00006e   0256     subwf   0x56, 0x0        	SUBWF	r0x101E,W
                                           _00235_DS_
00006f   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000070   292b     goto    0x012b           	GOTO	_00214_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;	.line	135; "push_button.c"	if(PB_GetState(PB_UP) == PB_PRE_RELEASED)
000071   3002     movlw   0x02             	MOVLW	0x02
000072   212c     call    0x012c           	CALL	_PB_GetState
000073   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
000074   1303     bcf     0x03, 0x6        
000075   00d6     movwf   0x56             	MOVWF	r0x101E
000076   3a03     xorlw   0x03             	XORLW	0x03
000077   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000078   28cd     goto    0x00cd           	GOTO	_00209_DS_
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	137; "push_button.c"	Counters.FixedMode_counter = 0; //count new 5 seconds
000079   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00007a   1703     bsf     0x03, 0x6        
00007b   0190     clrf    0x10             	CLRF	(_Counters + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
00007c   0191     clrf    0x11             	CLRF	(_Counters + 1)
                                           ;	.line	138; "push_button.c"	Readings.Set_value+=5 ;
00007d   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
00007e   1703     bsf     0x03, 0x6        
00007f   0862     movf    0x62, 0x0        	MOVF	(_Readings + 4),W
000080   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
000081   1303     bcf     0x03, 0x6        
000082   00d6     movwf   0x56             	MOVWF	r0x101E
000083   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000084   1703     bsf     0x03, 0x6        
000085   0863     movf    0x63, 0x0        	MOVF	(_Readings + 5),W
000086   1283     bcf     0x03, 0x5        	BANKSEL	r0x101F
000087   1303     bcf     0x03, 0x6        
000088   00d7     movwf   0x57             	MOVWF	r0x101F
000089   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
00008a   1703     bsf     0x03, 0x6        
00008b   0864     movf    0x64, 0x0        	MOVF	(_Readings + 6),W
00008c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
00008d   1303     bcf     0x03, 0x6        
00008e   00d8     movwf   0x58             	MOVWF	r0x1020
00008f   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000090   1703     bsf     0x03, 0x6        
000091   0865     movf    0x65, 0x0        	MOVF	(_Readings + 7),W
000092   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
000093   1303     bcf     0x03, 0x6        
000094   00d9     movwf   0x59             	MOVWF	r0x1021
000095   3005     movlw   0x05             	MOVLW	0x05
000096   07d6     addwf   0x56, 0x1        	ADDWF	r0x101E,F
000097   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000098   0ad7     incf    0x57, 0x1        	INCF	r0x101F,F
000099   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00009a   0ad8     incf    0x58, 0x1        	INCF	r0x1020,F
00009b   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00009c   0ad9     incf    0x59, 0x1        	INCF	r0x1021,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
00009d   0856     movf    0x56, 0x0        	MOVF	r0x101E,W
00009e   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
00009f   1703     bsf     0x03, 0x6        
0000a0   00e2     movwf   0x62             	MOVWF	(_Readings + 4)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
0000a1   1283     bcf     0x03, 0x5        	BANKSEL	r0x101F
0000a2   1303     bcf     0x03, 0x6        
0000a3   0857     movf    0x57, 0x0        	MOVF	r0x101F,W
0000a4   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0000a5   1703     bsf     0x03, 0x6        
0000a6   00e3     movwf   0x63             	MOVWF	(_Readings + 5)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
0000a7   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
0000a8   1303     bcf     0x03, 0x6        
0000a9   0858     movf    0x58, 0x0        	MOVF	r0x1020,W
0000aa   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0000ab   1703     bsf     0x03, 0x6        
0000ac   00e4     movwf   0x64             	MOVWF	(_Readings + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
0000ad   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
0000ae   1303     bcf     0x03, 0x6        
0000af   0859     movf    0x59, 0x0        	MOVF	r0x1021,W
0000b0   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0000b1   1703     bsf     0x03, 0x6        
0000b2   00e5     movwf   0x65             	MOVWF	(_Readings + 7)
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4C=76), size=4
                                           ;	.line	139; "push_button.c"	if(Readings.Set_value > 75)
0000b3   3000     movlw   0x00             	MOVLW	0x00
0000b4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
0000b5   1303     bcf     0x03, 0x6        
0000b6   0259     subwf   0x59, 0x0        	SUBWF	r0x1021,W
0000b7   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000b8   28c3     goto    0x00c3           	GOTO	_00236_DS_
0000b9   3000     movlw   0x00             	MOVLW	0x00
0000ba   0258     subwf   0x58, 0x0        	SUBWF	r0x1020,W
0000bb   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000bc   28c3     goto    0x00c3           	GOTO	_00236_DS_
0000bd   3000     movlw   0x00             	MOVLW	0x00
0000be   0257     subwf   0x57, 0x0        	SUBWF	r0x101F,W
0000bf   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000c0   28c3     goto    0x00c3           	GOTO	_00236_DS_
0000c1   304c     movlw   0x4c             	MOVLW	0x4c
0000c2   0256     subwf   0x56, 0x0        	SUBWF	r0x101E,W
                                           _00236_DS_
0000c3   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000c4   292b     goto    0x012b           	GOTO	_00214_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;	.line	141; "push_button.c"	Readings.Set_value = 75 ;
0000c5   304b     movlw   0x4b             	MOVLW	0x4b
0000c6   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0000c7   1703     bsf     0x03, 0x6        
0000c8   00e2     movwf   0x62             	MOVWF	(_Readings + 4)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
0000c9   01e3     clrf    0x63             	CLRF	(_Readings + 5)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
0000ca   01e4     clrf    0x64             	CLRF	(_Readings + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
0000cb   01e5     clrf    0x65             	CLRF	(_Readings + 7)
0000cc   292b     goto    0x012b           	GOTO	_00214_DS_
                                           _00209_DS_
                                           ;	.line	144; "push_button.c"	else if(PB_GetState(PB_DOWN) == PB_PRE_RELEASED)
0000cd   3001     movlw   0x01             	MOVLW	0x01
0000ce   212c     call    0x012c           	CALL	_PB_GetState
0000cf   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
0000d0   1303     bcf     0x03, 0x6        
0000d1   00d6     movwf   0x56             	MOVWF	r0x101E
0000d2   3a03     xorlw   0x03             	XORLW	0x03
0000d3   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000d4   292b     goto    0x012b           	GOTO	_00214_DS_
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	146; "push_button.c"	Counters.FixedMode_counter = 0; //count new 5 seconds
0000d5   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
0000d6   1703     bsf     0x03, 0x6        
0000d7   0190     clrf    0x10             	CLRF	(_Counters + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
0000d8   0191     clrf    0x11             	CLRF	(_Counters + 1)
                                           ;	.line	147; "push_button.c"	Readings.Set_value-= 5 ;
0000d9   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0000da   1703     bsf     0x03, 0x6        
0000db   0862     movf    0x62, 0x0        	MOVF	(_Readings + 4),W
0000dc   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
0000dd   1303     bcf     0x03, 0x6        
0000de   00d6     movwf   0x56             	MOVWF	r0x101E
0000df   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0000e0   1703     bsf     0x03, 0x6        
0000e1   0863     movf    0x63, 0x0        	MOVF	(_Readings + 5),W
0000e2   1283     bcf     0x03, 0x5        	BANKSEL	r0x101F
0000e3   1303     bcf     0x03, 0x6        
0000e4   00d7     movwf   0x57             	MOVWF	r0x101F
0000e5   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0000e6   1703     bsf     0x03, 0x6        
0000e7   0864     movf    0x64, 0x0        	MOVF	(_Readings + 6),W
0000e8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
0000e9   1303     bcf     0x03, 0x6        
0000ea   00d8     movwf   0x58             	MOVWF	r0x1020
0000eb   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0000ec   1703     bsf     0x03, 0x6        
0000ed   0865     movf    0x65, 0x0        	MOVF	(_Readings + 7),W
0000ee   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
0000ef   1303     bcf     0x03, 0x6        
0000f0   00d9     movwf   0x59             	MOVWF	r0x1021
0000f1   30fb     movlw   0xfb             	MOVLW	0xfb
0000f2   07d6     addwf   0x56, 0x1        	ADDWF	r0x101E,F
0000f3   30ff     movlw   0xff             	MOVLW	0xff
0000f4   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000f5   07d7     addwf   0x57, 0x1        	ADDWF	r0x101F,F
0000f6   30ff     movlw   0xff             	MOVLW	0xff
0000f7   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000f8   07d8     addwf   0x58, 0x1        	ADDWF	r0x1020,F
0000f9   30ff     movlw   0xff             	MOVLW	0xff
0000fa   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000fb   07d9     addwf   0x59, 0x1        	ADDWF	r0x1021,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
0000fc   0856     movf    0x56, 0x0        	MOVF	r0x101E,W
0000fd   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0000fe   1703     bsf     0x03, 0x6        
0000ff   00e2     movwf   0x62             	MOVWF	(_Readings + 4)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
000100   1283     bcf     0x03, 0x5        	BANKSEL	r0x101F
000101   1303     bcf     0x03, 0x6        
000102   0857     movf    0x57, 0x0        	MOVF	r0x101F,W
000103   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000104   1703     bsf     0x03, 0x6        
000105   00e3     movwf   0x63             	MOVWF	(_Readings + 5)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
000106   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
000107   1303     bcf     0x03, 0x6        
000108   0858     movf    0x58, 0x0        	MOVF	r0x1020,W
000109   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
00010a   1703     bsf     0x03, 0x6        
00010b   00e4     movwf   0x64             	MOVWF	(_Readings + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
00010c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
00010d   1303     bcf     0x03, 0x6        
00010e   0859     movf    0x59, 0x0        	MOVF	r0x1021,W
00010f   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000110   1703     bsf     0x03, 0x6        
000111   00e5     movwf   0x65             	MOVWF	(_Readings + 7)
                                           ;;unsigned compare: left < lit(0x23=35), size=4
                                           ;	.line	148; "push_button.c"	if(Readings.Set_value < 35)
000112   3000     movlw   0x00             	MOVLW	0x00
000113   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
000114   1303     bcf     0x03, 0x6        
000115   0259     subwf   0x59, 0x0        	SUBWF	r0x1021,W
000116   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000117   2922     goto    0x0122           	GOTO	_00237_DS_
000118   3000     movlw   0x00             	MOVLW	0x00
000119   0258     subwf   0x58, 0x0        	SUBWF	r0x1020,W
00011a   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00011b   2922     goto    0x0122           	GOTO	_00237_DS_
00011c   3000     movlw   0x00             	MOVLW	0x00
00011d   0257     subwf   0x57, 0x0        	SUBWF	r0x101F,W
00011e   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00011f   2922     goto    0x0122           	GOTO	_00237_DS_
000120   3023     movlw   0x23             	MOVLW	0x23
000121   0256     subwf   0x56, 0x0        	SUBWF	r0x101E,W
                                           _00237_DS_
000122   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000123   292b     goto    0x012b           	GOTO	_00214_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;	.line	150; "push_button.c"	Readings.Set_value = 35 ;
000124   3023     movlw   0x23             	MOVLW	0x23
000125   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000126   1703     bsf     0x03, 0x6        
000127   00e2     movwf   0x62             	MOVWF	(_Readings + 4)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
000128   01e3     clrf    0x63             	CLRF	(_Readings + 5)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
000129   01e4     clrf    0x64             	CLRF	(_Readings + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
00012a   01e5     clrf    0x65             	CLRF	(_Readings + 7)
                                           _00214_DS_
00012b   0008     return                   	RETURN	
                                           ; exit point of _SetValue_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _PB_GetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mulchar
                                           ;   __mulchar
                                           ;5 compiler assigned registers:
                                           ;   r0x101A
                                           ;   STK00
                                           ;   r0x101B
                                           ;   r0x101C
                                           ;   r0x101D
                                           ;; Starting pCode block
                                           _PB_GetState	;Function start
                                           ; 2 exit points
                                           ;	.line	121; "push_button.c"	tPB_State PB_GetState(tPB pb)
00012c   1283     bcf     0x03, 0x5        	BANKSEL	r0x101A
00012d   1303     bcf     0x03, 0x6        
00012e   00d2     movwf   0x52             	MOVWF	r0x101A
                                           ;	.line	125; "push_button.c"	ret = pb_info[pb].state;
00012f   3003     movlw   0x03             	MOVLW	0x03
000130   00ff     movwf   0x7f             	MOVWF	STK00
000131   0852     movf    0x52, 0x0        	MOVF	r0x101A,W
000132   118a     bcf     0x0a, 0x3        	PAGESEL	__mulchar
000133   160a     bsf     0x0a, 0x4        
000134   2778     call    0x0778           	CALL	__mulchar
000135   118a     bcf     0x0a, 0x3        	PAGESEL	$
000136   120a     bcf     0x0a, 0x4        
000137   1283     bcf     0x03, 0x5        	BANKSEL	r0x101B
000138   1303     bcf     0x03, 0x6        
000139   00d3     movwf   0x53             	MOVWF	r0x101B
00013a   01d4     clrf    0x54             	CLRF	r0x101C
00013b   0853     movf    0x53, 0x0        	MOVF	r0x101B,W
00013c   3e5a     addlw   0x5a             	ADDLW	(_pb_info + 0)
00013d   00d2     movwf   0x52             	MOVWF	r0x101A
00013e   3000     movlw   0x00             	MOVLW	high (_pb_info + 0)
00013f   00d5     movwf   0x55             	MOVWF	r0x101D
000140   3000     movlw   0x00             	MOVLW	0x00
000141   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000142   0f54     incfsz  0x54, 0x0        	INCFSZ	r0x101C,W
000143   07d5     addwf   0x55, 0x1        	ADDWF	r0x101D,F
000144   3002     movlw   0x02             	MOVLW	0x02
000145   07d2     addwf   0x52, 0x1        	ADDWF	r0x101A,F
000146   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000147   0ad5     incf    0x55, 0x1        	INCF	r0x101D,F
000148   0852     movf    0x52, 0x0        	MOVF	r0x101A,W
000149   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00014a   1303     bcf     0x03, 0x6        
00014b   0084     movwf   0x04             	MOVWF	FSR
00014c   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00014d   1283     bcf     0x03, 0x5        	BANKSEL	r0x101D
00014e   1303     bcf     0x03, 0x6        
00014f   1855     btfsc   0x55, 0x0        	BTFSC	r0x101D,0
000150   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000151   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000152   1303     bcf     0x03, 0x6        
000153   0800     movf    0x00, 0x0        	MOVF	INDF,W
                                           ;	.line	127; "push_button.c"	return ret;
000154   1283     bcf     0x03, 0x5        	BANKSEL	r0x101B
000155   1303     bcf     0x03, 0x6        
000156   00d3     movwf   0x53             	MOVWF	r0x101B
000157   0008     return                   	RETURN	
                                           ; exit point of _PB_GetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _PB_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mulchar
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   __mulchar
                                           ;   _SetValue_update
                                           ;   __mulchar
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   __mulchar
                                           ;   _SetValue_update
                                           ;9 compiler assigned registers:
                                           ;   r0x1022
                                           ;   STK00
                                           ;   r0x1023
                                           ;   r0x1024
                                           ;   r0x1025
                                           ;   r0x1026
                                           ;   r0x1027
                                           ;   r0x1028
                                           ;   r0x1029
                                           ;; Starting pCode block
                                           _PB_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	59; "push_button.c"	for (current_button = PB_POWER; current_button <= PB_UNUSED; current_button++)
000158   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
000159   1303     bcf     0x03, 0x6        
00015a   01ca     clrf    0x4a             	CLRF	r0x1022
                                           _00155_DS_
                                           ;	.line	62; "push_button.c"	pb_info[current_button].samples[0] = pb_info[current_button].samples[1];
00015b   3003     movlw   0x03             	MOVLW	0x03
00015c   00ff     movwf   0x7f             	MOVWF	STK00
00015d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
00015e   1303     bcf     0x03, 0x6        
00015f   084a     movf    0x4a, 0x0        	MOVF	r0x1022,W
000160   118a     bcf     0x0a, 0x3        	PAGESEL	__mulchar
000161   160a     bsf     0x0a, 0x4        
000162   2778     call    0x0778           	CALL	__mulchar
000163   118a     bcf     0x0a, 0x3        	PAGESEL	$
000164   120a     bcf     0x0a, 0x4        
000165   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000166   1303     bcf     0x03, 0x6        
000167   00cb     movwf   0x4b             	MOVWF	r0x1023
000168   01cc     clrf    0x4c             	CLRF	r0x1024
000169   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
00016a   3e5a     addlw   0x5a             	ADDLW	(_pb_info + 0)
00016b   00cd     movwf   0x4d             	MOVWF	r0x1025
00016c   3000     movlw   0x00             	MOVLW	high (_pb_info + 0)
00016d   00ce     movwf   0x4e             	MOVWF	r0x1026
00016e   3000     movlw   0x00             	MOVLW	0x00
00016f   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000170   0f4c     incfsz  0x4c, 0x0        	INCFSZ	r0x1024,W
000171   07ce     addwf   0x4e, 0x1        	ADDWF	r0x1026,F
000172   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
000173   3e5a     addlw   0x5a             	ADDLW	(_pb_info + 0)
000174   00cb     movwf   0x4b             	MOVWF	r0x1023
000175   084c     movf    0x4c, 0x0        	MOVF	r0x1024,W
000176   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000177   0f4c     incfsz  0x4c, 0x0        	INCFSZ	r0x1024,W
000178   3e00     addlw   0x00             	ADDLW	high (_pb_info + 0)
000179   00cc     movwf   0x4c             	MOVWF	r0x1024
00017a   0acb     incf    0x4b, 0x1        	INCF	r0x1023,F
00017b   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00017c   0acc     incf    0x4c, 0x1        	INCF	r0x1024,F
00017d   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
00017e   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00017f   1303     bcf     0x03, 0x6        
000180   0084     movwf   0x04             	MOVWF	FSR
000181   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000182   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
000183   1303     bcf     0x03, 0x6        
000184   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1024,0
000185   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000186   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000187   1303     bcf     0x03, 0x6        
000188   0800     movf    0x00, 0x0        	MOVF	INDF,W
000189   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
00018a   1303     bcf     0x03, 0x6        
00018b   00cf     movwf   0x4f             	MOVWF	r0x1027
00018c   084d     movf    0x4d, 0x0        	MOVF	r0x1025,W
00018d   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00018e   1303     bcf     0x03, 0x6        
00018f   0084     movwf   0x04             	MOVWF	FSR
000190   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000191   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000192   1303     bcf     0x03, 0x6        
000193   184e     btfsc   0x4e, 0x0        	BTFSC	r0x1026,0
000194   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000195   084f     movf    0x4f, 0x0        	MOVF	r0x1027,W
000196   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000197   1303     bcf     0x03, 0x6        
000198   0080     movwf   0x00             	MOVWF	INDF
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
                                           ;	.line	64; "push_button.c"	switch(current_button)
000199   3004     movlw   0x04             	MOVLW	0x04
00019a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
00019b   1303     bcf     0x03, 0x6        
00019c   024a     subwf   0x4a, 0x0        	SUBWF	r0x1022,W
00019d   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00019e   2a14     goto    0x0214           	GOTO	_00137_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00019f   3001     movlw   0x01             	MOVLW	HIGH(_00191_DS_)
0001a0   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
0001a1   1303     bcf     0x03, 0x6        
0001a2   008a     movwf   0x0a             	MOVWF	PCLATH
0001a3   30ad     movlw   0xad             	MOVLW	_00191_DS_
0001a4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
0001a5   1303     bcf     0x03, 0x6        
0001a6   074a     addwf   0x4a, 0x0        	ADDWF	r0x1022,W
0001a7   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0001a8   29ac     goto    0x01ac           	GOTO	_00001_DS_
0001a9   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
0001aa   1303     bcf     0x03, 0x6        
0001ab   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00001_DS_
0001ac   0082     movwf   0x02             	MOVWF	PCL
                                           _00191_DS_
0001ad   29b1     goto    0x01b1           	GOTO	_00132_DS_
0001ae   29ca     goto    0x01ca           	GOTO	_00133_DS_
0001af   29e3     goto    0x01e3           	GOTO	_00134_DS_
0001b0   29fc     goto    0x01fc           	GOTO	_00135_DS_
                                           _00132_DS_
                                           ;	.line	67; "push_button.c"	pb_info[current_button].samples[1] = GPIO_GetPortPinState(PORT_B, 0);
0001b1   3000     movlw   0x00             	MOVLW	0x00
0001b2   00ff     movwf   0x7f             	MOVWF	STK00
0001b3   3001     movlw   0x01             	MOVLW	0x01
0001b4   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
0001b5   120a     bcf     0x0a, 0x4        
0001b6   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
0001b7   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001b8   120a     bcf     0x0a, 0x4        
0001b9   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
0001ba   1303     bcf     0x03, 0x6        
0001bb   00cd     movwf   0x4d             	MOVWF	r0x1025
0001bc   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
0001bd   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001be   1303     bcf     0x03, 0x6        
0001bf   0084     movwf   0x04             	MOVWF	FSR
0001c0   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001c1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
0001c2   1303     bcf     0x03, 0x6        
0001c3   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1024,0
0001c4   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001c5   084d     movf    0x4d, 0x0        	MOVF	r0x1025,W
0001c6   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001c7   1303     bcf     0x03, 0x6        
0001c8   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	68; "push_button.c"	break;
0001c9   2a14     goto    0x0214           	GOTO	_00137_DS_
                                           _00133_DS_
                                           ;	.line	70; "push_button.c"	pb_info[current_button].samples[1] = GPIO_GetPortPinState(PORT_B, 1);
0001ca   3001     movlw   0x01             	MOVLW	0x01
0001cb   00ff     movwf   0x7f             	MOVWF	STK00
0001cc   3001     movlw   0x01             	MOVLW	0x01
0001cd   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
0001ce   120a     bcf     0x0a, 0x4        
0001cf   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
0001d0   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001d1   120a     bcf     0x0a, 0x4        
0001d2   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
0001d3   1303     bcf     0x03, 0x6        
0001d4   00cd     movwf   0x4d             	MOVWF	r0x1025
0001d5   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
0001d6   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001d7   1303     bcf     0x03, 0x6        
0001d8   0084     movwf   0x04             	MOVWF	FSR
0001d9   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001da   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
0001db   1303     bcf     0x03, 0x6        
0001dc   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1024,0
0001dd   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001de   084d     movf    0x4d, 0x0        	MOVF	r0x1025,W
0001df   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001e0   1303     bcf     0x03, 0x6        
0001e1   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	71; "push_button.c"	break;
0001e2   2a14     goto    0x0214           	GOTO	_00137_DS_
                                           _00134_DS_
                                           ;	.line	73; "push_button.c"	pb_info[current_button].samples[1] = GPIO_GetPortPinState(PORT_B, 2);
0001e3   3002     movlw   0x02             	MOVLW	0x02
0001e4   00ff     movwf   0x7f             	MOVWF	STK00
0001e5   3001     movlw   0x01             	MOVLW	0x01
0001e6   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
0001e7   120a     bcf     0x0a, 0x4        
0001e8   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
0001e9   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001ea   120a     bcf     0x0a, 0x4        
0001eb   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
0001ec   1303     bcf     0x03, 0x6        
0001ed   00cd     movwf   0x4d             	MOVWF	r0x1025
0001ee   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
0001ef   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001f0   1303     bcf     0x03, 0x6        
0001f1   0084     movwf   0x04             	MOVWF	FSR
0001f2   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001f3   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
0001f4   1303     bcf     0x03, 0x6        
0001f5   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1024,0
0001f6   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001f7   084d     movf    0x4d, 0x0        	MOVF	r0x1025,W
0001f8   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001f9   1303     bcf     0x03, 0x6        
0001fa   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	74; "push_button.c"	break;
0001fb   2a14     goto    0x0214           	GOTO	_00137_DS_
                                           _00135_DS_
                                           ;	.line	76; "push_button.c"	pb_info[current_button].samples[1] = GPIO_GetPortPinState(PORT_B, 3);
0001fc   3003     movlw   0x03             	MOVLW	0x03
0001fd   00ff     movwf   0x7f             	MOVWF	STK00
0001fe   3001     movlw   0x01             	MOVLW	0x01
0001ff   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000200   120a     bcf     0x0a, 0x4        
000201   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
000202   118a     bcf     0x0a, 0x3        	PAGESEL	$
000203   120a     bcf     0x0a, 0x4        
000204   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
000205   1303     bcf     0x03, 0x6        
000206   00cd     movwf   0x4d             	MOVWF	r0x1025
000207   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
000208   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000209   1303     bcf     0x03, 0x6        
00020a   0084     movwf   0x04             	MOVWF	FSR
00020b   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00020c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
00020d   1303     bcf     0x03, 0x6        
00020e   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1024,0
00020f   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000210   084d     movf    0x4d, 0x0        	MOVF	r0x1025,W
000211   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000212   1303     bcf     0x03, 0x6        
000213   0080     movwf   0x00             	MOVWF	INDF
                                           _00137_DS_
                                           ;	.line	84; "push_button.c"	switch(pb_info[current_button].state)
000214   3003     movlw   0x03             	MOVLW	0x03
000215   00ff     movwf   0x7f             	MOVWF	STK00
000216   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
000217   1303     bcf     0x03, 0x6        
000218   084a     movf    0x4a, 0x0        	MOVF	r0x1022,W
000219   118a     bcf     0x0a, 0x3        	PAGESEL	__mulchar
00021a   160a     bsf     0x0a, 0x4        
00021b   2778     call    0x0778           	CALL	__mulchar
00021c   118a     bcf     0x0a, 0x3        	PAGESEL	$
00021d   120a     bcf     0x0a, 0x4        
00021e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
00021f   1303     bcf     0x03, 0x6        
000220   00cb     movwf   0x4b             	MOVWF	r0x1023
000221   01cc     clrf    0x4c             	CLRF	r0x1024
000222   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
000223   3e5a     addlw   0x5a             	ADDLW	(_pb_info + 0)
000224   00cb     movwf   0x4b             	MOVWF	r0x1023
000225   3000     movlw   0x00             	MOVLW	0x00
000226   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000227   0f4c     incfsz  0x4c, 0x0        	INCFSZ	r0x1024,W
000228   3e00     addlw   0x00             	ADDLW	high (_pb_info + 0)
000229   00cc     movwf   0x4c             	MOVWF	r0x1024
00022a   3002     movlw   0x02             	MOVLW	0x02
00022b   074b     addwf   0x4b, 0x0        	ADDWF	r0x1023,W
00022c   00cd     movwf   0x4d             	MOVWF	r0x1025
00022d   01ce     clrf    0x4e             	CLRF	r0x1026
00022e   0dce     rlf     0x4e, 0x1        	RLF	r0x1026,F
00022f   084c     movf    0x4c, 0x0        	MOVF	r0x1024,W
000230   07ce     addwf   0x4e, 0x1        	ADDWF	r0x1026,F
000231   084d     movf    0x4d, 0x0        	MOVF	r0x1025,W
000232   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000233   1303     bcf     0x03, 0x6        
000234   0084     movwf   0x04             	MOVWF	FSR
000235   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000236   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000237   1303     bcf     0x03, 0x6        
000238   184e     btfsc   0x4e, 0x0        	BTFSC	r0x1026,0
000239   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00023a   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00023b   1303     bcf     0x03, 0x6        
00023c   0800     movf    0x00, 0x0        	MOVF	INDF,W
00023d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
00023e   1303     bcf     0x03, 0x6        
00023f   00cf     movwf   0x4f             	MOVWF	r0x1027
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
000240   3004     movlw   0x04             	MOVLW	0x04
000241   024f     subwf   0x4f, 0x0        	SUBWF	r0x1027,W
000242   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000243   2b19     goto    0x0319           	GOTO	_00156_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
000244   3002     movlw   0x02             	MOVLW	HIGH(_00193_DS_)
000245   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000246   1303     bcf     0x03, 0x6        
000247   008a     movwf   0x0a             	MOVWF	PCLATH
000248   3052     movlw   0x52             	MOVLW	_00193_DS_
000249   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
00024a   1303     bcf     0x03, 0x6        
00024b   074f     addwf   0x4f, 0x0        	ADDWF	r0x1027,W
00024c   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00024d   2a51     goto    0x0251           	GOTO	_00002_DS_
00024e   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00024f   1303     bcf     0x03, 0x6        
000250   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00002_DS_
000251   0082     movwf   0x02             	MOVWF	PCL
                                           _00193_DS_
000252   2a56     goto    0x0256           	GOTO	_00138_DS_
000253   2a91     goto    0x0291           	GOTO	_00142_DS_
000254   2aba     goto    0x02ba           	GOTO	_00145_DS_
000255   2af5     goto    0x02f5           	GOTO	_00149_DS_
                                           _00138_DS_
                                           ;	.line	87; "push_button.c"	if((pb_info[current_button].samples[0] == PB_PRESSED_VOLTAGE) &&
000256   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000257   1303     bcf     0x03, 0x6        
000258   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
000259   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00025a   1303     bcf     0x03, 0x6        
00025b   0084     movwf   0x04             	MOVWF	FSR
00025c   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00025d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
00025e   1303     bcf     0x03, 0x6        
00025f   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1024,0
000260   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000261   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000262   1303     bcf     0x03, 0x6        
000263   0800     movf    0x00, 0x0        	MOVF	INDF,W
000264   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
000265   1303     bcf     0x03, 0x6        
000266   00cf     movwf   0x4f             	MOVWF	r0x1027
000267   084f     movf    0x4f, 0x0        	MOVF	r0x1027,W
000268   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000269   2b19     goto    0x0319           	GOTO	_00156_DS_
                                           ;	.line	88; "push_button.c"	(pb_info[current_button].samples[1] == PB_PRESSED_VOLTAGE))
00026a   3001     movlw   0x01             	MOVLW	0x01
00026b   074b     addwf   0x4b, 0x0        	ADDWF	r0x1023,W
00026c   00cf     movwf   0x4f             	MOVWF	r0x1027
00026d   01d0     clrf    0x50             	CLRF	r0x1028
00026e   0dd0     rlf     0x50, 0x1        	RLF	r0x1028,F
00026f   084c     movf    0x4c, 0x0        	MOVF	r0x1024,W
000270   07d0     addwf   0x50, 0x1        	ADDWF	r0x1028,F
000271   084f     movf    0x4f, 0x0        	MOVF	r0x1027,W
000272   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000273   1303     bcf     0x03, 0x6        
000274   0084     movwf   0x04             	MOVWF	FSR
000275   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000276   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
000277   1303     bcf     0x03, 0x6        
000278   1850     btfsc   0x50, 0x0        	BTFSC	r0x1028,0
000279   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00027a   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00027b   1303     bcf     0x03, 0x6        
00027c   0800     movf    0x00, 0x0        	MOVF	INDF,W
00027d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1029
00027e   1303     bcf     0x03, 0x6        
00027f   00d1     movwf   0x51             	MOVWF	r0x1029
000280   0851     movf    0x51, 0x0        	MOVF	r0x1029,W
000281   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000282   2b19     goto    0x0319           	GOTO	_00156_DS_
                                           ;	.line	90; "push_button.c"	pb_info[current_button].state = PB_PRE_PRESSED;
000283   084d     movf    0x4d, 0x0        	MOVF	r0x1025,W
000284   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000285   1303     bcf     0x03, 0x6        
000286   0084     movwf   0x04             	MOVWF	FSR
000287   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000288   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000289   1303     bcf     0x03, 0x6        
00028a   184e     btfsc   0x4e, 0x0        	BTFSC	r0x1026,0
00028b   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00028c   3001     movlw   0x01             	MOVLW	0x01
00028d   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00028e   1303     bcf     0x03, 0x6        
00028f   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	92; "push_button.c"	break;
000290   2b19     goto    0x0319           	GOTO	_00156_DS_
                                           _00142_DS_
                                           ;	.line	94; "push_button.c"	if(pb_info[current_button].samples[1] == PB_PRESSED_VOLTAGE)
000291   3001     movlw   0x01             	MOVLW	0x01
000292   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000293   1303     bcf     0x03, 0x6        
000294   074b     addwf   0x4b, 0x0        	ADDWF	r0x1023,W
000295   00cf     movwf   0x4f             	MOVWF	r0x1027
000296   01d0     clrf    0x50             	CLRF	r0x1028
000297   0dd0     rlf     0x50, 0x1        	RLF	r0x1028,F
000298   084c     movf    0x4c, 0x0        	MOVF	r0x1024,W
000299   07d0     addwf   0x50, 0x1        	ADDWF	r0x1028,F
00029a   084f     movf    0x4f, 0x0        	MOVF	r0x1027,W
00029b   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00029c   1303     bcf     0x03, 0x6        
00029d   0084     movwf   0x04             	MOVWF	FSR
00029e   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00029f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
0002a0   1303     bcf     0x03, 0x6        
0002a1   1850     btfsc   0x50, 0x0        	BTFSC	r0x1028,0
0002a2   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002a3   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002a4   1303     bcf     0x03, 0x6        
0002a5   0800     movf    0x00, 0x0        	MOVF	INDF,W
0002a6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1029
0002a7   1303     bcf     0x03, 0x6        
0002a8   00d1     movwf   0x51             	MOVWF	r0x1029
0002a9   0851     movf    0x51, 0x0        	MOVF	r0x1029,W
0002aa   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0002ab   2b19     goto    0x0319           	GOTO	_00156_DS_
                                           ;	.line	96; "push_button.c"	pb_info[current_button].state = PB_PRESSED;
0002ac   084d     movf    0x4d, 0x0        	MOVF	r0x1025,W
0002ad   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002ae   1303     bcf     0x03, 0x6        
0002af   0084     movwf   0x04             	MOVWF	FSR
0002b0   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002b1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
0002b2   1303     bcf     0x03, 0x6        
0002b3   184e     btfsc   0x4e, 0x0        	BTFSC	r0x1026,0
0002b4   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002b5   3002     movlw   0x02             	MOVLW	0x02
0002b6   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002b7   1303     bcf     0x03, 0x6        
0002b8   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	98; "push_button.c"	break;
0002b9   2b19     goto    0x0319           	GOTO	_00156_DS_
                                           _00145_DS_
                                           ;	.line	100; "push_button.c"	if((pb_info[current_button].samples[0] == PB_RELEASED_VOLTAGE) &&
0002ba   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
0002bb   1303     bcf     0x03, 0x6        
0002bc   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
0002bd   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002be   1303     bcf     0x03, 0x6        
0002bf   0084     movwf   0x04             	MOVWF	FSR
0002c0   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002c1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
0002c2   1303     bcf     0x03, 0x6        
0002c3   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1024,0
0002c4   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002c5   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002c6   1303     bcf     0x03, 0x6        
0002c7   0800     movf    0x00, 0x0        	MOVF	INDF,W
0002c8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
0002c9   1303     bcf     0x03, 0x6        
0002ca   00cf     movwf   0x4f             	MOVWF	r0x1027
0002cb   3a01     xorlw   0x01             	XORLW	0x01
0002cc   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0002cd   2b19     goto    0x0319           	GOTO	_00156_DS_
                                           ;	.line	101; "push_button.c"	(pb_info[current_button].samples[1] == PB_RELEASED_VOLTAGE))
0002ce   3001     movlw   0x01             	MOVLW	0x01
0002cf   074b     addwf   0x4b, 0x0        	ADDWF	r0x1023,W
0002d0   00cf     movwf   0x4f             	MOVWF	r0x1027
0002d1   01d0     clrf    0x50             	CLRF	r0x1028
0002d2   0dd0     rlf     0x50, 0x1        	RLF	r0x1028,F
0002d3   084c     movf    0x4c, 0x0        	MOVF	r0x1024,W
0002d4   07d0     addwf   0x50, 0x1        	ADDWF	r0x1028,F
0002d5   084f     movf    0x4f, 0x0        	MOVF	r0x1027,W
0002d6   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002d7   1303     bcf     0x03, 0x6        
0002d8   0084     movwf   0x04             	MOVWF	FSR
0002d9   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002da   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
0002db   1303     bcf     0x03, 0x6        
0002dc   1850     btfsc   0x50, 0x0        	BTFSC	r0x1028,0
0002dd   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002de   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002df   1303     bcf     0x03, 0x6        
0002e0   0800     movf    0x00, 0x0        	MOVF	INDF,W
0002e1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1029
0002e2   1303     bcf     0x03, 0x6        
0002e3   00d1     movwf   0x51             	MOVWF	r0x1029
0002e4   3a01     xorlw   0x01             	XORLW	0x01
0002e5   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0002e6   2b19     goto    0x0319           	GOTO	_00156_DS_
                                           ;	.line	103; "push_button.c"	pb_info[current_button].state = PB_PRE_RELEASED;
0002e7   084d     movf    0x4d, 0x0        	MOVF	r0x1025,W
0002e8   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002e9   1303     bcf     0x03, 0x6        
0002ea   0084     movwf   0x04             	MOVWF	FSR
0002eb   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002ec   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
0002ed   1303     bcf     0x03, 0x6        
0002ee   184e     btfsc   0x4e, 0x0        	BTFSC	r0x1026,0
0002ef   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002f0   3003     movlw   0x03             	MOVLW	0x03
0002f1   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002f2   1303     bcf     0x03, 0x6        
0002f3   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	105; "push_button.c"	break;
0002f4   2b19     goto    0x0319           	GOTO	_00156_DS_
                                           _00149_DS_
                                           ;	.line	107; "push_button.c"	if(pb_info[current_button].samples[1] == PB_RELEASED_VOLTAGE)
0002f5   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
0002f6   1303     bcf     0x03, 0x6        
0002f7   0acb     incf    0x4b, 0x1        	INCF	r0x1023,F
0002f8   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0002f9   0acc     incf    0x4c, 0x1        	INCF	r0x1024,F
0002fa   084b     movf    0x4b, 0x0        	MOVF	r0x1023,W
0002fb   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002fc   1303     bcf     0x03, 0x6        
0002fd   0084     movwf   0x04             	MOVWF	FSR
0002fe   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002ff   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
000300   1303     bcf     0x03, 0x6        
000301   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1024,0
000302   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000303   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000304   1303     bcf     0x03, 0x6        
000305   0800     movf    0x00, 0x0        	MOVF	INDF,W
000306   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
000307   1303     bcf     0x03, 0x6        
000308   00cf     movwf   0x4f             	MOVWF	r0x1027
000309   3a01     xorlw   0x01             	XORLW	0x01
00030a   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00030b   2b19     goto    0x0319           	GOTO	_00156_DS_
                                           ;	.line	109; "push_button.c"	pb_info[current_button].state = PB_RELEASED;
00030c   084d     movf    0x4d, 0x0        	MOVF	r0x1025,W
00030d   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00030e   1303     bcf     0x03, 0x6        
00030f   0084     movwf   0x04             	MOVWF	FSR
000310   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000311   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000312   1303     bcf     0x03, 0x6        
000313   184e     btfsc   0x4e, 0x0        	BTFSC	r0x1026,0
000314   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000315   3000     movlw   0x00             	MOVLW	0x00
000316   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000317   1303     bcf     0x03, 0x6        
000318   0080     movwf   0x00             	MOVWF	INDF
                                           _00156_DS_
                                           ;	.line	59; "push_button.c"	for (current_button = PB_POWER; current_button <= PB_UNUSED; current_button++)
000319   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
00031a   1303     bcf     0x03, 0x6        
00031b   0aca     incf    0x4a, 0x1        	INCF	r0x1022,F
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
00031c   3004     movlw   0x04             	MOVLW	0x04
00031d   024a     subwf   0x4a, 0x0        	SUBWF	r0x1022,W
00031e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00031f   295b     goto    0x015b           	GOTO	_00155_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;	.line	118; "push_button.c"	SetValue_update(); //fn to check for the push buttons to decrement and increment the user set value
000320   2037     call    0x0037           	CALL	_SetValue_update
000321   0008     return                   	RETURN	
                                           ; exit point of _PB_Update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _PB_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   __mulchar
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   __mulchar
                                           ;7 compiler assigned registers:
                                           ;   r0x102A
                                           ;   STK00
                                           ;   r0x102B
                                           ;   STK01
                                           ;   r0x102C
                                           ;   r0x102D
                                           ;   r0x102E
                                           ;; Starting pCode block
                                           _PB_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	14; "push_button.c"	void PB_Init(tPB pb, tPB_State initial_state)
000322   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
000323   1303     bcf     0x03, 0x6        
000324   00c5     movwf   0x45             	MOVWF	r0x102A
000325   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000326   00c6     movwf   0x46             	MOVWF	r0x102B
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
                                           ;	.line	17; "push_button.c"	switch(pb)
000327   3004     movlw   0x04             	MOVLW	0x04
000328   0245     subwf   0x45, 0x0        	SUBWF	r0x102A,W
000329   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00032a   2b68     goto    0x0368           	GOTO	_00110_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00032b   3003     movlw   0x03             	MOVLW	HIGH(_00125_DS_)
00032c   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00032d   1303     bcf     0x03, 0x6        
00032e   008a     movwf   0x0a             	MOVWF	PCLATH
00032f   3039     movlw   0x39             	MOVLW	_00125_DS_
000330   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
000331   1303     bcf     0x03, 0x6        
000332   0745     addwf   0x45, 0x0        	ADDWF	r0x102A,W
000333   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000334   2b38     goto    0x0338           	GOTO	_00003_DS_
000335   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000336   1303     bcf     0x03, 0x6        
000337   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00003_DS_
000338   0082     movwf   0x02             	MOVWF	PCL
                                           _00125_DS_
000339   2b3d     goto    0x033d           	GOTO	_00105_DS_
00033a   2b48     goto    0x0348           	GOTO	_00106_DS_
00033b   2b53     goto    0x0353           	GOTO	_00107_DS_
00033c   2b5e     goto    0x035e           	GOTO	_00108_DS_
                                           _00105_DS_
                                           ;	.line	20; "push_button.c"	GPIO_InitPortPin(PORT_B, 0,GPIO_IN);
00033d   3001     movlw   0x01             	MOVLW	0x01
00033e   00fe     movwf   0x7e             	MOVWF	STK01
00033f   3000     movlw   0x00             	MOVLW	0x00
000340   00ff     movwf   0x7f             	MOVWF	STK00
000341   3001     movlw   0x01             	MOVLW	0x01
000342   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000343   120a     bcf     0x0a, 0x4        
000344   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000345   118a     bcf     0x0a, 0x3        	PAGESEL	$
000346   120a     bcf     0x0a, 0x4        
                                           ;	.line	21; "push_button.c"	break;
000347   2b68     goto    0x0368           	GOTO	_00110_DS_
                                           _00106_DS_
                                           ;	.line	23; "push_button.c"	GPIO_InitPortPin(PORT_B, 1,GPIO_IN);
000348   3001     movlw   0x01             	MOVLW	0x01
000349   00fe     movwf   0x7e             	MOVWF	STK01
00034a   3001     movlw   0x01             	MOVLW	0x01
00034b   00ff     movwf   0x7f             	MOVWF	STK00
00034c   3001     movlw   0x01             	MOVLW	0x01
00034d   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
00034e   120a     bcf     0x0a, 0x4        
00034f   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000350   118a     bcf     0x0a, 0x3        	PAGESEL	$
000351   120a     bcf     0x0a, 0x4        
                                           ;	.line	24; "push_button.c"	break;
000352   2b68     goto    0x0368           	GOTO	_00110_DS_
                                           _00107_DS_
                                           ;	.line	26; "push_button.c"	GPIO_InitPortPin(PORT_B, 2,GPIO_IN);
000353   3001     movlw   0x01             	MOVLW	0x01
000354   00fe     movwf   0x7e             	MOVWF	STK01
000355   3002     movlw   0x02             	MOVLW	0x02
000356   00ff     movwf   0x7f             	MOVWF	STK00
000357   3001     movlw   0x01             	MOVLW	0x01
000358   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000359   120a     bcf     0x0a, 0x4        
00035a   2660     call    0x0660           	CALL	_GPIO_InitPortPin
00035b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00035c   120a     bcf     0x0a, 0x4        
                                           ;	.line	27; "push_button.c"	break;
00035d   2b68     goto    0x0368           	GOTO	_00110_DS_
                                           _00108_DS_
                                           ;	.line	29; "push_button.c"	GPIO_InitPortPin(PORT_B, 3,GPIO_IN);
00035e   3001     movlw   0x01             	MOVLW	0x01
00035f   00fe     movwf   0x7e             	MOVWF	STK01
000360   3003     movlw   0x03             	MOVLW	0x03
000361   00ff     movwf   0x7f             	MOVWF	STK00
000362   3001     movlw   0x01             	MOVLW	0x01
000363   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000364   120a     bcf     0x0a, 0x4        
000365   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000366   118a     bcf     0x0a, 0x3        	PAGESEL	$
000367   120a     bcf     0x0a, 0x4        
                                           _00110_DS_
                                           ;	.line	37; "push_button.c"	pb_info[pb].state = initial_state;
000368   3003     movlw   0x03             	MOVLW	0x03
000369   00ff     movwf   0x7f             	MOVWF	STK00
00036a   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
00036b   1303     bcf     0x03, 0x6        
00036c   0845     movf    0x45, 0x0        	MOVF	r0x102A,W
00036d   118a     bcf     0x0a, 0x3        	PAGESEL	__mulchar
00036e   160a     bsf     0x0a, 0x4        
00036f   2778     call    0x0778           	CALL	__mulchar
000370   118a     bcf     0x0a, 0x3        	PAGESEL	$
000371   120a     bcf     0x0a, 0x4        
000372   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
000373   1303     bcf     0x03, 0x6        
000374   00c7     movwf   0x47             	MOVWF	r0x102C
000375   01c8     clrf    0x48             	CLRF	r0x102D
000376   0847     movf    0x47, 0x0        	MOVF	r0x102C,W
000377   3e5a     addlw   0x5a             	ADDLW	(_pb_info + 0)
000378   00c7     movwf   0x47             	MOVWF	r0x102C
000379   3000     movlw   0x00             	MOVLW	high (_pb_info + 0)
00037a   00c5     movwf   0x45             	MOVWF	r0x102A
00037b   3000     movlw   0x00             	MOVLW	0x00
00037c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00037d   0f48     incfsz  0x48, 0x0        	INCFSZ	r0x102D,W
00037e   07c5     addwf   0x45, 0x1        	ADDWF	r0x102A,F
00037f   3002     movlw   0x02             	MOVLW	0x02
000380   0747     addwf   0x47, 0x0        	ADDWF	r0x102C,W
000381   00c8     movwf   0x48             	MOVWF	r0x102D
000382   01c9     clrf    0x49             	CLRF	r0x102E
000383   0dc9     rlf     0x49, 0x1        	RLF	r0x102E,F
000384   0845     movf    0x45, 0x0        	MOVF	r0x102A,W
000385   07c9     addwf   0x49, 0x1        	ADDWF	r0x102E,F
000386   0848     movf    0x48, 0x0        	MOVF	r0x102D,W
000387   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000388   1303     bcf     0x03, 0x6        
000389   0084     movwf   0x04             	MOVWF	FSR
00038a   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00038b   1283     bcf     0x03, 0x5        	BANKSEL	r0x102E
00038c   1303     bcf     0x03, 0x6        
00038d   1849     btfsc   0x49, 0x0        	BTFSC	r0x102E,0
00038e   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00038f   0846     movf    0x46, 0x0        	MOVF	r0x102B,W
000390   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000391   1303     bcf     0x03, 0x6        
000392   0080     movwf   0x00             	MOVWF	INDF
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
                                           ;	.line	40; "push_button.c"	switch (initial_state)
000393   3004     movlw   0x04             	MOVLW	0x04
000394   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
000395   1303     bcf     0x03, 0x6        
000396   0246     subwf   0x46, 0x0        	SUBWF	r0x102B,W
000397   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000398   2bf2     goto    0x03f2           	GOTO	_00116_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
000399   3003     movlw   0x03             	MOVLW	HIGH(_00127_DS_)
00039a   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00039b   1303     bcf     0x03, 0x6        
00039c   008a     movwf   0x0a             	MOVWF	PCLATH
00039d   30a7     movlw   0xa7             	MOVLW	_00127_DS_
00039e   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
00039f   1303     bcf     0x03, 0x6        
0003a0   0746     addwf   0x46, 0x0        	ADDWF	r0x102B,W
0003a1   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0003a2   2ba6     goto    0x03a6           	GOTO	_00004_DS_
0003a3   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
0003a4   1303     bcf     0x03, 0x6        
0003a5   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00004_DS_
0003a6   0082     movwf   0x02             	MOVWF	PCL
                                           _00127_DS_
0003a7   2bab     goto    0x03ab           	GOTO	_00112_DS_
0003a8   2bd1     goto    0x03d1           	GOTO	_00114_DS_
0003a9   2bd1     goto    0x03d1           	GOTO	_00114_DS_
0003aa   2bab     goto    0x03ab           	GOTO	_00112_DS_
                                           _00112_DS_
                                           ;	.line	44; "push_button.c"	pb_info[pb].samples[0] = PB_RELEASED_VOLTAGE;
0003ab   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
0003ac   1303     bcf     0x03, 0x6        
0003ad   0847     movf    0x47, 0x0        	MOVF	r0x102C,W
0003ae   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0003af   1303     bcf     0x03, 0x6        
0003b0   0084     movwf   0x04             	MOVWF	FSR
0003b1   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0003b2   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
0003b3   1303     bcf     0x03, 0x6        
0003b4   1845     btfsc   0x45, 0x0        	BTFSC	r0x102A,0
0003b5   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0003b6   3001     movlw   0x01             	MOVLW	0x01
0003b7   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0003b8   1303     bcf     0x03, 0x6        
0003b9   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	45; "push_button.c"	pb_info[pb].samples[1] = PB_RELEASED_VOLTAGE;
0003ba   3001     movlw   0x01             	MOVLW	0x01
0003bb   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
0003bc   1303     bcf     0x03, 0x6        
0003bd   0747     addwf   0x47, 0x0        	ADDWF	r0x102C,W
0003be   00c6     movwf   0x46             	MOVWF	r0x102B
0003bf   01c8     clrf    0x48             	CLRF	r0x102D
0003c0   0dc8     rlf     0x48, 0x1        	RLF	r0x102D,F
0003c1   0845     movf    0x45, 0x0        	MOVF	r0x102A,W
0003c2   07c8     addwf   0x48, 0x1        	ADDWF	r0x102D,F
0003c3   0846     movf    0x46, 0x0        	MOVF	r0x102B,W
0003c4   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0003c5   1303     bcf     0x03, 0x6        
0003c6   0084     movwf   0x04             	MOVWF	FSR
0003c7   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0003c8   1283     bcf     0x03, 0x5        	BANKSEL	r0x102D
0003c9   1303     bcf     0x03, 0x6        
0003ca   1848     btfsc   0x48, 0x0        	BTFSC	r0x102D,0
0003cb   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0003cc   3001     movlw   0x01             	MOVLW	0x01
0003cd   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0003ce   1303     bcf     0x03, 0x6        
0003cf   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	46; "push_button.c"	break;
0003d0   2bf2     goto    0x03f2           	GOTO	_00116_DS_
                                           _00114_DS_
                                           ;	.line	49; "push_button.c"	pb_info[pb].samples[0] = PB_PRESSED_VOLTAGE;
0003d1   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
0003d2   1303     bcf     0x03, 0x6        
0003d3   0847     movf    0x47, 0x0        	MOVF	r0x102C,W
0003d4   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0003d5   1303     bcf     0x03, 0x6        
0003d6   0084     movwf   0x04             	MOVWF	FSR
0003d7   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0003d8   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
0003d9   1303     bcf     0x03, 0x6        
0003da   1845     btfsc   0x45, 0x0        	BTFSC	r0x102A,0
0003db   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0003dc   3000     movlw   0x00             	MOVLW	0x00
0003dd   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0003de   1303     bcf     0x03, 0x6        
0003df   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	50; "push_button.c"	pb_info[pb].samples[1] = PB_PRESSED_VOLTAGE;
0003e0   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
0003e1   1303     bcf     0x03, 0x6        
0003e2   0ac7     incf    0x47, 0x1        	INCF	r0x102C,F
0003e3   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0003e4   0ac5     incf    0x45, 0x1        	INCF	r0x102A,F
0003e5   0847     movf    0x47, 0x0        	MOVF	r0x102C,W
0003e6   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0003e7   1303     bcf     0x03, 0x6        
0003e8   0084     movwf   0x04             	MOVWF	FSR
0003e9   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0003ea   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
0003eb   1303     bcf     0x03, 0x6        
0003ec   1845     btfsc   0x45, 0x0        	BTFSC	r0x102A,0
0003ed   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0003ee   3000     movlw   0x00             	MOVLW	0x00
0003ef   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0003f0   1303     bcf     0x03, 0x6        
0003f1   0080     movwf   0x00             	MOVWF	INDF
                                           _00116_DS_
                                           ;	.line	52; "push_button.c"	}
0003f2   0008     return                   	RETURN	
                                           ; exit point of _PB_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  584+  186 =   770 instructions ( 1912 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:43 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"setting_mode.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_Heater_Init
                                           	extern	_Heater_SetState
                                           	extern	_Heater_GetState
                                           	extern	_Heater_update
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_LED_Init
                                           	extern	_LED_Update
                                           	extern	_LED_GetState
                                           	extern	_LED_SetState
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_SettingMode_Get_SSD_state
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_SettingMode_OFF_mode
                                           	global	_SettingMode_update
                                           	global	_Counters
                                           	global	_Readings
                                           	global	_Flags
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           UD_setting_mode_0	udata
                                           _Counters	res	6
                                           
                                           UD_setting_mode_1	udata
                                           _Readings	res	8
                                           
                                           UD_setting_mode_2	udata
                                           _Flags	res	5
                                           
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_setting_mode_0	udata
                                           r0x1021	res	1
                                           r0x1022	res	1
                                           r0x1015	res	1
                                           r0x1016	res	1
                                           r0x1017	res	1
                                           r0x1018	res	1
                                           r0x1019	res	1
                                           r0x101A	res	1
                                           r0x101B	res	1
                                           r0x101C	res	1
                                           r0x101D	res	1
                                           r0x101E	res	1
                                           r0x101F	res	1
                                           r0x1020	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_setting_mode	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SettingMode_OFF_mode	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_state
                                           ;1 compiler assigned register :
                                           ;   STK00
                                           ;; Starting pCode block
                                           _SettingMode_OFF_mode	;Function start
                                           ; 2 exit points
                                           ;	.line	61; "setting_mode.c"	SSD_SET_state(SSD_MR,SSD_OFF);
001000   3000     movlw   0x00             	MOVLW	0x00
001001   00ff     movwf   0x7f             	MOVWF	STK00
001002   3002     movlw   0x02             	MOVLW	0x02
001003   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_SET_state
001004   120a     bcf     0x0a, 0x4        
001005   252a     call    0x052a           	CALL	_SSD_SET_state
001006   118a     bcf     0x0a, 0x3        	PAGESEL	$
001007   160a     bsf     0x0a, 0x4        
                                           ;	.line	62; "setting_mode.c"	SSD_SET_state(SSD_R,SSD_OFF);
001008   3000     movlw   0x00             	MOVLW	0x00
001009   00ff     movwf   0x7f             	MOVWF	STK00
00100a   3003     movlw   0x03             	MOVLW	0x03
00100b   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_SET_state
00100c   120a     bcf     0x0a, 0x4        
00100d   252a     call    0x052a           	CALL	_SSD_SET_state
00100e   118a     bcf     0x0a, 0x3        	PAGESEL	$
00100f   160a     bsf     0x0a, 0x4        
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	64; "setting_mode.c"	Flags.Heater_Operation = 0 ; //Turn off The heater element
001010   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001011   1703     bsf     0x03, 0x6        
001012   0198     clrf    0x18             	CLRF	(_Flags + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	65; "setting_mode.c"	Flags.Cooler_Operation = 0 ; //Turn off Heater element
001013   0199     clrf    0x19             	CLRF	(_Flags + 3)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	67; "setting_mode.c"	Flags.Toggle_led = 3;        //Turn off Warning Led
001014   3003     movlw   0x03             	MOVLW	0x03
001015   0097     movwf   0x17             	MOVWF	(_Flags + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	69; "setting_mode.c"	Counters.FixedMode_counter    = 0 ;
001016   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001017   1703     bsf     0x03, 0x6        
001018   0190     clrf    0x10             	CLRF	(_Counters + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
001019   0191     clrf    0x11             	CLRF	(_Counters + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	70; "setting_mode.c"	Counters.Blink_counter      = 0 ;
00101a   0192     clrf    0x12             	CLRF	(_Counters + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
00101b   0193     clrf    0x13             	CLRF	(_Counters + 3)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;	.line	71; "setting_mode.c"	Readings.temp_read          = 0 ;
00101c   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
00101d   1703     bsf     0x03, 0x6        
00101e   01de     clrf    0x5e             	CLRF	(_Readings + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
00101f   01df     clrf    0x5f             	CLRF	(_Readings + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
001020   01e0     clrf    0x60             	CLRF	(_Readings + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
001021   01e1     clrf    0x61             	CLRF	(_Readings + 3)
001022   0008     return                   	RETURN	
                                           ; exit point of _SettingMode_OFF_mode
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SettingMode_Blinking_mode	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;2 compiler assigned registers:
                                           ;   r0x1013
                                           ;   r0x1014
                                           ;; Starting pCode block
                                           _SettingMode_Blinking_mode	;Function start
                                           ; 2 exit points
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	45; "setting_mode.c"	Flags.Heater_Operation = 0 ; //Turn off The heater element
001023   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001024   1703     bsf     0x03, 0x6        
001025   0198     clrf    0x18             	CLRF	(_Flags + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	46; "setting_mode.c"	Flags.Cooler_Operation = 0 ;//Turn off Heater element
001026   0199     clrf    0x19             	CLRF	(_Flags + 3)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	47; "setting_mode.c"	Flags.Toggle_led = 3;      //Turn off Warning Led
001027   3003     movlw   0x03             	MOVLW	0x03
001028   0097     movwf   0x17             	MOVWF	(_Flags + 1)
                                           ;	.line	49; "setting_mode.c"	if(Counters.Blink_counter == 100)
001029   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00102a   1703     bsf     0x03, 0x6        
00102b   0812     movf    0x12, 0x0        	MOVF	(_Counters + 2),W
00102c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
00102d   1303     bcf     0x03, 0x6        
00102e   00d7     movwf   0x57             	MOVWF	r0x1013
00102f   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001030   1703     bsf     0x03, 0x6        
001031   0813     movf    0x13, 0x0        	MOVF	(_Counters + 3),W
001032   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
001033   1303     bcf     0x03, 0x6        
001034   00d8     movwf   0x58             	MOVWF	r0x1014
001035   0857     movf    0x57, 0x0        	MOVF	r0x1013,W
001036   3a64     xorlw   0x64             	XORLW	0x64
001037   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001038   284d     goto    0x004d           	GOTO	_00133_DS_
001039   0858     movf    0x58, 0x0        	MOVF	r0x1014,W
00103a   3a00     xorlw   0x00             	XORLW	0x00
00103b   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00103c   284d     goto    0x004d           	GOTO	_00133_DS_
                                           ;	.line	51; "setting_mode.c"	Flags.next_state^=1; //toggle SSD State
00103d   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
00103e   1703     bsf     0x03, 0x6        
00103f   0816     movf    0x16, 0x0        	MOVF	(_Flags + 0),W
001040   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
001041   1303     bcf     0x03, 0x6        
001042   00d7     movwf   0x57             	MOVWF	r0x1013
001043   3001     movlw   0x01             	MOVLW	0x01
001044   06d7     xorwf   0x57, 0x1        	XORWF	r0x1013,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
001045   0857     movf    0x57, 0x0        	MOVF	r0x1013,W
001046   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001047   1703     bsf     0x03, 0x6        
001048   0096     movwf   0x16             	MOVWF	(_Flags + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	52; "setting_mode.c"	Counters.Blink_counter = 0 ;
001049   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00104a   1703     bsf     0x03, 0x6        
00104b   0192     clrf    0x12             	CLRF	(_Counters + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
00104c   0193     clrf    0x13             	CLRF	(_Counters + 3)
                                           _00133_DS_
                                           ;	.line	54; "setting_mode.c"	Counters.Blink_counter ++;
00104d   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00104e   1703     bsf     0x03, 0x6        
00104f   0812     movf    0x12, 0x0        	MOVF	(_Counters + 2),W
001050   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
001051   1303     bcf     0x03, 0x6        
001052   00d7     movwf   0x57             	MOVWF	r0x1013
001053   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001054   1703     bsf     0x03, 0x6        
001055   0813     movf    0x13, 0x0        	MOVF	(_Counters + 3),W
001056   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
001057   1303     bcf     0x03, 0x6        
001058   00d8     movwf   0x58             	MOVWF	r0x1014
001059   0ad7     incf    0x57, 0x1        	INCF	r0x1013,F
00105a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00105b   0ad8     incf    0x58, 0x1        	INCF	r0x1014,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
00105c   0857     movf    0x57, 0x0        	MOVF	r0x1013,W
00105d   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00105e   1703     bsf     0x03, 0x6        
00105f   0092     movwf   0x12             	MOVWF	(_Counters + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
001060   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
001061   1303     bcf     0x03, 0x6        
001062   0858     movf    0x58, 0x0        	MOVF	r0x1014,W
001063   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001064   1703     bsf     0x03, 0x6        
001065   0093     movwf   0x13             	MOVWF	(_Counters + 3)
                                           ;	.line	55; "setting_mode.c"	Counters.FixedMode_counter++;
001066   0810     movf    0x10, 0x0        	MOVF	(_Counters + 0),W
001067   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
001068   1303     bcf     0x03, 0x6        
001069   00d7     movwf   0x57             	MOVWF	r0x1013
00106a   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00106b   1703     bsf     0x03, 0x6        
00106c   0811     movf    0x11, 0x0        	MOVF	(_Counters + 1),W
00106d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00106e   1303     bcf     0x03, 0x6        
00106f   00d8     movwf   0x58             	MOVWF	r0x1014
001070   0ad7     incf    0x57, 0x1        	INCF	r0x1013,F
001071   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001072   0ad8     incf    0x58, 0x1        	INCF	r0x1014,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
001073   0857     movf    0x57, 0x0        	MOVF	r0x1013,W
001074   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001075   1703     bsf     0x03, 0x6        
001076   0090     movwf   0x10             	MOVWF	(_Counters + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
001077   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
001078   1303     bcf     0x03, 0x6        
001079   0858     movf    0x58, 0x0        	MOVF	r0x1014,W
00107a   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00107b   1703     bsf     0x03, 0x6        
00107c   0091     movwf   0x11             	MOVWF	(_Counters + 1)
00107d   0008     return                   	RETURN	
                                           ; exit point of _SettingMode_Blinking_mode
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SettingMode_Fixed_mode	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;12 compiler assigned registers:
                                           ;   r0x1015
                                           ;   r0x1016
                                           ;   r0x1017
                                           ;   r0x1018
                                           ;   r0x1019
                                           ;   r0x101A
                                           ;   r0x101B
                                           ;   r0x101C
                                           ;   r0x101D
                                           ;   r0x101E
                                           ;   r0x101F
                                           ;   r0x1020
                                           ;; Starting pCode block
                                           _SettingMode_Fixed_mode	;Function start
                                           ; 2 exit points
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	26; "setting_mode.c"	Flags.next_state = 1 ; //make the SSD go into normal operation
00107e   3001     movlw   0x01             	MOVLW	0x01
00107f   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001080   1703     bsf     0x03, 0x6        
001081   0096     movwf   0x16             	MOVWF	(_Flags + 0)
                                           ;	.line	28; "setting_mode.c"	if(Readings.temp_read <= (Readings.Set_value-5))
001082   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
001083   1703     bsf     0x03, 0x6        
001084   085e     movf    0x5e, 0x0        	MOVF	(_Readings + 0),W
001085   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
001086   1303     bcf     0x03, 0x6        
001087   00cb     movwf   0x4b             	MOVWF	r0x1015
001088   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
001089   1703     bsf     0x03, 0x6        
00108a   085f     movf    0x5f, 0x0        	MOVF	(_Readings + 1),W
00108b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1016
00108c   1303     bcf     0x03, 0x6        
00108d   00cc     movwf   0x4c             	MOVWF	r0x1016
00108e   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
00108f   1703     bsf     0x03, 0x6        
001090   0860     movf    0x60, 0x0        	MOVF	(_Readings + 2),W
001091   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
001092   1303     bcf     0x03, 0x6        
001093   00cd     movwf   0x4d             	MOVWF	r0x1017
001094   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
001095   1703     bsf     0x03, 0x6        
001096   0861     movf    0x61, 0x0        	MOVF	(_Readings + 3),W
001097   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
001098   1303     bcf     0x03, 0x6        
001099   00ce     movwf   0x4e             	MOVWF	r0x1018
00109a   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
00109b   1703     bsf     0x03, 0x6        
00109c   0862     movf    0x62, 0x0        	MOVF	(_Readings + 4),W
00109d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1019
00109e   1303     bcf     0x03, 0x6        
00109f   00cf     movwf   0x4f             	MOVWF	r0x1019
0010a0   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0010a1   1703     bsf     0x03, 0x6        
0010a2   0863     movf    0x63, 0x0        	MOVF	(_Readings + 5),W
0010a3   1683     bsf     0x03, 0x5        	BANKSEL	r0x101A
0010a4   1303     bcf     0x03, 0x6        
0010a5   00d0     movwf   0x50             	MOVWF	r0x101A
0010a6   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0010a7   1703     bsf     0x03, 0x6        
0010a8   0864     movf    0x64, 0x0        	MOVF	(_Readings + 6),W
0010a9   1683     bsf     0x03, 0x5        	BANKSEL	r0x101B
0010aa   1303     bcf     0x03, 0x6        
0010ab   00d1     movwf   0x51             	MOVWF	r0x101B
0010ac   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0010ad   1703     bsf     0x03, 0x6        
0010ae   0865     movf    0x65, 0x0        	MOVF	(_Readings + 7),W
0010af   1683     bsf     0x03, 0x5        	BANKSEL	r0x101C
0010b0   1303     bcf     0x03, 0x6        
0010b1   00d2     movwf   0x52             	MOVWF	r0x101C
0010b2   30fb     movlw   0xfb             	MOVLW	0xfb
0010b3   074f     addwf   0x4f, 0x0        	ADDWF	r0x1019,W
0010b4   00d3     movwf   0x53             	MOVWF	r0x101D
0010b5   30ff     movlw   0xff             	MOVLW	0xff
0010b6   00d4     movwf   0x54             	MOVWF	r0x101E
0010b7   0850     movf    0x50, 0x0        	MOVF	r0x101A,W
0010b8   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0010b9   0f50     incfsz  0x50, 0x0        	INCFSZ	r0x101A,W
0010ba   07d4     addwf   0x54, 0x1        	ADDWF	r0x101E,F
0010bb   30ff     movlw   0xff             	MOVLW	0xff
0010bc   00d5     movwf   0x55             	MOVWF	r0x101F
0010bd   0851     movf    0x51, 0x0        	MOVF	r0x101B,W
0010be   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0010bf   0f51     incfsz  0x51, 0x0        	INCFSZ	r0x101B,W
0010c0   07d5     addwf   0x55, 0x1        	ADDWF	r0x101F,F
0010c1   30ff     movlw   0xff             	MOVLW	0xff
0010c2   00d6     movwf   0x56             	MOVWF	r0x1020
0010c3   0852     movf    0x52, 0x0        	MOVF	r0x101C,W
0010c4   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0010c5   0f52     incfsz  0x52, 0x0        	INCFSZ	r0x101C,W
0010c6   07d6     addwf   0x56, 0x1        	ADDWF	r0x1020,F
0010c7   084e     movf    0x4e, 0x0        	MOVF	r0x1018,W
0010c8   0256     subwf   0x56, 0x0        	SUBWF	r0x1020,W
0010c9   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0010ca   28d5     goto    0x00d5           	GOTO	_00126_DS_
0010cb   084d     movf    0x4d, 0x0        	MOVF	r0x1017,W
0010cc   0255     subwf   0x55, 0x0        	SUBWF	r0x101F,W
0010cd   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0010ce   28d5     goto    0x00d5           	GOTO	_00126_DS_
0010cf   084c     movf    0x4c, 0x0        	MOVF	r0x1016,W
0010d0   0254     subwf   0x54, 0x0        	SUBWF	r0x101E,W
0010d1   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0010d2   28d5     goto    0x00d5           	GOTO	_00126_DS_
0010d3   084b     movf    0x4b, 0x0        	MOVF	r0x1015,W
0010d4   0253     subwf   0x53, 0x0        	SUBWF	r0x101D,W
                                           _00126_DS_
0010d5   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0010d6   28de     goto    0x00de           	GOTO	_00116_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	30; "setting_mode.c"	Flags.Toggle_led = 1 ;        //the led will toggle
0010d7   3001     movlw   0x01             	MOVLW	0x01
                                           ;	.line	31; "setting_mode.c"	Flags.Heater_Operation = 1 ; //Turn on The Heater element
0010d8   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
0010d9   1703     bsf     0x03, 0x6        
0010da   0097     movwf   0x17             	MOVWF	(_Flags + 1)
0010db   0098     movwf   0x18             	MOVWF	(_Flags + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	32; "setting_mode.c"	Flags.Cooler_Operation = 0 ;//Turn off Cooler element
0010dc   0199     clrf    0x19             	CLRF	(_Flags + 3)
0010dd   2914     goto    0x0114           	GOTO	_00118_DS_
                                           _00116_DS_
                                           ;	.line	34; "setting_mode.c"	else if(Readings.temp_read >= (Readings.Set_value+5))
0010de   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0010df   1703     bsf     0x03, 0x6        
0010e0   085e     movf    0x5e, 0x0        	MOVF	(_Readings + 0),W
0010e1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
0010e2   1303     bcf     0x03, 0x6        
0010e3   00cb     movwf   0x4b             	MOVWF	r0x1015
0010e4   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0010e5   1703     bsf     0x03, 0x6        
0010e6   085f     movf    0x5f, 0x0        	MOVF	(_Readings + 1),W
0010e7   1683     bsf     0x03, 0x5        	BANKSEL	r0x1016
0010e8   1303     bcf     0x03, 0x6        
0010e9   00cc     movwf   0x4c             	MOVWF	r0x1016
0010ea   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0010eb   1703     bsf     0x03, 0x6        
0010ec   0860     movf    0x60, 0x0        	MOVF	(_Readings + 2),W
0010ed   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
0010ee   1303     bcf     0x03, 0x6        
0010ef   00cd     movwf   0x4d             	MOVWF	r0x1017
0010f0   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
0010f1   1703     bsf     0x03, 0x6        
0010f2   0861     movf    0x61, 0x0        	MOVF	(_Readings + 3),W
0010f3   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
0010f4   1303     bcf     0x03, 0x6        
0010f5   00ce     movwf   0x4e             	MOVWF	r0x1018
0010f6   3005     movlw   0x05             	MOVLW	0x05
0010f7   07cf     addwf   0x4f, 0x1        	ADDWF	r0x1019,F
0010f8   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0010f9   0ad0     incf    0x50, 0x1        	INCF	r0x101A,F
0010fa   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0010fb   0ad1     incf    0x51, 0x1        	INCF	r0x101B,F
0010fc   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0010fd   0ad2     incf    0x52, 0x1        	INCF	r0x101C,F
0010fe   0852     movf    0x52, 0x0        	MOVF	r0x101C,W
0010ff   024e     subwf   0x4e, 0x0        	SUBWF	r0x1018,W
001100   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001101   290c     goto    0x010c           	GOTO	_00127_DS_
001102   0851     movf    0x51, 0x0        	MOVF	r0x101B,W
001103   024d     subwf   0x4d, 0x0        	SUBWF	r0x1017,W
001104   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001105   290c     goto    0x010c           	GOTO	_00127_DS_
001106   0850     movf    0x50, 0x0        	MOVF	r0x101A,W
001107   024c     subwf   0x4c, 0x0        	SUBWF	r0x1016,W
001108   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001109   290c     goto    0x010c           	GOTO	_00127_DS_
00110a   084f     movf    0x4f, 0x0        	MOVF	r0x1019,W
00110b   024b     subwf   0x4b, 0x0        	SUBWF	r0x1015,W
                                           _00127_DS_
00110c   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00110d   2914     goto    0x0114           	GOTO	_00118_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	36; "setting_mode.c"	Flags.Toggle_led   = 0 ;      //the led will turn on without toggling
00110e   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
00110f   1703     bsf     0x03, 0x6        
001110   0197     clrf    0x17             	CLRF	(_Flags + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	37; "setting_mode.c"	Flags.Heater_Operation = 0 ; //Turn on The Heater element
001111   0198     clrf    0x18             	CLRF	(_Flags + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	38; "setting_mode.c"	Flags.Cooler_Operation = 1 ;//Turn off Heater element
001112   3001     movlw   0x01             	MOVLW	0x01
001113   0099     movwf   0x19             	MOVWF	(_Flags + 3)
                                           _00118_DS_
001114   0008     return                   	RETURN	
                                           ; exit point of _SettingMode_Fixed_mode
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SettingMode_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _SettingMode_Fixed_mode
                                           ;   _SettingMode_Blinking_mode
                                           ;   _SettingMode_Fixed_mode
                                           ;   _SettingMode_Blinking_mode
                                           ;2 compiler assigned registers:
                                           ;   r0x1021
                                           ;   r0x1022
                                           ;; Starting pCode block
                                           _SettingMode_update	;Function start
                                           ; 2 exit points
                                           ;	.line	11; "setting_mode.c"	if(Counters.FixedMode_counter == 1000) //if 5s are run out without pressing up or down buttons the system goes into fixed mode
001115   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001116   1703     bsf     0x03, 0x6        
001117   0810     movf    0x10, 0x0        	MOVF	(_Counters + 0),W
001118   1683     bsf     0x03, 0x5        	BANKSEL	r0x1021
001119   1303     bcf     0x03, 0x6        
00111a   00c9     movwf   0x49             	MOVWF	r0x1021
00111b   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00111c   1703     bsf     0x03, 0x6        
00111d   0811     movf    0x11, 0x0        	MOVF	(_Counters + 1),W
00111e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1022
00111f   1303     bcf     0x03, 0x6        
001120   00ca     movwf   0x4a             	MOVWF	r0x1022
001121   0849     movf    0x49, 0x0        	MOVF	r0x1021,W
001122   3ae8     xorlw   0xe8             	XORLW	0xe8
001123   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001124   292b     goto    0x012b           	GOTO	_00106_DS_
001125   084a     movf    0x4a, 0x0        	MOVF	r0x1022,W
001126   3a03     xorlw   0x03             	XORLW	0x03
001127   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001128   292b     goto    0x012b           	GOTO	_00106_DS_
                                           ;	.line	13; "setting_mode.c"	SettingMode_Fixed_mode();
001129   207e     call    0x007e           	CALL	_SettingMode_Fixed_mode
00112a   292c     goto    0x012c           	GOTO	_00108_DS_
                                           _00106_DS_
                                           ;	.line	18; "setting_mode.c"	SettingMode_Blinking_mode();
00112b   2023     call    0x0023           	CALL	_SettingMode_Blinking_mode
                                           _00108_DS_
00112c   0008     return                   	RETURN	
                                           ; exit point of _SettingMode_update
                                           
                                           
                                           ;	code size estimation:
                                           ;	  181+   60 =   241 instructions (  602 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:43 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"SSD.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_Heater_Init
                                           	extern	_Heater_SetState
                                           	extern	_Heater_GetState
                                           	extern	_Heater_update
                                           	extern	_SettingMode_update
                                           	extern	_SettingMode_Get_SSD_state
                                           	extern	_SettingMode_OFF_mode
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_LED_Init
                                           	extern	_LED_Update
                                           	extern	_LED_GetState
                                           	extern	_LED_SetState
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_UTIL_DelayMS
                                           	extern	__modulong
                                           	extern	__divulong
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	__gptrget1
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_SSD_update
                                           	global	_SSD_GET_Symbol
                                           	global	_SSD_GET_state
                                           	global	_SSD_SET_Symbol
                                           	global	_SSD_SET_state
                                           	global	_SSD_Init
                                           	global	_display_flag
                                           	global	_SSD_symbols
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_SSD_0	udata
                                           r0x101F	res	1
                                           r0x1020	res	1
                                           r0x1021	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           r0x1015	res	1
                                           r0x101E	res	1
                                           r0x101B	res	1
                                           r0x101C	res	1
                                           r0x1016	res	1
                                           r0x1017	res	1
                                           r0x1018	res	1
                                           r0x1019	res	1
                                           r0x101A	res	1
                                           _SSD_update_current_ssd_1_58	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           
                                           ID_SSD_0	idata
                                           _display_flag
                                           	db	0x01
                                           
                                           
                                           ID_SSD_1	idata
                                           _SSD_symbols
                                           	db	0x0a
                                           	db	0x00
                                           	db	0x00
                                           	db	0x00
                                           
                                           
                                           ID_SSD_2	code
                                           _symbols
0017ad   343f     retlw   0x3f             	retlw 0x3f
0017ae   3406     retlw   0x06             	retlw 0x06
0017af   345b     retlw   0x5b             	retlw 0x5b
0017b0   344f     retlw   0x4f             	retlw 0x4f
0017b1   3466     retlw   0x66             	retlw 0x66
0017b2   346d     retlw   0x6d             	retlw 0x6d
0017b3   347d     retlw   0x7d             	retlw 0x7d
0017b4   3407     retlw   0x07             	retlw 0x07
0017b5   347f     retlw   0x7f             	retlw 0x7f
0017b6   346f     retlw   0x6f             	retlw 0x6f
0017b7   3400     retlw   0x00             	retlw 0x00
                                           
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_SSD	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __modulong
                                           ;   __modulong
                                           ;   __divulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   __modulong
                                           ;   __divulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   _SSD_SET_Symbol
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_state
                                           ;   __gptrget1
                                           ;   _GPIO_SetPortState
                                           ;   _SSD_SET_state
                                           ;   __modulong
                                           ;   __modulong
                                           ;   __divulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   __modulong
                                           ;   __divulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   _SSD_SET_Symbol
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_state
                                           ;   __gptrget1
                                           ;   _GPIO_SetPortState
                                           ;   _SSD_SET_state
                                           ;12 compiler assigned registers:
                                           ;   r0x1016
                                           ;   r0x1017
                                           ;   r0x1018
                                           ;   r0x1019
                                           ;   STK06
                                           ;   STK05
                                           ;   STK04
                                           ;   STK03
                                           ;   STK02
                                           ;   STK01
                                           ;   STK00
                                           ;   r0x101A
                                           ;; Starting pCode block
                                           _SSD_update	;Function start
                                           ; 2 exit points
                                           ;	.line	124; "SSD.c"	if(display_flag){
000afc   3000     movlw   0x00             	MOVLW	0x00
000afd   1683     bsf     0x03, 0x5        	BANKSEL	_display_flag
000afe   1703     bsf     0x03, 0x6        
000aff   0426     iorwf   0x26, 0x0        	IORWF	_display_flag,W
000b00   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000b01   2baf     goto    0x03af           	GOTO	_00165_DS_
                                           ;	.line	125; "SSD.c"	SSD_SET_Symbol(SSD_MR,((Readings.Set_value%1000)%100)/10);
000b02   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000b03   1703     bsf     0x03, 0x6        
000b04   0862     movf    0x62, 0x0        	MOVF	(_Readings + 4),W
000b05   1283     bcf     0x03, 0x5        	BANKSEL	r0x1016
000b06   1703     bsf     0x03, 0x6        
000b07   00b9     movwf   0x39             	MOVWF	r0x1016
000b08   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000b09   1703     bsf     0x03, 0x6        
000b0a   0863     movf    0x63, 0x0        	MOVF	(_Readings + 5),W
000b0b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
000b0c   1703     bsf     0x03, 0x6        
000b0d   00ba     movwf   0x3a             	MOVWF	r0x1017
000b0e   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000b0f   1703     bsf     0x03, 0x6        
000b10   0864     movf    0x64, 0x0        	MOVF	(_Readings + 6),W
000b11   1283     bcf     0x03, 0x5        	BANKSEL	r0x1018
000b12   1703     bsf     0x03, 0x6        
000b13   00bb     movwf   0x3b             	MOVWF	r0x1018
000b14   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000b15   1703     bsf     0x03, 0x6        
000b16   0865     movf    0x65, 0x0        	MOVF	(_Readings + 7),W
000b17   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000b18   1703     bsf     0x03, 0x6        
000b19   00bc     movwf   0x3c             	MOVWF	r0x1019
000b1a   30e8     movlw   0xe8             	MOVLW	0xe8
000b1b   00f9     movwf   0x79             	MOVWF	STK06
000b1c   3003     movlw   0x03             	MOVLW	0x03
000b1d   00fa     movwf   0x7a             	MOVWF	STK05
000b1e   3000     movlw   0x00             	MOVLW	0x00
000b1f   00fb     movwf   0x7b             	MOVWF	STK04
000b20   3000     movlw   0x00             	MOVLW	0x00
000b21   00fc     movwf   0x7c             	MOVWF	STK03
000b22   0839     movf    0x39, 0x0        	MOVF	r0x1016,W
000b23   00fd     movwf   0x7d             	MOVWF	STK02
000b24   083a     movf    0x3a, 0x0        	MOVF	r0x1017,W
000b25   00fe     movwf   0x7e             	MOVWF	STK01
000b26   083b     movf    0x3b, 0x0        	MOVF	r0x1018,W
000b27   00ff     movwf   0x7f             	MOVWF	STK00
000b28   083c     movf    0x3c, 0x0        	MOVF	r0x1019,W
000b29   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000b2a   160a     bsf     0x0a, 0x4        
000b2b   259a     call    0x059a           	CALL	__modulong
000b2c   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b2d   120a     bcf     0x0a, 0x4        
000b2e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000b2f   1703     bsf     0x03, 0x6        
000b30   00bc     movwf   0x3c             	MOVWF	r0x1019
000b31   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000b32   00bb     movwf   0x3b             	MOVWF	r0x1018
000b33   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000b34   00ba     movwf   0x3a             	MOVWF	r0x1017
000b35   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000b36   00b9     movwf   0x39             	MOVWF	r0x1016
000b37   3064     movlw   0x64             	MOVLW	0x64
000b38   00f9     movwf   0x79             	MOVWF	STK06
000b39   3000     movlw   0x00             	MOVLW	0x00
000b3a   00fa     movwf   0x7a             	MOVWF	STK05
000b3b   3000     movlw   0x00             	MOVLW	0x00
000b3c   00fb     movwf   0x7b             	MOVWF	STK04
000b3d   3000     movlw   0x00             	MOVLW	0x00
000b3e   00fc     movwf   0x7c             	MOVWF	STK03
000b3f   0839     movf    0x39, 0x0        	MOVF	r0x1016,W
000b40   00fd     movwf   0x7d             	MOVWF	STK02
000b41   083a     movf    0x3a, 0x0        	MOVF	r0x1017,W
000b42   00fe     movwf   0x7e             	MOVWF	STK01
000b43   083b     movf    0x3b, 0x0        	MOVF	r0x1018,W
000b44   00ff     movwf   0x7f             	MOVWF	STK00
000b45   083c     movf    0x3c, 0x0        	MOVF	r0x1019,W
000b46   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000b47   160a     bsf     0x0a, 0x4        
000b48   259a     call    0x059a           	CALL	__modulong
000b49   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b4a   120a     bcf     0x0a, 0x4        
000b4b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000b4c   1703     bsf     0x03, 0x6        
000b4d   00bc     movwf   0x3c             	MOVWF	r0x1019
000b4e   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000b4f   00bb     movwf   0x3b             	MOVWF	r0x1018
000b50   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000b51   00ba     movwf   0x3a             	MOVWF	r0x1017
000b52   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000b53   00b9     movwf   0x39             	MOVWF	r0x1016
000b54   300a     movlw   0x0a             	MOVLW	0x0a
000b55   00f9     movwf   0x79             	MOVWF	STK06
000b56   3000     movlw   0x00             	MOVLW	0x00
000b57   00fa     movwf   0x7a             	MOVWF	STK05
000b58   3000     movlw   0x00             	MOVLW	0x00
000b59   00fb     movwf   0x7b             	MOVWF	STK04
000b5a   3000     movlw   0x00             	MOVLW	0x00
000b5b   00fc     movwf   0x7c             	MOVWF	STK03
000b5c   0839     movf    0x39, 0x0        	MOVF	r0x1016,W
000b5d   00fd     movwf   0x7d             	MOVWF	STK02
000b5e   083a     movf    0x3a, 0x0        	MOVF	r0x1017,W
000b5f   00fe     movwf   0x7e             	MOVWF	STK01
000b60   083b     movf    0x3b, 0x0        	MOVF	r0x1018,W
000b61   00ff     movwf   0x7f             	MOVWF	STK00
000b62   083c     movf    0x3c, 0x0        	MOVF	r0x1019,W
000b63   118a     bcf     0x0a, 0x3        	PAGESEL	__divulong
000b64   160a     bsf     0x0a, 0x4        
000b65   2516     call    0x0516           	CALL	__divulong
000b66   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b67   120a     bcf     0x0a, 0x4        
000b68   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000b69   1703     bsf     0x03, 0x6        
000b6a   00bc     movwf   0x3c             	MOVWF	r0x1019
000b6b   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000b6c   00bb     movwf   0x3b             	MOVWF	r0x1018
000b6d   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000b6e   00ba     movwf   0x3a             	MOVWF	r0x1017
000b6f   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000b70   00b9     movwf   0x39             	MOVWF	r0x1016
000b71   00bd     movwf   0x3d             	MOVWF	r0x101A
000b72   00ff     movwf   0x7f             	MOVWF	STK00
000b73   3002     movlw   0x02             	MOVLW	0x02
000b74   2510     call    0x0510           	CALL	_SSD_SET_Symbol
                                           ;	.line	126; "SSD.c"	SSD_SET_Symbol(SSD_R,Readings.Set_value%10);
000b75   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000b76   1703     bsf     0x03, 0x6        
000b77   0862     movf    0x62, 0x0        	MOVF	(_Readings + 4),W
000b78   1283     bcf     0x03, 0x5        	BANKSEL	r0x1016
000b79   1703     bsf     0x03, 0x6        
000b7a   00b9     movwf   0x39             	MOVWF	r0x1016
000b7b   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000b7c   1703     bsf     0x03, 0x6        
000b7d   0863     movf    0x63, 0x0        	MOVF	(_Readings + 5),W
000b7e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
000b7f   1703     bsf     0x03, 0x6        
000b80   00ba     movwf   0x3a             	MOVWF	r0x1017
000b81   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000b82   1703     bsf     0x03, 0x6        
000b83   0864     movf    0x64, 0x0        	MOVF	(_Readings + 6),W
000b84   1283     bcf     0x03, 0x5        	BANKSEL	r0x1018
000b85   1703     bsf     0x03, 0x6        
000b86   00bb     movwf   0x3b             	MOVWF	r0x1018
000b87   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000b88   1703     bsf     0x03, 0x6        
000b89   0865     movf    0x65, 0x0        	MOVF	(_Readings + 7),W
000b8a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000b8b   1703     bsf     0x03, 0x6        
000b8c   00bc     movwf   0x3c             	MOVWF	r0x1019
000b8d   300a     movlw   0x0a             	MOVLW	0x0a
000b8e   00f9     movwf   0x79             	MOVWF	STK06
000b8f   3000     movlw   0x00             	MOVLW	0x00
000b90   00fa     movwf   0x7a             	MOVWF	STK05
000b91   3000     movlw   0x00             	MOVLW	0x00
000b92   00fb     movwf   0x7b             	MOVWF	STK04
000b93   3000     movlw   0x00             	MOVLW	0x00
000b94   00fc     movwf   0x7c             	MOVWF	STK03
000b95   0839     movf    0x39, 0x0        	MOVF	r0x1016,W
000b96   00fd     movwf   0x7d             	MOVWF	STK02
000b97   083a     movf    0x3a, 0x0        	MOVF	r0x1017,W
000b98   00fe     movwf   0x7e             	MOVWF	STK01
000b99   083b     movf    0x3b, 0x0        	MOVF	r0x1018,W
000b9a   00ff     movwf   0x7f             	MOVWF	STK00
000b9b   083c     movf    0x3c, 0x0        	MOVF	r0x1019,W
000b9c   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000b9d   160a     bsf     0x0a, 0x4        
000b9e   259a     call    0x059a           	CALL	__modulong
000b9f   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ba0   120a     bcf     0x0a, 0x4        
000ba1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000ba2   1703     bsf     0x03, 0x6        
000ba3   00bc     movwf   0x3c             	MOVWF	r0x1019
000ba4   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000ba5   00bb     movwf   0x3b             	MOVWF	r0x1018
000ba6   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000ba7   00ba     movwf   0x3a             	MOVWF	r0x1017
000ba8   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000ba9   00b9     movwf   0x39             	MOVWF	r0x1016
000baa   00bd     movwf   0x3d             	MOVWF	r0x101A
000bab   00ff     movwf   0x7f             	MOVWF	STK00
000bac   3003     movlw   0x03             	MOVLW	0x03
000bad   2510     call    0x0510           	CALL	_SSD_SET_Symbol
000bae   2c5b     goto    0x045b           	GOTO	_00166_DS_
                                           _00165_DS_
                                           ;	.line	128; "SSD.c"	SSD_SET_Symbol(SSD_MR,((Readings.temp_read%1000)%100)/10);
000baf   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000bb0   1703     bsf     0x03, 0x6        
000bb1   085e     movf    0x5e, 0x0        	MOVF	(_Readings + 0),W
000bb2   1283     bcf     0x03, 0x5        	BANKSEL	r0x1016
000bb3   1703     bsf     0x03, 0x6        
000bb4   00b9     movwf   0x39             	MOVWF	r0x1016
000bb5   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000bb6   1703     bsf     0x03, 0x6        
000bb7   085f     movf    0x5f, 0x0        	MOVF	(_Readings + 1),W
000bb8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
000bb9   1703     bsf     0x03, 0x6        
000bba   00ba     movwf   0x3a             	MOVWF	r0x1017
000bbb   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000bbc   1703     bsf     0x03, 0x6        
000bbd   0860     movf    0x60, 0x0        	MOVF	(_Readings + 2),W
000bbe   1283     bcf     0x03, 0x5        	BANKSEL	r0x1018
000bbf   1703     bsf     0x03, 0x6        
000bc0   00bb     movwf   0x3b             	MOVWF	r0x1018
000bc1   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000bc2   1703     bsf     0x03, 0x6        
000bc3   0861     movf    0x61, 0x0        	MOVF	(_Readings + 3),W
000bc4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000bc5   1703     bsf     0x03, 0x6        
000bc6   00bc     movwf   0x3c             	MOVWF	r0x1019
000bc7   30e8     movlw   0xe8             	MOVLW	0xe8
000bc8   00f9     movwf   0x79             	MOVWF	STK06
000bc9   3003     movlw   0x03             	MOVLW	0x03
000bca   00fa     movwf   0x7a             	MOVWF	STK05
000bcb   3000     movlw   0x00             	MOVLW	0x00
000bcc   00fb     movwf   0x7b             	MOVWF	STK04
000bcd   3000     movlw   0x00             	MOVLW	0x00
000bce   00fc     movwf   0x7c             	MOVWF	STK03
000bcf   0839     movf    0x39, 0x0        	MOVF	r0x1016,W
000bd0   00fd     movwf   0x7d             	MOVWF	STK02
000bd1   083a     movf    0x3a, 0x0        	MOVF	r0x1017,W
000bd2   00fe     movwf   0x7e             	MOVWF	STK01
000bd3   083b     movf    0x3b, 0x0        	MOVF	r0x1018,W
000bd4   00ff     movwf   0x7f             	MOVWF	STK00
000bd5   083c     movf    0x3c, 0x0        	MOVF	r0x1019,W
000bd6   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000bd7   160a     bsf     0x0a, 0x4        
000bd8   259a     call    0x059a           	CALL	__modulong
000bd9   158a     bsf     0x0a, 0x3        	PAGESEL	$
000bda   120a     bcf     0x0a, 0x4        
000bdb   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000bdc   1703     bsf     0x03, 0x6        
000bdd   00bc     movwf   0x3c             	MOVWF	r0x1019
000bde   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000bdf   00bb     movwf   0x3b             	MOVWF	r0x1018
000be0   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000be1   00ba     movwf   0x3a             	MOVWF	r0x1017
000be2   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000be3   00b9     movwf   0x39             	MOVWF	r0x1016
000be4   3064     movlw   0x64             	MOVLW	0x64
000be5   00f9     movwf   0x79             	MOVWF	STK06
000be6   3000     movlw   0x00             	MOVLW	0x00
000be7   00fa     movwf   0x7a             	MOVWF	STK05
000be8   3000     movlw   0x00             	MOVLW	0x00
000be9   00fb     movwf   0x7b             	MOVWF	STK04
000bea   3000     movlw   0x00             	MOVLW	0x00
000beb   00fc     movwf   0x7c             	MOVWF	STK03
000bec   0839     movf    0x39, 0x0        	MOVF	r0x1016,W
000bed   00fd     movwf   0x7d             	MOVWF	STK02
000bee   083a     movf    0x3a, 0x0        	MOVF	r0x1017,W
000bef   00fe     movwf   0x7e             	MOVWF	STK01
000bf0   083b     movf    0x3b, 0x0        	MOVF	r0x1018,W
000bf1   00ff     movwf   0x7f             	MOVWF	STK00
000bf2   083c     movf    0x3c, 0x0        	MOVF	r0x1019,W
000bf3   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000bf4   160a     bsf     0x0a, 0x4        
000bf5   259a     call    0x059a           	CALL	__modulong
000bf6   158a     bsf     0x0a, 0x3        	PAGESEL	$
000bf7   120a     bcf     0x0a, 0x4        
000bf8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000bf9   1703     bsf     0x03, 0x6        
000bfa   00bc     movwf   0x3c             	MOVWF	r0x1019
000bfb   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000bfc   00bb     movwf   0x3b             	MOVWF	r0x1018
000bfd   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000bfe   00ba     movwf   0x3a             	MOVWF	r0x1017
000bff   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000c00   00b9     movwf   0x39             	MOVWF	r0x1016
000c01   300a     movlw   0x0a             	MOVLW	0x0a
000c02   00f9     movwf   0x79             	MOVWF	STK06
000c03   3000     movlw   0x00             	MOVLW	0x00
000c04   00fa     movwf   0x7a             	MOVWF	STK05
000c05   3000     movlw   0x00             	MOVLW	0x00
000c06   00fb     movwf   0x7b             	MOVWF	STK04
000c07   3000     movlw   0x00             	MOVLW	0x00
000c08   00fc     movwf   0x7c             	MOVWF	STK03
000c09   0839     movf    0x39, 0x0        	MOVF	r0x1016,W
000c0a   00fd     movwf   0x7d             	MOVWF	STK02
000c0b   083a     movf    0x3a, 0x0        	MOVF	r0x1017,W
000c0c   00fe     movwf   0x7e             	MOVWF	STK01
000c0d   083b     movf    0x3b, 0x0        	MOVF	r0x1018,W
000c0e   00ff     movwf   0x7f             	MOVWF	STK00
000c0f   083c     movf    0x3c, 0x0        	MOVF	r0x1019,W
000c10   118a     bcf     0x0a, 0x3        	PAGESEL	__divulong
000c11   160a     bsf     0x0a, 0x4        
000c12   2516     call    0x0516           	CALL	__divulong
000c13   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c14   120a     bcf     0x0a, 0x4        
000c15   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000c16   1703     bsf     0x03, 0x6        
000c17   00bc     movwf   0x3c             	MOVWF	r0x1019
000c18   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000c19   00bb     movwf   0x3b             	MOVWF	r0x1018
000c1a   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000c1b   00ba     movwf   0x3a             	MOVWF	r0x1017
000c1c   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000c1d   00b9     movwf   0x39             	MOVWF	r0x1016
000c1e   00bd     movwf   0x3d             	MOVWF	r0x101A
000c1f   00ff     movwf   0x7f             	MOVWF	STK00
000c20   3002     movlw   0x02             	MOVLW	0x02
000c21   2510     call    0x0510           	CALL	_SSD_SET_Symbol
                                           ;	.line	129; "SSD.c"	SSD_SET_Symbol(SSD_R,Readings.temp_read %10);
000c22   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000c23   1703     bsf     0x03, 0x6        
000c24   085e     movf    0x5e, 0x0        	MOVF	(_Readings + 0),W
000c25   1283     bcf     0x03, 0x5        	BANKSEL	r0x1016
000c26   1703     bsf     0x03, 0x6        
000c27   00b9     movwf   0x39             	MOVWF	r0x1016
000c28   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000c29   1703     bsf     0x03, 0x6        
000c2a   085f     movf    0x5f, 0x0        	MOVF	(_Readings + 1),W
000c2b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
000c2c   1703     bsf     0x03, 0x6        
000c2d   00ba     movwf   0x3a             	MOVWF	r0x1017
000c2e   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000c2f   1703     bsf     0x03, 0x6        
000c30   0860     movf    0x60, 0x0        	MOVF	(_Readings + 2),W
000c31   1283     bcf     0x03, 0x5        	BANKSEL	r0x1018
000c32   1703     bsf     0x03, 0x6        
000c33   00bb     movwf   0x3b             	MOVWF	r0x1018
000c34   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000c35   1703     bsf     0x03, 0x6        
000c36   0861     movf    0x61, 0x0        	MOVF	(_Readings + 3),W
000c37   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000c38   1703     bsf     0x03, 0x6        
000c39   00bc     movwf   0x3c             	MOVWF	r0x1019
000c3a   300a     movlw   0x0a             	MOVLW	0x0a
000c3b   00f9     movwf   0x79             	MOVWF	STK06
000c3c   3000     movlw   0x00             	MOVLW	0x00
000c3d   00fa     movwf   0x7a             	MOVWF	STK05
000c3e   3000     movlw   0x00             	MOVLW	0x00
000c3f   00fb     movwf   0x7b             	MOVWF	STK04
000c40   3000     movlw   0x00             	MOVLW	0x00
000c41   00fc     movwf   0x7c             	MOVWF	STK03
000c42   0839     movf    0x39, 0x0        	MOVF	r0x1016,W
000c43   00fd     movwf   0x7d             	MOVWF	STK02
000c44   083a     movf    0x3a, 0x0        	MOVF	r0x1017,W
000c45   00fe     movwf   0x7e             	MOVWF	STK01
000c46   083b     movf    0x3b, 0x0        	MOVF	r0x1018,W
000c47   00ff     movwf   0x7f             	MOVWF	STK00
000c48   083c     movf    0x3c, 0x0        	MOVF	r0x1019,W
000c49   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000c4a   160a     bsf     0x0a, 0x4        
000c4b   259a     call    0x059a           	CALL	__modulong
000c4c   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c4d   120a     bcf     0x0a, 0x4        
000c4e   1283     bcf     0x03, 0x5        	BANKSEL	r0x1019
000c4f   1703     bsf     0x03, 0x6        
000c50   00bc     movwf   0x3c             	MOVWF	r0x1019
000c51   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000c52   00bb     movwf   0x3b             	MOVWF	r0x1018
000c53   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000c54   00ba     movwf   0x3a             	MOVWF	r0x1017
000c55   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000c56   00b9     movwf   0x39             	MOVWF	r0x1016
000c57   00bd     movwf   0x3d             	MOVWF	r0x101A
000c58   00ff     movwf   0x7f             	MOVWF	STK00
000c59   3003     movlw   0x03             	MOVLW	0x03
000c5a   2510     call    0x0510           	CALL	_SSD_SET_Symbol
                                           _00166_DS_
                                           ;	.line	140; "SSD.c"	SSD_SET_state(SSD_MR,SSD_OFF);
000c5b   3000     movlw   0x00             	MOVLW	0x00
000c5c   00ff     movwf   0x7f             	MOVWF	STK00
000c5d   3002     movlw   0x02             	MOVLW	0x02
000c5e   252a     call    0x052a           	CALL	_SSD_SET_state
                                           ;	.line	141; "SSD.c"	SSD_SET_state(SSD_R,SSD_OFF);
000c5f   3000     movlw   0x00             	MOVLW	0x00
000c60   00ff     movwf   0x7f             	MOVWF	STK00
000c61   3003     movlw   0x03             	MOVLW	0x03
000c62   252a     call    0x052a           	CALL	_SSD_SET_state
                                           ;	.line	142; "SSD.c"	GPIO_SetPortState(SSD_DataPORT,symbols[SSD_symbols[current_ssd]]);
000c63   1283     bcf     0x03, 0x5        	BANKSEL	_SSD_update_current_ssd_1_58
000c64   1703     bsf     0x03, 0x6        
000c65   083e     movf    0x3e, 0x0        	MOVF	_SSD_update_current_ssd_1_58,W
000c66   3e6c     addlw   0x6c             	ADDLW	(_SSD_symbols + 0)
000c67   1283     bcf     0x03, 0x5        	BANKSEL	r0x1016
000c68   1703     bsf     0x03, 0x6        
000c69   00b9     movwf   0x39             	MOVWF	r0x1016
000c6a   3001     movlw   0x01             	MOVLW	high (_SSD_symbols + 0)
000c6b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000c6c   3e01     addlw   0x01             	ADDLW	0x01
000c6d   00ba     movwf   0x3a             	MOVWF	r0x1017
000c6e   0839     movf    0x39, 0x0        	MOVF	r0x1016,W
000c6f   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000c70   1303     bcf     0x03, 0x6        
000c71   0084     movwf   0x04             	MOVWF	FSR
000c72   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000c73   1283     bcf     0x03, 0x5        	BANKSEL	r0x1017
000c74   1703     bsf     0x03, 0x6        
000c75   183a     btfsc   0x3a, 0x0        	BTFSC	r0x1017,0
000c76   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000c77   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000c78   1303     bcf     0x03, 0x6        
000c79   0800     movf    0x00, 0x0        	MOVF	INDF,W
000c7a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1018
000c7b   1703     bsf     0x03, 0x6        
000c7c   00bb     movwf   0x3b             	MOVWF	r0x1018
000c7d   3ead     addlw   0xad             	ADDLW	(_symbols + 0)
000c7e   00b9     movwf   0x39             	MOVWF	r0x1016
000c7f   3017     movlw   0x17             	MOVLW	high (_symbols + 0)
000c80   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000c81   3e01     addlw   0x01             	ADDLW	0x01
000c82   00ba     movwf   0x3a             	MOVWF	r0x1017
000c83   0839     movf    0x39, 0x0        	MOVF	r0x1016,W
000c84   00fe     movwf   0x7e             	MOVWF	STK01
000c85   083a     movf    0x3a, 0x0        	MOVF	r0x1017,W
000c86   00ff     movwf   0x7f             	MOVWF	STK00
000c87   3080     movlw   0x80             	MOVLW	0x80
000c88   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
000c89   160a     bsf     0x0a, 0x4        
000c8a   26a2     call    0x06a2           	CALL	__gptrget1
000c8b   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c8c   120a     bcf     0x0a, 0x4        
000c8d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1018
000c8e   1703     bsf     0x03, 0x6        
000c8f   00bb     movwf   0x3b             	MOVWF	r0x1018
000c90   00ff     movwf   0x7f             	MOVWF	STK00
000c91   3003     movlw   0x03             	MOVLW	0x03
000c92   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortState
000c93   120a     bcf     0x0a, 0x4        
000c94   2512     call    0x0512           	CALL	_GPIO_SetPortState
000c95   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c96   120a     bcf     0x0a, 0x4        
                                           ;	.line	143; "SSD.c"	SSD_SET_state(current_ssd,Flags.next_state);
000c97   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000c98   1703     bsf     0x03, 0x6        
000c99   0816     movf    0x16, 0x0        	MOVF	(_Flags + 0),W
000c9a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1016
000c9b   1703     bsf     0x03, 0x6        
000c9c   00b9     movwf   0x39             	MOVWF	r0x1016
000c9d   00ff     movwf   0x7f             	MOVWF	STK00
000c9e   1283     bcf     0x03, 0x5        	BANKSEL	_SSD_update_current_ssd_1_58
000c9f   1703     bsf     0x03, 0x6        
000ca0   083e     movf    0x3e, 0x0        	MOVF	_SSD_update_current_ssd_1_58,W
000ca1   252a     call    0x052a           	CALL	_SSD_SET_state
                                           ;	.line	145; "SSD.c"	if(current_ssd == SSD_R)
000ca2   1283     bcf     0x03, 0x5        	BANKSEL	_SSD_update_current_ssd_1_58
000ca3   1703     bsf     0x03, 0x6        
000ca4   083e     movf    0x3e, 0x0        	MOVF	_SSD_update_current_ssd_1_58,W
000ca5   3a03     xorlw   0x03             	XORLW	0x03
000ca6   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000ca7   2cab     goto    0x04ab           	GOTO	_00168_DS_
                                           ;	.line	147; "SSD.c"	current_ssd  = SSD_MR;
000ca8   3002     movlw   0x02             	MOVLW	0x02
000ca9   00be     movwf   0x3e             	MOVWF	_SSD_update_current_ssd_1_58
000caa   2cae     goto    0x04ae           	GOTO	_00170_DS_
                                           _00168_DS_
                                           ;	.line	152; "SSD.c"	current_ssd++;
000cab   1283     bcf     0x03, 0x5        	BANKSEL	_SSD_update_current_ssd_1_58
000cac   1703     bsf     0x03, 0x6        
000cad   0abe     incf    0x3e, 0x1        	INCF	_SSD_update_current_ssd_1_58,F
                                           _00170_DS_
000cae   0008     return                   	RETURN	
                                           ; exit point of _SSD_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_GET_Symbol	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   r0x101B
                                           ;   r0x101C
                                           ;   r0x101D
                                           ;; Starting pCode block
                                           _SSD_GET_Symbol	;Function start
                                           ; 2 exit points
                                           ;	.line	110; "SSD.c"	SSD_symbol SSD_GET_Symbol(tSSD ssd)
000caf   1283     bcf     0x03, 0x5        	BANKSEL	r0x101B
000cb0   1703     bsf     0x03, 0x6        
000cb1   00b7     movwf   0x37             	MOVWF	r0x101B
                                           ;	.line	115; "SSD.c"	ret = SSD_symbols[ssd];
000cb2   3e6c     addlw   0x6c             	ADDLW	(_SSD_symbols + 0)
000cb3   00b7     movwf   0x37             	MOVWF	r0x101B
000cb4   3001     movlw   0x01             	MOVLW	high (_SSD_symbols + 0)
000cb5   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000cb6   3e01     addlw   0x01             	ADDLW	0x01
000cb7   00b8     movwf   0x38             	MOVWF	r0x101C
000cb8   0837     movf    0x37, 0x0        	MOVF	r0x101B,W
000cb9   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000cba   1303     bcf     0x03, 0x6        
000cbb   0084     movwf   0x04             	MOVWF	FSR
000cbc   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000cbd   1283     bcf     0x03, 0x5        	BANKSEL	r0x101C
000cbe   1703     bsf     0x03, 0x6        
000cbf   1838     btfsc   0x38, 0x0        	BTFSC	r0x101C,0
000cc0   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000cc1   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000cc2   1303     bcf     0x03, 0x6        
000cc3   0800     movf    0x00, 0x0        	MOVF	INDF,W
                                           ;;1	MOVWF	r0x101D
                                           ;	.line	117; "SSD.c"	return ret;
000cc4   0008     return                   	RETURN	
                                           ; exit point of _SSD_GET_Symbol
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_GET_state	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;2 compiler assigned registers:
                                           ;   r0x101E
                                           ;   STK00
                                           ;; Starting pCode block
                                           _SSD_GET_state	;Function start
                                           ; 2 exit points
                                           ;	.line	84; "SSD.c"	SSD_STATE SSD_GET_state(tSSD ssd)
000cc5   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
000cc6   1703     bsf     0x03, 0x6        
000cc7   00b6     movwf   0x36             	MOVWF	r0x101E
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
                                           ;	.line	86; "SSD.c"	switch(ssd)
000cc8   3004     movlw   0x04             	MOVLW	0x04
000cc9   0236     subwf   0x36, 0x0        	SUBWF	r0x101E,W
000cca   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000ccb   2d0e     goto    0x050e           	GOTO	_00147_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
000ccc   300c     movlw   0x0c             	MOVLW	HIGH(_00155_DS_)
000ccd   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000cce   1303     bcf     0x03, 0x6        
000ccf   008a     movwf   0x0a             	MOVWF	PCLATH
000cd0   30da     movlw   0xda             	MOVLW	_00155_DS_
000cd1   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
000cd2   1703     bsf     0x03, 0x6        
000cd3   0736     addwf   0x36, 0x0        	ADDWF	r0x101E,W
000cd4   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000cd5   2cd9     goto    0x04d9           	GOTO	_00001_DS_
000cd6   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000cd7   1303     bcf     0x03, 0x6        
000cd8   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00001_DS_
000cd9   0082     movwf   0x02             	MOVWF	PCL
                                           _00155_DS_
000cda   2cde     goto    0x04de           	GOTO	_00143_DS_
000cdb   2cea     goto    0x04ea           	GOTO	_00144_DS_
000cdc   2cf6     goto    0x04f6           	GOTO	_00145_DS_
000cdd   2d02     goto    0x0502           	GOTO	_00146_DS_
                                           _00143_DS_
                                           ;	.line	90; "SSD.c"	return GPIO_GetPortPinState(SSD_En_PORT,SSD_L_En_Pin);
000cde   3002     movlw   0x02             	MOVLW	0x02
000cdf   00ff     movwf   0x7f             	MOVWF	STK00
000ce0   3000     movlw   0x00             	MOVLW	0x00
000ce1   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000ce2   120a     bcf     0x0a, 0x4        
000ce3   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
000ce4   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ce5   120a     bcf     0x0a, 0x4        
000ce6   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
000ce7   1703     bsf     0x03, 0x6        
000ce8   00b6     movwf   0x36             	MOVWF	r0x101E
000ce9   2d0f     goto    0x050f           	GOTO	_00149_DS_
                                           _00144_DS_
                                           ;	.line	93; "SSD.c"	return GPIO_GetPortPinState(SSD_En_PORT,SSD_ML_En_Pin);
000cea   3003     movlw   0x03             	MOVLW	0x03
000ceb   00ff     movwf   0x7f             	MOVWF	STK00
000cec   3000     movlw   0x00             	MOVLW	0x00
000ced   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000cee   120a     bcf     0x0a, 0x4        
000cef   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
000cf0   158a     bsf     0x0a, 0x3        	PAGESEL	$
000cf1   120a     bcf     0x0a, 0x4        
000cf2   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
000cf3   1703     bsf     0x03, 0x6        
000cf4   00b6     movwf   0x36             	MOVWF	r0x101E
000cf5   2d0f     goto    0x050f           	GOTO	_00149_DS_
                                           _00145_DS_
                                           ;	.line	96; "SSD.c"	return GPIO_GetPortPinState(SSD_En_PORT,SSD_MR_En_Pin);
000cf6   3004     movlw   0x04             	MOVLW	0x04
000cf7   00ff     movwf   0x7f             	MOVWF	STK00
000cf8   3000     movlw   0x00             	MOVLW	0x00
000cf9   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000cfa   120a     bcf     0x0a, 0x4        
000cfb   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
000cfc   158a     bsf     0x0a, 0x3        	PAGESEL	$
000cfd   120a     bcf     0x0a, 0x4        
000cfe   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
000cff   1703     bsf     0x03, 0x6        
000d00   00b6     movwf   0x36             	MOVWF	r0x101E
000d01   2d0f     goto    0x050f           	GOTO	_00149_DS_
                                           _00146_DS_
                                           ;	.line	99; "SSD.c"	return GPIO_GetPortPinState(SSD_En_PORT,SSD_R_En_Pin);
000d02   3005     movlw   0x05             	MOVLW	0x05
000d03   00ff     movwf   0x7f             	MOVWF	STK00
000d04   3000     movlw   0x00             	MOVLW	0x00
000d05   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000d06   120a     bcf     0x0a, 0x4        
000d07   23f3     call    0x03f3           	CALL	_GPIO_GetPortPinState
000d08   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d09   120a     bcf     0x0a, 0x4        
000d0a   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
000d0b   1703     bsf     0x03, 0x6        
000d0c   00b6     movwf   0x36             	MOVWF	r0x101E
000d0d   2d0f     goto    0x050f           	GOTO	_00149_DS_
                                           _00147_DS_
                                           ;	.line	103; "SSD.c"	return 0;
000d0e   3000     movlw   0x00             	MOVLW	0x00
                                           _00149_DS_
                                           ;	.line	105; "SSD.c"	}
000d0f   0008     return                   	RETURN	
                                           ; exit point of _SSD_GET_state
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_SET_Symbol	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;4 compiler assigned registers:
                                           ;   r0x1013
                                           ;   STK00
                                           ;   r0x1014
                                           ;   r0x1015
                                           ;; Starting pCode block
                                           _SSD_SET_Symbol	;Function start
                                           ; 2 exit points
                                           ;	.line	78; "SSD.c"	void SSD_SET_Symbol(tSSD ssd,SSD_symbol symbol)
000d10   1283     bcf     0x03, 0x5        	BANKSEL	r0x1013
000d11   1703     bsf     0x03, 0x6        
000d12   00b3     movwf   0x33             	MOVWF	r0x1013
000d13   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000d14   00b4     movwf   0x34             	MOVWF	r0x1014
                                           ;	.line	80; "SSD.c"	SSD_symbols[ssd] = symbol ;
000d15   0833     movf    0x33, 0x0        	MOVF	r0x1013,W
000d16   3e6c     addlw   0x6c             	ADDLW	(_SSD_symbols + 0)
000d17   00b3     movwf   0x33             	MOVWF	r0x1013
000d18   3001     movlw   0x01             	MOVLW	high (_SSD_symbols + 0)
000d19   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000d1a   3e01     addlw   0x01             	ADDLW	0x01
000d1b   00b5     movwf   0x35             	MOVWF	r0x1015
000d1c   0833     movf    0x33, 0x0        	MOVF	r0x1013,W
000d1d   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000d1e   1303     bcf     0x03, 0x6        
000d1f   0084     movwf   0x04             	MOVWF	FSR
000d20   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000d21   1283     bcf     0x03, 0x5        	BANKSEL	r0x1015
000d22   1703     bsf     0x03, 0x6        
000d23   1835     btfsc   0x35, 0x0        	BTFSC	r0x1015,0
000d24   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000d25   0834     movf    0x34, 0x0        	MOVF	r0x1014,W
000d26   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000d27   1303     bcf     0x03, 0x6        
000d28   0080     movwf   0x00             	MOVWF	INDF
000d29   0008     return                   	RETURN	
                                           ; exit point of _SSD_SET_Symbol
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_SET_state	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;4 compiler assigned registers:
                                           ;   r0x1013
                                           ;   STK00
                                           ;   r0x1014
                                           ;   STK01
                                           ;; Starting pCode block
                                           _SSD_SET_state	;Function start
                                           ; 2 exit points
                                           ;	.line	54; "SSD.c"	void SSD_SET_state(tSSD ssd,SSD_STATE state)
000d2a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1013
000d2b   1703     bsf     0x03, 0x6        
000d2c   00b3     movwf   0x33             	MOVWF	r0x1013
000d2d   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000d2e   00b4     movwf   0x34             	MOVWF	r0x1014
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
                                           ;	.line	56; "SSD.c"	switch(ssd)
000d2f   3004     movlw   0x04             	MOVLW	0x04
000d30   0233     subwf   0x33, 0x0        	SUBWF	r0x1013,W
000d31   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000d32   2d78     goto    0x0578           	GOTO	_00128_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
000d33   300d     movlw   0x0d             	MOVLW	HIGH(_00134_DS_)
000d34   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000d35   1303     bcf     0x03, 0x6        
000d36   008a     movwf   0x0a             	MOVWF	PCLATH
000d37   3041     movlw   0x41             	MOVLW	_00134_DS_
000d38   1283     bcf     0x03, 0x5        	BANKSEL	r0x1013
000d39   1703     bsf     0x03, 0x6        
000d3a   0733     addwf   0x33, 0x0        	ADDWF	r0x1013,W
000d3b   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000d3c   2d40     goto    0x0540           	GOTO	_00002_DS_
000d3d   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000d3e   1303     bcf     0x03, 0x6        
000d3f   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00002_DS_
000d40   0082     movwf   0x02             	MOVWF	PCL
                                           _00134_DS_
000d41   2d45     goto    0x0545           	GOTO	_00122_DS_
000d42   2d52     goto    0x0552           	GOTO	_00123_DS_
000d43   2d5f     goto    0x055f           	GOTO	_00124_DS_
000d44   2d6c     goto    0x056c           	GOTO	_00125_DS_
                                           _00122_DS_
                                           ;	.line	60; "SSD.c"	GPIO_SetPortPinState(SSD_En_PORT,SSD_L_En_Pin,state);
000d45   1283     bcf     0x03, 0x5        	BANKSEL	r0x1014
000d46   1703     bsf     0x03, 0x6        
000d47   0834     movf    0x34, 0x0        	MOVF	r0x1014,W
000d48   00fe     movwf   0x7e             	MOVWF	STK01
000d49   3002     movlw   0x02             	MOVLW	0x02
000d4a   00ff     movwf   0x7f             	MOVWF	STK00
000d4b   3000     movlw   0x00             	MOVLW	0x00
000d4c   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000d4d   120a     bcf     0x0a, 0x4        
000d4e   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
000d4f   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d50   120a     bcf     0x0a, 0x4        
                                           ;	.line	61; "SSD.c"	break;
000d51   2d78     goto    0x0578           	GOTO	_00128_DS_
                                           _00123_DS_
                                           ;	.line	63; "SSD.c"	GPIO_SetPortPinState(SSD_En_PORT,SSD_ML_En_Pin,state);
000d52   1283     bcf     0x03, 0x5        	BANKSEL	r0x1014
000d53   1703     bsf     0x03, 0x6        
000d54   0834     movf    0x34, 0x0        	MOVF	r0x1014,W
000d55   00fe     movwf   0x7e             	MOVWF	STK01
000d56   3003     movlw   0x03             	MOVLW	0x03
000d57   00ff     movwf   0x7f             	MOVWF	STK00
000d58   3000     movlw   0x00             	MOVLW	0x00
000d59   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000d5a   120a     bcf     0x0a, 0x4        
000d5b   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
000d5c   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d5d   120a     bcf     0x0a, 0x4        
                                           ;	.line	64; "SSD.c"	break;
000d5e   2d78     goto    0x0578           	GOTO	_00128_DS_
                                           _00124_DS_
                                           ;	.line	66; "SSD.c"	GPIO_SetPortPinState(SSD_En_PORT,SSD_MR_En_Pin,state);
000d5f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1014
000d60   1703     bsf     0x03, 0x6        
000d61   0834     movf    0x34, 0x0        	MOVF	r0x1014,W
000d62   00fe     movwf   0x7e             	MOVWF	STK01
000d63   3004     movlw   0x04             	MOVLW	0x04
000d64   00ff     movwf   0x7f             	MOVWF	STK00
000d65   3000     movlw   0x00             	MOVLW	0x00
000d66   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000d67   120a     bcf     0x0a, 0x4        
000d68   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
000d69   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d6a   120a     bcf     0x0a, 0x4        
                                           ;	.line	67; "SSD.c"	break;
000d6b   2d78     goto    0x0578           	GOTO	_00128_DS_
                                           _00125_DS_
                                           ;	.line	69; "SSD.c"	GPIO_SetPortPinState(SSD_En_PORT,SSD_R_En_Pin,state);
000d6c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1014
000d6d   1703     bsf     0x03, 0x6        
000d6e   0834     movf    0x34, 0x0        	MOVF	r0x1014,W
000d6f   00fe     movwf   0x7e             	MOVWF	STK01
000d70   3005     movlw   0x05             	MOVLW	0x05
000d71   00ff     movwf   0x7f             	MOVWF	STK00
000d72   3000     movlw   0x00             	MOVLW	0x00
000d73   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000d74   120a     bcf     0x0a, 0x4        
000d75   2554     call    0x0554           	CALL	_GPIO_SetPortPinState
000d76   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d77   120a     bcf     0x0a, 0x4        
                                           _00128_DS_
                                           ;	.line	74; "SSD.c"	}
000d78   0008     return                   	RETURN	
                                           ; exit point of _SSD_SET_state
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPort
                                           ;   __gptrget1
                                           ;   _GPIO_SetPortState
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_Symbol
                                           ;   _GPIO_InitPort
                                           ;   __gptrget1
                                           ;   _GPIO_SetPortState
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_Symbol
                                           ;6 compiler assigned registers:
                                           ;   r0x101F
                                           ;   STK00
                                           ;   r0x1020
                                           ;   STK01
                                           ;   r0x1021
                                           ;   r0x1022
                                           ;; Starting pCode block
                                           _SSD_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	23; "SSD.c"	void SSD_Init(tSSD ssd,SSD_STATE initial_state, SSD_symbol initial_symbol)
000d79   1283     bcf     0x03, 0x5        	BANKSEL	r0x101F
000d7a   1703     bsf     0x03, 0x6        
000d7b   00b0     movwf   0x30             	MOVWF	r0x101F
000d7c   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000d7d   00b1     movwf   0x31             	MOVWF	r0x1020
000d7e   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000d7f   00b2     movwf   0x32             	MOVWF	r0x1021
                                           ;	.line	27; "SSD.c"	GPIO_InitPort(SSD_DataPORT,GPIO_OUT);
000d80   3000     movlw   0x00             	MOVLW	0x00
000d81   00ff     movwf   0x7f             	MOVWF	STK00
000d82   3003     movlw   0x03             	MOVLW	0x03
000d83   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPort
000d84   120a     bcf     0x0a, 0x4        
000d85   264a     call    0x064a           	CALL	_GPIO_InitPort
000d86   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d87   120a     bcf     0x0a, 0x4        
                                           ;	.line	28; "SSD.c"	GPIO_SetPortState(SSD_DataPORT,symbols[SSD_NULL]);
000d88   30b7     movlw   0xb7             	MOVLW	(_symbols + 10)
000d89   00fe     movwf   0x7e             	MOVWF	STK01
000d8a   3017     movlw   0x17             	MOVLW	high (_symbols + 10)
000d8b   00ff     movwf   0x7f             	MOVWF	STK00
000d8c   3080     movlw   0x80             	MOVLW	0x80
000d8d   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
000d8e   160a     bsf     0x0a, 0x4        
000d8f   26a2     call    0x06a2           	CALL	__gptrget1
000d90   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d91   120a     bcf     0x0a, 0x4        
                                           ;;1	MOVWF	r0x1022
000d92   00ff     movwf   0x7f             	MOVWF	STK00
000d93   3003     movlw   0x03             	MOVLW	0x03
000d94   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortState
000d95   120a     bcf     0x0a, 0x4        
000d96   2512     call    0x0512           	CALL	_GPIO_SetPortState
000d97   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d98   120a     bcf     0x0a, 0x4        
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
                                           ;	.line	30; "SSD.c"	switch(ssd)
000d99   3004     movlw   0x04             	MOVLW	0x04
000d9a   1283     bcf     0x03, 0x5        	BANKSEL	r0x101F
000d9b   1703     bsf     0x03, 0x6        
000d9c   0230     subwf   0x30, 0x0        	SUBWF	r0x101F,W
000d9d   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000d9e   2ddc     goto    0x05dc           	GOTO	_00110_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
000d9f   300d     movlw   0x0d             	MOVLW	HIGH(_00117_DS_)
000da0   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000da1   1303     bcf     0x03, 0x6        
000da2   008a     movwf   0x0a             	MOVWF	PCLATH
000da3   30ad     movlw   0xad             	MOVLW	_00117_DS_
000da4   1283     bcf     0x03, 0x5        	BANKSEL	r0x101F
000da5   1703     bsf     0x03, 0x6        
000da6   0730     addwf   0x30, 0x0        	ADDWF	r0x101F,W
000da7   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000da8   2dac     goto    0x05ac           	GOTO	_00003_DS_
000da9   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000daa   1303     bcf     0x03, 0x6        
000dab   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00003_DS_
000dac   0082     movwf   0x02             	MOVWF	PCL
                                           _00117_DS_
000dad   2db1     goto    0x05b1           	GOTO	_00105_DS_
000dae   2dbc     goto    0x05bc           	GOTO	_00106_DS_
000daf   2dc7     goto    0x05c7           	GOTO	_00107_DS_
000db0   2dd2     goto    0x05d2           	GOTO	_00108_DS_
                                           _00105_DS_
                                           ;	.line	34; "SSD.c"	GPIO_InitPortPin(SSD_En_PORT,SSD_L_En_Pin,GPIO_OUT);
000db1   3000     movlw   0x00             	MOVLW	0x00
000db2   00fe     movwf   0x7e             	MOVWF	STK01
000db3   3002     movlw   0x02             	MOVLW	0x02
000db4   00ff     movwf   0x7f             	MOVWF	STK00
000db5   3000     movlw   0x00             	MOVLW	0x00
000db6   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000db7   120a     bcf     0x0a, 0x4        
000db8   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000db9   158a     bsf     0x0a, 0x3        	PAGESEL	$
000dba   120a     bcf     0x0a, 0x4        
                                           ;	.line	35; "SSD.c"	break;
000dbb   2ddc     goto    0x05dc           	GOTO	_00110_DS_
                                           _00106_DS_
                                           ;	.line	37; "SSD.c"	GPIO_InitPortPin(SSD_En_PORT,SSD_ML_En_Pin,GPIO_OUT);
000dbc   3000     movlw   0x00             	MOVLW	0x00
000dbd   00fe     movwf   0x7e             	MOVWF	STK01
000dbe   3003     movlw   0x03             	MOVLW	0x03
000dbf   00ff     movwf   0x7f             	MOVWF	STK00
000dc0   3000     movlw   0x00             	MOVLW	0x00
000dc1   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000dc2   120a     bcf     0x0a, 0x4        
000dc3   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000dc4   158a     bsf     0x0a, 0x3        	PAGESEL	$
000dc5   120a     bcf     0x0a, 0x4        
                                           ;	.line	38; "SSD.c"	break;
000dc6   2ddc     goto    0x05dc           	GOTO	_00110_DS_
                                           _00107_DS_
                                           ;	.line	40; "SSD.c"	GPIO_InitPortPin(SSD_En_PORT,SSD_MR_En_Pin,GPIO_OUT);
000dc7   3000     movlw   0x00             	MOVLW	0x00
000dc8   00fe     movwf   0x7e             	MOVWF	STK01
000dc9   3004     movlw   0x04             	MOVLW	0x04
000dca   00ff     movwf   0x7f             	MOVWF	STK00
000dcb   3000     movlw   0x00             	MOVLW	0x00
000dcc   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000dcd   120a     bcf     0x0a, 0x4        
000dce   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000dcf   158a     bsf     0x0a, 0x3        	PAGESEL	$
000dd0   120a     bcf     0x0a, 0x4        
                                           ;	.line	41; "SSD.c"	break;
000dd1   2ddc     goto    0x05dc           	GOTO	_00110_DS_
                                           _00108_DS_
                                           ;	.line	43; "SSD.c"	GPIO_InitPortPin(SSD_En_PORT,SSD_R_En_Pin,GPIO_OUT);
000dd2   3000     movlw   0x00             	MOVLW	0x00
000dd3   00fe     movwf   0x7e             	MOVWF	STK01
000dd4   3005     movlw   0x05             	MOVLW	0x05
000dd5   00ff     movwf   0x7f             	MOVWF	STK00
000dd6   3000     movlw   0x00             	MOVLW	0x00
000dd7   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000dd8   120a     bcf     0x0a, 0x4        
000dd9   2660     call    0x0660           	CALL	_GPIO_InitPortPin
000dda   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ddb   120a     bcf     0x0a, 0x4        
                                           _00110_DS_
                                           ;	.line	50; "SSD.c"	SSD_SET_state(ssd,initial_state);
000ddc   1283     bcf     0x03, 0x5        	BANKSEL	r0x1020
000ddd   1703     bsf     0x03, 0x6        
000dde   0831     movf    0x31, 0x0        	MOVF	r0x1020,W
000ddf   00ff     movwf   0x7f             	MOVWF	STK00
000de0   0830     movf    0x30, 0x0        	MOVF	r0x101F,W
000de1   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_SET_state
000de2   120a     bcf     0x0a, 0x4        
000de3   252a     call    0x052a           	CALL	_SSD_SET_state
000de4   158a     bsf     0x0a, 0x3        	PAGESEL	$
000de5   120a     bcf     0x0a, 0x4        
                                           ;	.line	51; "SSD.c"	SSD_SET_Symbol(ssd, initial_symbol);
000de6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
000de7   1703     bsf     0x03, 0x6        
000de8   0832     movf    0x32, 0x0        	MOVF	r0x1021,W
000de9   00ff     movwf   0x7f             	MOVWF	STK00
000dea   0830     movf    0x30, 0x0        	MOVF	r0x101F,W
000deb   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_SET_Symbol
000dec   120a     bcf     0x0a, 0x4        
000ded   2510     call    0x0510           	CALL	_SSD_SET_Symbol
000dee   158a     bsf     0x0a, 0x3        	PAGESEL	$
000def   120a     bcf     0x0a, 0x4        
000df0   0008     return                   	RETURN	
                                           ; exit point of _SSD_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  481+  138 =   619 instructions ( 1514 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:43 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"Temp.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_Heater_Init
                                           	extern	_Heater_SetState
                                           	extern	_Heater_GetState
                                           	extern	_Heater_update
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_LED_Init
                                           	extern	_LED_Update
                                           	extern	_LED_GetState
                                           	extern	_LED_SetState
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_SettingMode_update
                                           	extern	_SettingMode_Get_SSD_state
                                           	extern	_SettingMode_OFF_mode
                                           	extern	__mullong
                                           	extern	___ulong2fs
                                           	extern	___fsdiv
                                           	extern	___fs2ulong
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_Temprature_update
                                           	global	_Temprature_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_Temp_0	udata
                                           r0x100E	res	1
                                           r0x100F	res	1
                                           r0x1010	res	1
                                           r0x1011	res	1
                                           r0x1014	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_Temp	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Temprature_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _Temprature_Read
                                           ;   _ADC_GetResult
                                           ;   __mullong
                                           ;   ___ulong2fs
                                           ;   ___fsdiv
                                           ;   ___fs2ulong
                                           ;14 compiler assigned registers:
                                           ;   r0x1014
                                           ;   r0x100E
                                           ;   r0x100F
                                           ;   STK00
                                           ;   r0x1010
                                           ;   r0x1011
                                           ;   r0x1012
                                           ;   r0x1013
                                           ;   STK06
                                           ;   STK05
                                           ;   STK04
                                           ;   STK03
                                           ;   STK02
                                           ;   STK01
                                           ;; Starting pCode block
                                           _Temprature_update	;Function start
                                           ; 2 exit points
                                           _Temprature_Read
                                           ;	.line	17; "Temp.c"	if(Counters.Temp_counter == 20)
000f4e   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000f4f   1703     bsf     0x03, 0x6        
000f50   0815     movf    0x15, 0x0        	MOVF	(_Counters + 5),W
000f51   1683     bsf     0x03, 0x5        	BANKSEL	r0x100E
000f52   1703     bsf     0x03, 0x6        
000f53   009b     movwf   0x1b             	MOVWF	r0x100E
000f54   3a14     xorlw   0x14             	XORLW	0x14
000f55   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000f56   2fec     goto    0x07ec           	GOTO	_00111_DS_
                                           ;	.line	19; "Temp.c"	Readings.temp_read = ADC_GetResult(2);
000f57   3002     movlw   0x02             	MOVLW	0x02
000f58   118a     bcf     0x0a, 0x3        	PAGESEL	_ADC_GetResult
000f59   160a     bsf     0x0a, 0x4        
000f5a   2174     call    0x0174           	CALL	_ADC_GetResult
000f5b   158a     bsf     0x0a, 0x3        	PAGESEL	$
000f5c   120a     bcf     0x0a, 0x4        
000f5d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000f5e   1703     bsf     0x03, 0x6        
000f5f   009e     movwf   0x1e             	MOVWF	r0x1011
000f60   009c     movwf   0x1c             	MOVWF	r0x100F
000f61   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000f62   009b     movwf   0x1b             	MOVWF	r0x100E
000f63   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000f64   1703     bsf     0x03, 0x6        
000f65   00de     movwf   0x5e             	MOVWF	(_Readings + 0)
000f66   1683     bsf     0x03, 0x5        	BANKSEL	r0x1010
000f67   1703     bsf     0x03, 0x6        
000f68   009d     movwf   0x1d             	MOVWF	r0x1010
                                           ;;99	MOVF	r0x100F,W
                                           ;;1	CLRF	r0x1012
                                           ;;1	CLRF	r0x1013
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;;100	MOVF	r0x1010,W
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
000f69   081e     movf    0x1e, 0x0        	MOVF	r0x1011,W
000f6a   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000f6b   1703     bsf     0x03, 0x6        
000f6c   00df     movwf   0x5f             	MOVWF	(_Readings + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
000f6d   3000     movlw   0x00             	MOVLW	0x00
000f6e   00e0     movwf   0x60             	MOVWF	(_Readings + 2)
000f6f   00e1     movwf   0x61             	MOVWF	(_Readings + 3)
                                           ;	.line	20; "Temp.c"	Readings.temp_read = (Readings.temp_read*150*5)/(1.5*1023);
000f70   1683     bsf     0x03, 0x5        	BANKSEL	r0x1010
000f71   1703     bsf     0x03, 0x6        
000f72   081d     movf    0x1d, 0x0        	MOVF	r0x1010,W
000f73   00f9     movwf   0x79             	MOVWF	STK06
000f74   081e     movf    0x1e, 0x0        	MOVF	r0x1011,W
000f75   00fa     movwf   0x7a             	MOVWF	STK05
000f76   3000     movlw   0x00             	MOVLW	0x00
000f77   00fb     movwf   0x7b             	MOVWF	STK04
000f78   3000     movlw   0x00             	MOVLW	0x00
000f79   00fc     movwf   0x7c             	MOVWF	STK03
000f7a   30ee     movlw   0xee             	MOVLW	0xee
000f7b   00fd     movwf   0x7d             	MOVWF	STK02
000f7c   3002     movlw   0x02             	MOVLW	0x02
000f7d   00fe     movwf   0x7e             	MOVWF	STK01
000f7e   3000     movlw   0x00             	MOVLW	0x00
000f7f   00ff     movwf   0x7f             	MOVWF	STK00
000f80   3000     movlw   0x00             	MOVLW	0x00
000f81   118a     bcf     0x0a, 0x3        	PAGESEL	__mullong
000f82   160a     bsf     0x0a, 0x4        
000f83   23cc     call    0x03cc           	CALL	__mullong
000f84   158a     bsf     0x0a, 0x3        	PAGESEL	$
000f85   120a     bcf     0x0a, 0x4        
000f86   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000f87   1703     bsf     0x03, 0x6        
000f88   009e     movwf   0x1e             	MOVWF	r0x1011
000f89   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000f8a   009d     movwf   0x1d             	MOVWF	r0x1010
000f8b   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000f8c   009c     movwf   0x1c             	MOVWF	r0x100F
000f8d   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000f8e   009b     movwf   0x1b             	MOVWF	r0x100E
000f8f   00fd     movwf   0x7d             	MOVWF	STK02
000f90   081c     movf    0x1c, 0x0        	MOVF	r0x100F,W
000f91   00fe     movwf   0x7e             	MOVWF	STK01
000f92   081d     movf    0x1d, 0x0        	MOVF	r0x1010,W
000f93   00ff     movwf   0x7f             	MOVWF	STK00
000f94   081e     movf    0x1e, 0x0        	MOVF	r0x1011,W
000f95   118a     bcf     0x0a, 0x3        	PAGESEL	___ulong2fs
000f96   160a     bsf     0x0a, 0x4        
000f97   230d     call    0x030d           	CALL	___ulong2fs
000f98   158a     bsf     0x0a, 0x3        	PAGESEL	$
000f99   120a     bcf     0x0a, 0x4        
000f9a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000f9b   1703     bsf     0x03, 0x6        
000f9c   009e     movwf   0x1e             	MOVWF	r0x1011
000f9d   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000f9e   009d     movwf   0x1d             	MOVWF	r0x1010
000f9f   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000fa0   009c     movwf   0x1c             	MOVWF	r0x100F
000fa1   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000fa2   009b     movwf   0x1b             	MOVWF	r0x100E
000fa3   3000     movlw   0x00             	MOVLW	0x00
000fa4   00f9     movwf   0x79             	MOVWF	STK06
000fa5   30d0     movlw   0xd0             	MOVLW	0xd0
000fa6   00fa     movwf   0x7a             	MOVWF	STK05
000fa7   30bf     movlw   0xbf             	MOVLW	0xbf
000fa8   00fb     movwf   0x7b             	MOVWF	STK04
000fa9   3044     movlw   0x44             	MOVLW	0x44
000faa   00fc     movwf   0x7c             	MOVWF	STK03
000fab   081b     movf    0x1b, 0x0        	MOVF	r0x100E,W
000fac   00fd     movwf   0x7d             	MOVWF	STK02
000fad   081c     movf    0x1c, 0x0        	MOVF	r0x100F,W
000fae   00fe     movwf   0x7e             	MOVWF	STK01
000faf   081d     movf    0x1d, 0x0        	MOVF	r0x1010,W
000fb0   00ff     movwf   0x7f             	MOVWF	STK00
000fb1   081e     movf    0x1e, 0x0        	MOVF	r0x1011,W
000fb2   158a     bsf     0x0a, 0x3        	PAGESEL	___fsdiv
000fb3   120a     bcf     0x0a, 0x4        
000fb4   2000     call    0x0000           	CALL	___fsdiv
000fb5   158a     bsf     0x0a, 0x3        	PAGESEL	$
000fb6   120a     bcf     0x0a, 0x4        
000fb7   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000fb8   1703     bsf     0x03, 0x6        
000fb9   009e     movwf   0x1e             	MOVWF	r0x1011
000fba   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000fbb   009d     movwf   0x1d             	MOVWF	r0x1010
000fbc   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000fbd   009c     movwf   0x1c             	MOVWF	r0x100F
000fbe   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000fbf   009b     movwf   0x1b             	MOVWF	r0x100E
000fc0   00fd     movwf   0x7d             	MOVWF	STK02
000fc1   081c     movf    0x1c, 0x0        	MOVF	r0x100F,W
000fc2   00fe     movwf   0x7e             	MOVWF	STK01
000fc3   081d     movf    0x1d, 0x0        	MOVF	r0x1010,W
000fc4   00ff     movwf   0x7f             	MOVWF	STK00
000fc5   081e     movf    0x1e, 0x0        	MOVF	r0x1011,W
000fc6   118a     bcf     0x0a, 0x3        	PAGESEL	___fs2ulong
000fc7   160a     bsf     0x0a, 0x4        
000fc8   2225     call    0x0225           	CALL	___fs2ulong
000fc9   158a     bsf     0x0a, 0x3        	PAGESEL	$
000fca   120a     bcf     0x0a, 0x4        
000fcb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000fcc   1703     bsf     0x03, 0x6        
000fcd   009e     movwf   0x1e             	MOVWF	r0x1011
000fce   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000fcf   009d     movwf   0x1d             	MOVWF	r0x1010
000fd0   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000fd1   009c     movwf   0x1c             	MOVWF	r0x100F
000fd2   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000fd3   009b     movwf   0x1b             	MOVWF	r0x100E
000fd4   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000fd5   1703     bsf     0x03, 0x6        
000fd6   00de     movwf   0x5e             	MOVWF	(_Readings + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
000fd7   1683     bsf     0x03, 0x5        	BANKSEL	r0x100F
000fd8   1703     bsf     0x03, 0x6        
000fd9   081c     movf    0x1c, 0x0        	MOVF	r0x100F,W
000fda   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000fdb   1703     bsf     0x03, 0x6        
000fdc   00df     movwf   0x5f             	MOVWF	(_Readings + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
000fdd   1683     bsf     0x03, 0x5        	BANKSEL	r0x1010
000fde   1703     bsf     0x03, 0x6        
000fdf   081d     movf    0x1d, 0x0        	MOVF	r0x1010,W
000fe0   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000fe1   1703     bsf     0x03, 0x6        
000fe2   00e0     movwf   0x60             	MOVWF	(_Readings + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
000fe3   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000fe4   1703     bsf     0x03, 0x6        
000fe5   081e     movf    0x1e, 0x0        	MOVF	r0x1011,W
000fe6   1283     bcf     0x03, 0x5        	BANKSEL	_Readings
000fe7   1703     bsf     0x03, 0x6        
000fe8   00e1     movwf   0x61             	MOVWF	(_Readings + 3)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	21; "Temp.c"	Counters.Temp_counter=0 ; // counter to read every 100ms one reading
000fe9   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000fea   1703     bsf     0x03, 0x6        
000feb   0195     clrf    0x15             	CLRF	(_Counters + 5)
                                           _00111_DS_
                                           ;	.line	27; "Temp.c"	Counters.Temp_counter++;
000fec   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000fed   1703     bsf     0x03, 0x6        
000fee   0815     movf    0x15, 0x0        	MOVF	(_Counters + 5),W
000fef   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
000ff0   1703     bsf     0x03, 0x6        
000ff1   009f     movwf   0x1f             	MOVWF	r0x1014
000ff2   0a9f     incf    0x1f, 0x1        	INCF	r0x1014,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
000ff3   081f     movf    0x1f, 0x0        	MOVF	r0x1014,W
000ff4   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000ff5   1703     bsf     0x03, 0x6        
000ff6   0095     movwf   0x15             	MOVWF	(_Counters + 5)
000ff7   0008     return                   	RETURN	
                                           ; exit point of _Temprature_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Temprature_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _ADC_Init
                                           ;   _ADC_Init
                                           ;; Starting pCode block
                                           _Temprature_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	4; "Temp.c"	ADC_Init(1); // 250ns sampling rate
000ff8   3001     movlw   0x01             	MOVLW	0x01
000ff9   118a     bcf     0x0a, 0x3        	PAGESEL	_ADC_Init
000ffa   160a     bsf     0x0a, 0x4        
000ffb   21df     call    0x01df           	CALL	_ADC_Init
000ffc   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ffd   120a     bcf     0x0a, 0x4        
000ffe   0008     return                   	RETURN	
                                           ; exit point of _Temprature_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  109+   34 =   143 instructions (  354 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:44 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"Timer.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_Heater_Init
                                           	extern	_Heater_SetState
                                           	extern	_Heater_GetState
                                           	extern	_Heater_update
                                           	extern	_SettingMode_update
                                           	extern	_SettingMode_Get_SSD_state
                                           	extern	_SettingMode_OFF_mode
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_LED_Init
                                           	extern	_LED_Update
                                           	extern	_LED_GetState
                                           	extern	_LED_SetState
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_TMR0_Update
                                           	global	_TMR0_Start
                                           	global	_TMR0_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_Timer_0	udata
                                           r0x1005	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_Timer	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _TMR0_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _PB_Update
                                           ;   _SSD_update
                                           ;   _Temprature_update
                                           ;   _LED_Update
                                           ;   _Heater_update
                                           ;   _Cooler_update
                                           ;   _SettingMode_update
                                           ;   _SettingMode_OFF_mode
                                           ;   _Heater_update
                                           ;   _Cooler_update
                                           ;   _PB_Update
                                           ;   _SSD_update
                                           ;   _Temprature_update
                                           ;   _LED_Update
                                           ;   _Heater_update
                                           ;   _Cooler_update
                                           ;   _SettingMode_update
                                           ;   _SettingMode_OFF_mode
                                           ;   _Heater_update
                                           ;   _Cooler_update
                                           ;1 compiler assigned register :
                                           ;   r0x1005
                                           ;; Starting pCode block
                                           _TMR0_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	20; "Timer.c"	if(Flags.Operation_Flag == 1)
001600   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001601   1703     bsf     0x03, 0x6        
001602   081a     movf    0x1a, 0x0        	MOVF	(_Flags + 4),W
001603   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
001604   1703     bsf     0x03, 0x6        
001605   00a7     movwf   0x27             	MOVWF	r0x1005
001606   3a01     xorlw   0x01             	XORLW	0x01
001607   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001608   2e2d     goto    0x062d           	GOTO	_00116_DS_
                                           ;	.line	22; "Timer.c"	PB_Update();
001609   118a     bcf     0x0a, 0x3        	PAGESEL	_PB_Update
00160a   120a     bcf     0x0a, 0x4        
00160b   2158     call    0x0158           	CALL	_PB_Update
00160c   118a     bcf     0x0a, 0x3        	PAGESEL	$
00160d   160a     bsf     0x0a, 0x4        
                                           ;	.line	23; "Timer.c"	SSD_update();
00160e   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_update
00160f   120a     bcf     0x0a, 0x4        
001610   22fc     call    0x02fc           	CALL	_SSD_update
001611   118a     bcf     0x0a, 0x3        	PAGESEL	$
001612   160a     bsf     0x0a, 0x4        
                                           ;	.line	24; "Timer.c"	Temprature_update();
001613   158a     bsf     0x0a, 0x3        	PAGESEL	_Temprature_update
001614   120a     bcf     0x0a, 0x4        
001615   274e     call    0x074e           	CALL	_Temprature_update
001616   118a     bcf     0x0a, 0x3        	PAGESEL	$
001617   160a     bsf     0x0a, 0x4        
                                           ;	.line	25; "Timer.c"	LED_Update();
001618   158a     bsf     0x0a, 0x3        	PAGESEL	_LED_Update
001619   120a     bcf     0x0a, 0x4        
00161a   26b7     call    0x06b7           	CALL	_LED_Update
00161b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00161c   160a     bsf     0x0a, 0x4        
                                           ;	.line	26; "Timer.c"	Heater_update();
00161d   118a     bcf     0x0a, 0x3        	PAGESEL	_Heater_update
00161e   160a     bsf     0x0a, 0x4        
00161f   2755     call    0x0755           	CALL	_Heater_update
001620   118a     bcf     0x0a, 0x3        	PAGESEL	$
001621   160a     bsf     0x0a, 0x4        
                                           ;	.line	27; "Timer.c"	Cooler_update();
001622   118a     bcf     0x0a, 0x3        	PAGESEL	_Cooler_update
001623   160a     bsf     0x0a, 0x4        
001624   2732     call    0x0732           	CALL	_Cooler_update
001625   118a     bcf     0x0a, 0x3        	PAGESEL	$
001626   160a     bsf     0x0a, 0x4        
                                           ;	.line	28; "Timer.c"	SettingMode_update();
001627   118a     bcf     0x0a, 0x3        	PAGESEL	_SettingMode_update
001628   160a     bsf     0x0a, 0x4        
001629   2115     call    0x0115           	CALL	_SettingMode_update
00162a   118a     bcf     0x0a, 0x3        	PAGESEL	$
00162b   160a     bsf     0x0a, 0x4        
00162c   2e42     goto    0x0642           	GOTO	_00118_DS_
                                           _00116_DS_
                                           ;	.line	31; "Timer.c"	else if(Flags.Operation_Flag == 0)
00162d   3000     movlw   0x00             	MOVLW	0x00
00162e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
00162f   1703     bsf     0x03, 0x6        
001630   0427     iorwf   0x27, 0x0        	IORWF	r0x1005,W
001631   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001632   2e42     goto    0x0642           	GOTO	_00118_DS_
                                           ;	.line	33; "Timer.c"	SettingMode_OFF_mode();
001633   118a     bcf     0x0a, 0x3        	PAGESEL	_SettingMode_OFF_mode
001634   160a     bsf     0x0a, 0x4        
001635   2000     call    0x0000           	CALL	_SettingMode_OFF_mode
001636   118a     bcf     0x0a, 0x3        	PAGESEL	$
001637   160a     bsf     0x0a, 0x4        
                                           ;	.line	34; "Timer.c"	Heater_update();
001638   118a     bcf     0x0a, 0x3        	PAGESEL	_Heater_update
001639   160a     bsf     0x0a, 0x4        
00163a   2755     call    0x0755           	CALL	_Heater_update
00163b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00163c   160a     bsf     0x0a, 0x4        
                                           ;	.line	35; "Timer.c"	Cooler_update();
00163d   118a     bcf     0x0a, 0x3        	PAGESEL	_Cooler_update
00163e   160a     bsf     0x0a, 0x4        
00163f   2732     call    0x0732           	CALL	_Cooler_update
001640   118a     bcf     0x0a, 0x3        	PAGESEL	$
001641   160a     bsf     0x0a, 0x4        
                                           _00118_DS_
001642   0008     return                   	RETURN	
                                           ; exit point of _TMR0_Update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _TMR0_Start	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _TMR0_Start	;Function start
                                           ; 2 exit points
                                           ;	.line	11; "Timer.c"	TMR0_SET_INTERRUPT_STATE(Interrupt);
001643   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
001644   1303     bcf     0x03, 0x6        
001645   168b     bsf     0x0b, 0x5        	BSF	_INTCONbits,5
                                           ;	.line	12; "Timer.c"	GIE = 1; //set global interrupt flag
001646   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	13; "Timer.c"	TMR0_SELECT_CLOCK_SOURCE(Timer);
001647   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
001648   1303     bcf     0x03, 0x6        
001649   1281     bcf     0x01, 0x5        	BCF	_OPTION_REGbits,5
                                           ;	.line	14; "Timer.c"	TMR0_state(TMR0_ON); //TMR0 on
00164a   1281     bcf     0x01, 0x5        	BCF	_OPTION_REGbits,5
00164b   0008     return                   	RETURN	
                                           ; exit point of _TMR0_Start
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _TMR0_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _TMR0_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	5; "Timer.c"	TMR0_state(TMR0_OFF);
00164c   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
00164d   1303     bcf     0x03, 0x6        
00164e   1681     bsf     0x01, 0x5        	BSF	_OPTION_REGbits,5
                                           ;	.line	6; "Timer.c"	TMR0_SELECT_PRESCALAR(N_256);
00164f   1181     bcf     0x01, 0x3        	BCF	_OPTION_REGbits,3
001650   1501     bsf     0x01, 0x2        	BSF	_OPTION_REGbits,2
001651   1481     bsf     0x01, 0x1        	BSF	_OPTION_REGbits,1
001652   1401     bsf     0x01, 0x0        	BSF	_OPTION_REGbits,0
001653   0008     return                   	RETURN	
                                           ; exit point of _TMR0_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   32+   26 =    58 instructions (  168 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Fri Jul 17 06:58:44 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"utilities.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_UTIL_DelayMS
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_utilities_0	udata
                                           r0x1000	res	1
                                           r0x1001	res	1
                                           r0x1002	res	1
                                           r0x1003	res	1
                                           r0x1004	res	1
                                           r0x1005	res	1
                                           r0x1006	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_utilities	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _UTIL_DelayMS	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;7 compiler assigned registers:
                                           ;   r0x1000
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;   r0x1005
                                           ;   r0x1006
                                           ;; Starting pCode block
                                           _UTIL_DelayMS	;Function start
                                           ; 2 exit points
                                           ;	.line	3; "utilities.c"	void UTIL_DelayMS(unsigned char delay_ms)
0016d6   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
0016d7   1303     bcf     0x03, 0x6        
0016d8   00e9     movwf   0x69             	MOVWF	r0x1000
                                           ;	.line	8; "utilities.c"	for (x = 0; x < delay_ms; x++)
0016d9   01ea     clrf    0x6a             	CLRF	r0x1001
0016da   01eb     clrf    0x6b             	CLRF	r0x1002
                                           _00111_DS_
0016db   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
0016dc   1303     bcf     0x03, 0x6        
0016dd   0869     movf    0x69, 0x0        	MOVF	r0x1000,W
0016de   00ec     movwf   0x6c             	MOVWF	r0x1003
0016df   01ed     clrf    0x6d             	CLRF	r0x1004
0016e0   3000     movlw   0x00             	MOVLW	0x00
0016e1   026b     subwf   0x6b, 0x0        	SUBWF	r0x1002,W
0016e2   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0016e3   2ee6     goto    0x06e6           	GOTO	_00128_DS_
0016e4   086c     movf    0x6c, 0x0        	MOVF	r0x1003,W
0016e5   026a     subwf   0x6a, 0x0        	SUBWF	r0x1001,W
                                           _00128_DS_
0016e6   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0016e7   2f04     goto    0x0704           	GOTO	_00113_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;	.line	10; "utilities.c"	for(y = 0; y <120; y++)
0016e8   3078     movlw   0x78             	MOVLW	0x78
0016e9   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
0016ea   1303     bcf     0x03, 0x6        
0016eb   00ec     movwf   0x6c             	MOVWF	r0x1003
0016ec   01ed     clrf    0x6d             	CLRF	r0x1004
                                           _00109_DS_
0016ed   30ff     movlw   0xff             	MOVLW	0xff
0016ee   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
0016ef   1303     bcf     0x03, 0x6        
0016f0   076c     addwf   0x6c, 0x0        	ADDWF	r0x1003,W
0016f1   00ee     movwf   0x6e             	MOVWF	r0x1005
0016f2   30ff     movlw   0xff             	MOVLW	0xff
0016f3   00ef     movwf   0x6f             	MOVWF	r0x1006
0016f4   086d     movf    0x6d, 0x0        	MOVF	r0x1004,W
0016f5   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0016f6   0f6d     incfsz  0x6d, 0x0        	INCFSZ	r0x1004,W
0016f7   07ef     addwf   0x6f, 0x1        	ADDWF	r0x1006,F
0016f8   086e     movf    0x6e, 0x0        	MOVF	r0x1005,W
0016f9   00ec     movwf   0x6c             	MOVWF	r0x1003
0016fa   086f     movf    0x6f, 0x0        	MOVF	r0x1006,W
0016fb   00ed     movwf   0x6d             	MOVWF	r0x1004
0016fc   086e     movf    0x6e, 0x0        	MOVF	r0x1005,W
0016fd   046f     iorwf   0x6f, 0x0        	IORWF	r0x1006,W
0016fe   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0016ff   2eed     goto    0x06ed           	GOTO	_00109_DS_
                                           ;	.line	8; "utilities.c"	for (x = 0; x < delay_ms; x++)
001700   0aea     incf    0x6a, 0x1        	INCF	r0x1001,F
001701   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001702   0aeb     incf    0x6b, 0x1        	INCF	r0x1002,F
001703   2edb     goto    0x06db           	GOTO	_00111_DS_
                                           _00113_DS_
001704   0008     return                   	RETURN	
                                           ; exit point of _UTIL_DelayMS
                                           
                                           
                                           ;	code size estimation:
                                           ;	   39+    4 =    43 instructions (   94 byte)
                                           
                                           	end
