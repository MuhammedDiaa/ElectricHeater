gplink-1.4.0 #1106 (Oct  6 2014)
Copyright (c) 1998-2014 gputils project
Listing File Generated: 7-19-2020  20:05:25
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:21 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"adc.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_Start_conversion_Int
                                           	global	_ADC_GetResult
                                           	global	_ADC_Update
                                           	global	_ADC_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_adc_0	udata
                                           r0x1007	res	1
                                           r0x1008	res	1
                                           r0x1009	res	1
                                           r0x1003	res	1
                                           r0x1004	res	1
                                           r0x1005	res	1
                                           r0x1006	res	1
                                           r0x1000	res	1
                                           r0x1001	res	1
                                           r0x1002	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_adc	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Start_conversion_Int	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   r0x1000
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;; Starting pCode block
                                           _Start_conversion_Int	;Function start
                                           ; 2 exit points
                                           ;	.line	31; "adc.c"	void Start_conversion_Int(unsigned char channel)
000efa   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
000efb   1303     bcf     0x03, 0x6        
000efc   00ed     movwf   0x6d             	MOVWF	r0x1000
                                           ;	.line	34; "adc.c"	ADC_SELECT_CHANNEL(channel);
000efd   3004     movlw   0x04             	MOVLW	0x04
000efe   056d     andwf   0x6d, 0x0        	ANDWF	r0x1000,W
000eff   00ee     movwf   0x6e             	MOVWF	r0x1001
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
000f00   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000f01   0c6e     rrf     0x6e, 0x0        	RRF	r0x1001,W
000f02   00ef     movwf   0x6f             	MOVWF	r0x1002
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
000f03   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000f04   0cef     rrf     0x6f, 0x1        	RRF	r0x1002,F
000f05   0c6f     rrf     0x6f, 0x0        	RRF	r0x1002,W
000f06   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000f07   2f0b     goto    0x070b           	GOTO	_00001_DS_
000f08   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f09   1303     bcf     0x03, 0x6        
000f0a   129f     bcf     0x1f, 0x5        	BCF	_ADCON0bits,5
                                           _00001_DS_
000f0b   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000f0c   2f10     goto    0x0710           	GOTO	_00002_DS_
000f0d   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f0e   1303     bcf     0x03, 0x6        
000f0f   169f     bsf     0x1f, 0x5        	BSF	_ADCON0bits,5
                                           _00002_DS_
000f10   3002     movlw   0x02             	MOVLW	0x02
000f11   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
000f12   1303     bcf     0x03, 0x6        
000f13   056d     andwf   0x6d, 0x0        	ANDWF	r0x1000,W
000f14   00ee     movwf   0x6e             	MOVWF	r0x1001
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
000f15   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000f16   0c6e     rrf     0x6e, 0x0        	RRF	r0x1001,W
000f17   00ef     movwf   0x6f             	MOVWF	r0x1002
000f18   0c6f     rrf     0x6f, 0x0        	RRF	r0x1002,W
000f19   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000f1a   2f1e     goto    0x071e           	GOTO	_00003_DS_
000f1b   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f1c   1303     bcf     0x03, 0x6        
000f1d   121f     bcf     0x1f, 0x4        	BCF	_ADCON0bits,4
                                           _00003_DS_
000f1e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000f1f   2f23     goto    0x0723           	GOTO	_00004_DS_
000f20   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f21   1303     bcf     0x03, 0x6        
000f22   161f     bsf     0x1f, 0x4        	BSF	_ADCON0bits,4
                                           _00004_DS_
000f23   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
000f24   1303     bcf     0x03, 0x6        
000f25   086d     movf    0x6d, 0x0        	MOVF	r0x1000,W
000f26   3901     andlw   0x01             	ANDLW	0x01
000f27   00ee     movwf   0x6e             	MOVWF	r0x1001
000f28   00ed     movwf   0x6d             	MOVWF	r0x1000
000f29   0c6d     rrf     0x6d, 0x0        	RRF	r0x1000,W
000f2a   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000f2b   2f2f     goto    0x072f           	GOTO	_00005_DS_
000f2c   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f2d   1303     bcf     0x03, 0x6        
000f2e   119f     bcf     0x1f, 0x3        	BCF	_ADCON0bits,3
                                           _00005_DS_
000f2f   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000f30   2f34     goto    0x0734           	GOTO	_00006_DS_
000f31   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f32   1303     bcf     0x03, 0x6        
000f33   159f     bsf     0x1f, 0x3        	BSF	_ADCON0bits,3
                                           _00006_DS_
                                           ;	.line	35; "adc.c"	ADC_SELECT_RESULT_JUSTIFICATION(RIGHT);
000f34   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1bits
000f35   1303     bcf     0x03, 0x6        
000f36   179f     bsf     0x1f, 0x7        	BSF	_ADCON1bits,7
                                           ;	.line	36; "adc.c"	ADC_SET_STATE(ADC_ON);
000f37   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f38   1303     bcf     0x03, 0x6        
000f39   141f     bsf     0x1f, 0x0        	BSF	_ADCON0bits,0
                                           ;	.line	37; "adc.c"	ADC_START_CONVERSION();
000f3a   151f     bsf     0x1f, 0x2        	BSF	_ADCON0bits,2
                                           ;	.line	38; "adc.c"	GIE  = 1 ;
000f3b   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	39; "adc.c"	PEIE = 1 ;
000f3c   170b     bsf     0x0b, 0x6        	BSF	_INTCONbits,6
                                           ;	.line	40; "adc.c"	ADIE = 1 ;
000f3d   1683     bsf     0x03, 0x5        	BANKSEL	_PIE1bits
000f3e   1303     bcf     0x03, 0x6        
000f3f   170c     bsf     0x0c, 0x6        	BSF	_PIE1bits,6
000f40   0008     return                   	RETURN	
                                           ; exit point of _Start_conversion_Int
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _ADC_GetResult	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;5 compiler assigned registers:
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;   r0x1005
                                           ;   r0x1006
                                           ;   STK00
                                           ;; Starting pCode block
                                           _ADC_GetResult	;Function start
                                           ; 2 exit points
                                           ;	.line	16; "adc.c"	unsigned int ADC_GetResult(unsigned char channel)
000f41   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000f42   1303     bcf     0x03, 0x6        
000f43   00e9     movwf   0x69             	MOVWF	r0x1003
                                           ;	.line	20; "adc.c"	ADC_SELECT_CHANNEL(channel);
000f44   3004     movlw   0x04             	MOVLW	0x04
000f45   0569     andwf   0x69, 0x0        	ANDWF	r0x1003,W
000f46   00ea     movwf   0x6a             	MOVWF	r0x1004
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
000f47   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000f48   0c6a     rrf     0x6a, 0x0        	RRF	r0x1004,W
000f49   00eb     movwf   0x6b             	MOVWF	r0x1005
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
000f4a   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000f4b   0ceb     rrf     0x6b, 0x1        	RRF	r0x1005,F
000f4c   0c6b     rrf     0x6b, 0x0        	RRF	r0x1005,W
000f4d   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000f4e   2f52     goto    0x0752           	GOTO	_00007_DS_
000f4f   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f50   1303     bcf     0x03, 0x6        
000f51   129f     bcf     0x1f, 0x5        	BCF	_ADCON0bits,5
                                           _00007_DS_
000f52   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000f53   2f57     goto    0x0757           	GOTO	_00008_DS_
000f54   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f55   1303     bcf     0x03, 0x6        
000f56   169f     bsf     0x1f, 0x5        	BSF	_ADCON0bits,5
                                           _00008_DS_
000f57   3002     movlw   0x02             	MOVLW	0x02
000f58   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000f59   1303     bcf     0x03, 0x6        
000f5a   0569     andwf   0x69, 0x0        	ANDWF	r0x1003,W
000f5b   00ea     movwf   0x6a             	MOVWF	r0x1004
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
000f5c   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000f5d   0c6a     rrf     0x6a, 0x0        	RRF	r0x1004,W
000f5e   00eb     movwf   0x6b             	MOVWF	r0x1005
000f5f   0c6b     rrf     0x6b, 0x0        	RRF	r0x1005,W
000f60   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000f61   2f65     goto    0x0765           	GOTO	_00009_DS_
000f62   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f63   1303     bcf     0x03, 0x6        
000f64   121f     bcf     0x1f, 0x4        	BCF	_ADCON0bits,4
                                           _00009_DS_
000f65   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000f66   2f6a     goto    0x076a           	GOTO	_00010_DS_
000f67   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f68   1303     bcf     0x03, 0x6        
000f69   161f     bsf     0x1f, 0x4        	BSF	_ADCON0bits,4
                                           _00010_DS_
000f6a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000f6b   1303     bcf     0x03, 0x6        
000f6c   0869     movf    0x69, 0x0        	MOVF	r0x1003,W
000f6d   3901     andlw   0x01             	ANDLW	0x01
000f6e   00ea     movwf   0x6a             	MOVWF	r0x1004
000f6f   00e9     movwf   0x69             	MOVWF	r0x1003
000f70   0c69     rrf     0x69, 0x0        	RRF	r0x1003,W
000f71   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000f72   2f76     goto    0x0776           	GOTO	_00011_DS_
000f73   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f74   1303     bcf     0x03, 0x6        
000f75   119f     bcf     0x1f, 0x3        	BCF	_ADCON0bits,3
                                           _00011_DS_
000f76   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000f77   2f7b     goto    0x077b           	GOTO	_00012_DS_
000f78   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f79   1303     bcf     0x03, 0x6        
000f7a   159f     bsf     0x1f, 0x3        	BSF	_ADCON0bits,3
                                           _00012_DS_
                                           ;	.line	21; "adc.c"	ADC_SELECT_RESULT_JUSTIFICATION(RIGHT);
000f7b   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1bits
000f7c   1303     bcf     0x03, 0x6        
000f7d   179f     bsf     0x1f, 0x7        	BSF	_ADCON1bits,7
                                           ;	.line	22; "adc.c"	ADC_SET_STATE(ADC_ON);
000f7e   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f7f   1303     bcf     0x03, 0x6        
000f80   141f     bsf     0x1f, 0x0        	BSF	_ADCON0bits,0
                                           ;	.line	23; "adc.c"	ADC_START_CONVERSION();
000f81   151f     bsf     0x1f, 0x2        	BSF	_ADCON0bits,2
                                           _00113_DS_
                                           ;	.line	24; "adc.c"	ADC_WAIT_FOR_RESULT();
000f82   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000f83   1303     bcf     0x03, 0x6        
000f84   01e9     clrf    0x69             	CLRF	r0x1003
000f85   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000f86   1303     bcf     0x03, 0x6        
000f87   1d1f     btfss   0x1f, 0x2        	BTFSS	_ADCON0bits,2
000f88   2f8c     goto    0x078c           	GOTO	_00013_DS_
000f89   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000f8a   1303     bcf     0x03, 0x6        
000f8b   0ae9     incf    0x69, 0x1        	INCF	r0x1003,F
                                           _00013_DS_
000f8c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000f8d   1303     bcf     0x03, 0x6        
000f8e   0869     movf    0x69, 0x0        	MOVF	r0x1003,W
000f8f   00ea     movwf   0x6a             	MOVWF	r0x1004
                                           ;	.line	25; "adc.c"	ret = ADC_READ_RESULT(RIGHT);
000f90   3a01     xorlw   0x01             	XORLW	0x01
000f91   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000f92   2f82     goto    0x0782           	GOTO	_00113_DS_
000f93   1283     bcf     0x03, 0x5        	BANKSEL	_ADRESH
000f94   1303     bcf     0x03, 0x6        
000f95   081e     movf    0x1e, 0x0        	MOVF	_ADRESH,W
000f96   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000f97   1303     bcf     0x03, 0x6        
000f98   00ec     movwf   0x6c             	MOVWF	r0x1006
000f99   00e9     movwf   0x69             	MOVWF	r0x1003
000f9a   01ea     clrf    0x6a             	CLRF	r0x1004
                                           ;;99	MOVF	r0x1003,W
000f9b   01eb     clrf    0x6b             	CLRF	r0x1005
000f9c   1683     bsf     0x03, 0x5        	BANKSEL	_ADRESL
000f9d   1303     bcf     0x03, 0x6        
000f9e   081e     movf    0x1e, 0x0        	MOVF	_ADRESL,W
000f9f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1003
000fa0   1303     bcf     0x03, 0x6        
000fa1   00e9     movwf   0x69             	MOVWF	r0x1003
000fa2   01ea     clrf    0x6a             	CLRF	r0x1004
000fa3   0869     movf    0x69, 0x0        	MOVF	r0x1003,W
000fa4   04eb     iorwf   0x6b, 0x1        	IORWF	r0x1005,F
000fa5   3000     movlw   0x00             	MOVLW	0x00
000fa6   04ec     iorwf   0x6c, 0x1        	IORWF	r0x1006,F
                                           ;	.line	27; "adc.c"	return ret;
000fa7   086b     movf    0x6b, 0x0        	MOVF	r0x1005,W
000fa8   00ff     movwf   0x7f             	MOVWF	STK00
000fa9   086c     movf    0x6c, 0x0        	MOVF	r0x1006,W
000faa   0008     return                   	RETURN	
                                           ; exit point of _ADC_GetResult
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _ADC_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _ADC_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	14; "adc.c"	}
000fab   0008     return                   	RETURN	
                                           ; exit point of _ADC_Update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _ADC_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   r0x1007
                                           ;   r0x1008
                                           ;   r0x1009
                                           ;; Starting pCode block
                                           _ADC_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	3; "adc.c"	void ADC_Init(unsigned char clock_source)
000fac   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
000fad   1303     bcf     0x03, 0x6        
000fae   00e6     movwf   0x66             	MOVWF	r0x1007
                                           ;	.line	5; "adc.c"	ADC_SET_STATE(ADC_OFF);
000faf   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000fb0   1303     bcf     0x03, 0x6        
000fb1   101f     bcf     0x1f, 0x0        	BCF	_ADCON0bits,0
                                           ;	.line	6; "adc.c"	ADC_SELECT_CLOCK_SOURCE(clock_source);
000fb2   3004     movlw   0x04             	MOVLW	0x04
000fb3   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
000fb4   1303     bcf     0x03, 0x6        
000fb5   0566     andwf   0x66, 0x0        	ANDWF	r0x1007,W
000fb6   00e7     movwf   0x67             	MOVWF	r0x1008
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
000fb7   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000fb8   0c67     rrf     0x67, 0x0        	RRF	r0x1008,W
000fb9   00e8     movwf   0x68             	MOVWF	r0x1009
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=1, offr=0
000fba   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000fbb   0ce8     rrf     0x68, 0x1        	RRF	r0x1009,F
000fbc   0c68     rrf     0x68, 0x0        	RRF	r0x1009,W
000fbd   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000fbe   2fc2     goto    0x07c2           	GOTO	_00014_DS_
000fbf   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1bits
000fc0   1303     bcf     0x03, 0x6        
000fc1   131f     bcf     0x1f, 0x6        	BCF	_ADCON1bits,6
                                           _00014_DS_
000fc2   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000fc3   2fc7     goto    0x07c7           	GOTO	_00015_DS_
000fc4   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1bits
000fc5   1303     bcf     0x03, 0x6        
000fc6   171f     bsf     0x1f, 0x6        	BSF	_ADCON1bits,6
                                           _00015_DS_
000fc7   3002     movlw   0x02             	MOVLW	0x02
000fc8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
000fc9   1303     bcf     0x03, 0x6        
000fca   0566     andwf   0x66, 0x0        	ANDWF	r0x1007,W
000fcb   00e7     movwf   0x67             	MOVWF	r0x1008
                                           ;;shiftRight_Left2ResultLit:5273: shCount=1, size=1, sign=0, same=0, offr=0
000fcc   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000fcd   0c67     rrf     0x67, 0x0        	RRF	r0x1008,W
000fce   00e8     movwf   0x68             	MOVWF	r0x1009
000fcf   0c68     rrf     0x68, 0x0        	RRF	r0x1009,W
000fd0   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000fd1   2fd5     goto    0x07d5           	GOTO	_00016_DS_
000fd2   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000fd3   1303     bcf     0x03, 0x6        
000fd4   139f     bcf     0x1f, 0x7        	BCF	_ADCON0bits,7
                                           _00016_DS_
000fd5   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000fd6   2fda     goto    0x07da           	GOTO	_00017_DS_
000fd7   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000fd8   1303     bcf     0x03, 0x6        
000fd9   179f     bsf     0x1f, 0x7        	BSF	_ADCON0bits,7
                                           _00017_DS_
000fda   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
000fdb   1303     bcf     0x03, 0x6        
000fdc   0866     movf    0x66, 0x0        	MOVF	r0x1007,W
000fdd   3901     andlw   0x01             	ANDLW	0x01
000fde   00e7     movwf   0x67             	MOVWF	r0x1008
000fdf   00e6     movwf   0x66             	MOVWF	r0x1007
000fe0   0c66     rrf     0x66, 0x0        	RRF	r0x1007,W
000fe1   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000fe2   2fe6     goto    0x07e6           	GOTO	_00018_DS_
000fe3   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000fe4   1303     bcf     0x03, 0x6        
000fe5   131f     bcf     0x1f, 0x6        	BCF	_ADCON0bits,6
                                           _00018_DS_
000fe6   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000fe7   2feb     goto    0x07eb           	GOTO	_00019_DS_
000fe8   1283     bcf     0x03, 0x5        	BANKSEL	_ADCON0bits
000fe9   1303     bcf     0x03, 0x6        
000fea   171f     bsf     0x1f, 0x6        	BSF	_ADCON0bits,6
                                           _00019_DS_
                                           ;	.line	9; "adc.c"	ADC_CONFIGURE_PORT(2);
000feb   1683     bsf     0x03, 0x5        	BANKSEL	_ADCON1bits
000fec   1303     bcf     0x03, 0x6        
000fed   119f     bcf     0x1f, 0x3        	BCF	_ADCON1bits,3
000fee   111f     bcf     0x1f, 0x2        	BCF	_ADCON1bits,2
000fef   149f     bsf     0x1f, 0x1        	BSF	_ADCON1bits,1
000ff0   101f     bcf     0x1f, 0x0        	BCF	_ADCON1bits,0
000ff1   0008     return                   	RETURN	
                                           ; exit point of _ADC_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  162+   43 =   205 instructions (  496 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:21 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"cooler.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_LED_Init
                                           	extern	_LED_GetState
                                           	extern	_LED_Update
                                           	extern	_Heater_Init
                                           	extern	_Heater_update
                                           	extern	_Heater_GetState
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pex_update
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_SettingMode_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_Cooler_update
                                           	global	_Cooler_GetState
                                           	global	_Cooler_SetState
                                           	global	_Cooler_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_cooler	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Cooler_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _Cooler_SetState
                                           ;   _Cooler_SetState
                                           ;1 compiler assigned register :
                                           ;   r0x1007
                                           ;; Starting pCode block
                                           _Cooler_update	;Function start
                                           ; 2 exit points
                                           ;	.line	22; "cooler.c"	Cooler_SetState(Flags.Cooler_Operation);
001892   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001893   1703     bsf     0x03, 0x6        
001894   0832     movf    0x32, 0x0        	MOVF	(_Flags + 3),W
                                           ;;1	MOVWF	r0x1007
001895   20a0     call    0x00a0           	CALL	_Cooler_SetState
001896   0008     return                   	RETURN	
                                           ; exit point of _Cooler_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Cooler_GetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;2 compiler assigned registers:
                                           ;   STK00
                                           ;   r0x1008
                                           ;; Starting pCode block
                                           _Cooler_GetState	;Function start
                                           ; 2 exit points
                                           ;	.line	16; "cooler.c"	return GPIO_GetPortPinState(PORT_C,2);
001897   3002     movlw   0x02             	MOVLW	0x02
001898   00ff     movwf   0x7f             	MOVWF	STK00
001899   3002     movlw   0x02             	MOVLW	0x02
00189a   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
00189b   120a     bcf     0x0a, 0x4        
00189c   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
00189d   158a     bsf     0x0a, 0x3        	PAGESEL	$
00189e   160a     bsf     0x0a, 0x4        
                                           ;;1	MOVWF	r0x1008
00189f   0008     return                   	RETURN	
                                           ; exit point of _Cooler_GetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Cooler_SetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;3 compiler assigned registers:
                                           ;   r0x1006
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _Cooler_SetState	;Function start
                                           ; 2 exit points
                                           ;;1	MOVWF	r0x1006
                                           ;	.line	10; "cooler.c"	GPIO_SetPortPinState(PORT_C,2,state);
0018a0   00fe     movwf   0x7e             	MOVWF	STK01
0018a1   3002     movlw   0x02             	MOVLW	0x02
0018a2   00ff     movwf   0x7f             	MOVWF	STK00
0018a3   3002     movlw   0x02             	MOVLW	0x02
0018a4   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
0018a5   120a     bcf     0x0a, 0x4        
0018a6   2553     call    0x0553           	CALL	_GPIO_SetPortPinState
0018a7   158a     bsf     0x0a, 0x3        	PAGESEL	$
0018a8   160a     bsf     0x0a, 0x4        
0018a9   0008     return                   	RETURN	
                                           ; exit point of _Cooler_SetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Cooler_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;2 compiler assigned registers:
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _Cooler_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	5; "cooler.c"	GPIO_InitPortPin(PORT_C,2,GPIO_OUT);
0018aa   3000     movlw   0x00             	MOVLW	0x00
0018ab   00fe     movwf   0x7e             	MOVWF	STK01
0018ac   3002     movlw   0x02             	MOVLW	0x02
0018ad   00ff     movwf   0x7f             	MOVWF	STK00
0018ae   3002     movlw   0x02             	MOVLW	0x02
0018af   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
0018b0   120a     bcf     0x0a, 0x4        
0018b1   265f     call    0x065f           	CALL	_GPIO_InitPortPin
0018b2   158a     bsf     0x0a, 0x3        	PAGESEL	$
0018b3   160a     bsf     0x0a, 0x4        
0018b4   0008     return                   	RETURN	
                                           ; exit point of _Cooler_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   21+    7 =    28 instructions (   70 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:21 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"eeprom_ext.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_LED_Init
                                           	extern	_LED_GetState
                                           	extern	_LED_Update
                                           	extern	_Heater_Init
                                           	extern	_Heater_update
                                           	extern	_Heater_GetState
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_SettingMode_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_e2pex_update
                                           	global	_e2pext_w
                                           	global	_e2pext_r
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_eeprom_ext_0	udata
                                           r0x1019	res	1
                                           r0x1018	res	1
                                           r0x101A	res	1
                                           r0x101B	res	1
                                           r0x101F	res	1
                                           r0x101E	res	1
                                           r0x1020	res	1
                                           r0x1021	res	1
                                           r0x1022	res	1
                                           r0x1023	res	1
                                           r0x1024	res	1
                                           r0x1025	res	1
                                           r0x1026	res	1
                                           r0x1027	res	1
                                           r0x1028	res	1
                                           r0x1029	res	1
                                           r0x102A	res	1
                                           r0x102B	res	1
                                           r0x102C	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_eeprom_ext	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _e2pex_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _e2pext_r
                                           ;   _e2pext_w
                                           ;   _e2pext_w
                                           ;   _e2pext_w
                                           ;   _e2pext_r
                                           ;   _e2pext_r
                                           ;   _e2pext_w
                                           ;   _e2pext_w
                                           ;   _e2pext_w
                                           ;   _e2pext_r
                                           ;7 compiler assigned registers:
                                           ;   r0x1028
                                           ;   STK00
                                           ;   STK01
                                           ;   r0x1029
                                           ;   r0x102A
                                           ;   r0x102B
                                           ;   r0x102C
                                           ;; Starting pCode block
                                           _e2pex_update	;Function start
                                           ; 2 exit points
                                           ;	.line	75; "eeprom_ext.c"	if(Flags.e2prom_flag == 0)//check this condition once at runtime.This condition is for limiting the execution time of this fn.
001000   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001001   1703     bsf     0x03, 0x6        
001002   0834     movf    0x34, 0x0        	MOVF	(_Flags + 5),W
001003   1683     bsf     0x03, 0x5        	BANKSEL	r0x1028
001004   1303     bcf     0x03, 0x6        
001005   00c6     movwf   0x46             	MOVWF	r0x1028
001006   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001007   2823     goto    0x0023           	GOTO	_00147_DS_
                                           ;	.line	77; "eeprom_ext.c"	if(e2pext_r(43) == 0xFF)//For the first use,check address 41 if initialized with 0XFF ,write 60 in set_value storing location.
001008   302b     movlw   0x2b             	MOVLW	0x2b
001009   00ff     movwf   0x7f             	MOVWF	STK00
00100a   3000     movlw   0x00             	MOVLW	0x00
00100b   210b     call    0x010b           	CALL	_e2pext_r
00100c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1028
00100d   1303     bcf     0x03, 0x6        
00100e   00c6     movwf   0x46             	MOVWF	r0x1028
00100f   3aff     xorlw   0xff             	XORLW	0xff
001010   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001011   281e     goto    0x001e           	GOTO	_00140_DS_
                                           ;	.line	79; "eeprom_ext.c"	e2pext_w(20,60);
001012   303c     movlw   0x3c             	MOVLW	0x3c
001013   00fe     movwf   0x7e             	MOVWF	STK01
001014   3014     movlw   0x14             	MOVLW	0x14
001015   00ff     movwf   0x7f             	MOVWF	STK00
001016   3000     movlw   0x00             	MOVLW	0x00
001017   20a5     call    0x00a5           	CALL	_e2pext_w
                                           ;	.line	80; "eeprom_ext.c"	e2pext_w(43,0);
001018   3000     movlw   0x00             	MOVLW	0x00
001019   00fe     movwf   0x7e             	MOVWF	STK01
00101a   302b     movlw   0x2b             	MOVLW	0x2b
00101b   00ff     movwf   0x7f             	MOVWF	STK00
00101c   3000     movlw   0x00             	MOVLW	0x00
00101d   20a5     call    0x00a5           	CALL	_e2pext_w
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           _00140_DS_
                                           ;	.line	82; "eeprom_ext.c"	Flags.e2prom_flag = 1 ;
00101e   3001     movlw   0x01             	MOVLW	0x01
00101f   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001020   1703     bsf     0x03, 0x6        
001021   00b4     movwf   0x34             	MOVWF	(_Flags + 5)
001022   28a4     goto    0x00a4           	GOTO	_00149_DS_
                                           _00147_DS_
                                           ;	.line	86; "eeprom_ext.c"	if (Counters.e2prom_count >= 250 && Counters.FixedMode_counter == 250)//check if the system get into the fixed mode
001023   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001024   1703     bsf     0x03, 0x6        
001025   0816     movf    0x16, 0x0        	MOVF	(_Counters + 6),W
001026   1683     bsf     0x03, 0x5        	BANKSEL	r0x1028
001027   1303     bcf     0x03, 0x6        
001028   00c6     movwf   0x46             	MOVWF	r0x1028
001029   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00102a   1703     bsf     0x03, 0x6        
00102b   0817     movf    0x17, 0x0        	MOVF	(_Counters + 7),W
00102c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1029
00102d   1303     bcf     0x03, 0x6        
00102e   00c7     movwf   0x47             	MOVWF	r0x1029
00102f   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001030   1703     bsf     0x03, 0x6        
001031   0818     movf    0x18, 0x0        	MOVF	(_Counters + 8),W
001032   1683     bsf     0x03, 0x5        	BANKSEL	r0x102A
001033   1303     bcf     0x03, 0x6        
001034   00c8     movwf   0x48             	MOVWF	r0x102A
001035   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001036   1703     bsf     0x03, 0x6        
001037   0819     movf    0x19, 0x0        	MOVF	(_Counters + 9),W
001038   1683     bsf     0x03, 0x5        	BANKSEL	r0x102B
001039   1303     bcf     0x03, 0x6        
00103a   00c9     movwf   0x49             	MOVWF	r0x102B
                                           ;;unsigned compare: left < lit(0xFA=250), size=4
00103b   3000     movlw   0x00             	MOVLW	0x00
00103c   0249     subwf   0x49, 0x0        	SUBWF	r0x102B,W
00103d   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00103e   2849     goto    0x0049           	GOTO	_00166_DS_
00103f   3000     movlw   0x00             	MOVLW	0x00
001040   0248     subwf   0x48, 0x0        	SUBWF	r0x102A,W
001041   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001042   2849     goto    0x0049           	GOTO	_00166_DS_
001043   3000     movlw   0x00             	MOVLW	0x00
001044   0247     subwf   0x47, 0x0        	SUBWF	r0x1029,W
001045   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001046   2849     goto    0x0049           	GOTO	_00166_DS_
001047   30fa     movlw   0xfa             	MOVLW	0xfa
001048   0246     subwf   0x46, 0x0        	SUBWF	r0x1028,W
                                           _00166_DS_
001049   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00104a   2884     goto    0x0084           	GOTO	_00142_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00104b   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00104c   1703     bsf     0x03, 0x6        
00104d   0810     movf    0x10, 0x0        	MOVF	(_Counters + 0),W
00104e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1028
00104f   1303     bcf     0x03, 0x6        
001050   00c6     movwf   0x46             	MOVWF	r0x1028
001051   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001052   1703     bsf     0x03, 0x6        
001053   0811     movf    0x11, 0x0        	MOVF	(_Counters + 1),W
001054   1683     bsf     0x03, 0x5        	BANKSEL	r0x1029
001055   1303     bcf     0x03, 0x6        
001056   00c7     movwf   0x47             	MOVWF	r0x1029
001057   0846     movf    0x46, 0x0        	MOVF	r0x1028,W
001058   3afa     xorlw   0xfa             	XORLW	0xfa
001059   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00105a   2884     goto    0x0084           	GOTO	_00142_DS_
00105b   0847     movf    0x47, 0x0        	MOVF	r0x1029,W
00105c   3a00     xorlw   0x00             	XORLW	0x00
00105d   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00105e   2884     goto    0x0084           	GOTO	_00142_DS_
                                           ;	.line	88; "eeprom_ext.c"	e2pext_w(20,Readings.Set_value);
00105f   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
001060   1703     bsf     0x03, 0x6        
001061   081e     movf    0x1e, 0x0        	MOVF	(_Readings + 4),W
001062   1683     bsf     0x03, 0x5        	BANKSEL	r0x1028
001063   1303     bcf     0x03, 0x6        
001064   00c6     movwf   0x46             	MOVWF	r0x1028
001065   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
001066   1703     bsf     0x03, 0x6        
001067   081f     movf    0x1f, 0x0        	MOVF	(_Readings + 5),W
001068   1683     bsf     0x03, 0x5        	BANKSEL	r0x1029
001069   1303     bcf     0x03, 0x6        
00106a   00c7     movwf   0x47             	MOVWF	r0x1029
00106b   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
00106c   1703     bsf     0x03, 0x6        
00106d   0820     movf    0x20, 0x0        	MOVF	(_Readings + 6),W
00106e   1683     bsf     0x03, 0x5        	BANKSEL	r0x102A
00106f   1303     bcf     0x03, 0x6        
001070   00c8     movwf   0x48             	MOVWF	r0x102A
001071   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
001072   1703     bsf     0x03, 0x6        
001073   0821     movf    0x21, 0x0        	MOVF	(_Readings + 7),W
001074   1683     bsf     0x03, 0x5        	BANKSEL	r0x102B
001075   1303     bcf     0x03, 0x6        
001076   00c9     movwf   0x49             	MOVWF	r0x102B
001077   0846     movf    0x46, 0x0        	MOVF	r0x1028,W
001078   00ca     movwf   0x4a             	MOVWF	r0x102C
001079   00fe     movwf   0x7e             	MOVWF	STK01
00107a   3014     movlw   0x14             	MOVLW	0x14
00107b   00ff     movwf   0x7f             	MOVWF	STK00
00107c   3000     movlw   0x00             	MOVLW	0x00
00107d   20a5     call    0x00a5           	CALL	_e2pext_w
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;	.line	89; "eeprom_ext.c"	Counters.e2prom_count = 0;
00107e   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00107f   1703     bsf     0x03, 0x6        
001080   0196     clrf    0x16             	CLRF	(_Counters + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
001081   0197     clrf    0x17             	CLRF	(_Counters + 7)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
001082   0198     clrf    0x18             	CLRF	(_Counters + 8)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
001083   0199     clrf    0x19             	CLRF	(_Counters + 9)
                                           _00142_DS_
                                           ;	.line	91; "eeprom_ext.c"	if(Flags.Operation_Flag == 0) //check if the system get into the OFF mode and assign the last set value to the current set value
001084   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001085   1703     bsf     0x03, 0x6        
001086   0833     movf    0x33, 0x0        	MOVF	(_Flags + 4),W
001087   1683     bsf     0x03, 0x5        	BANKSEL	r0x1028
001088   1303     bcf     0x03, 0x6        
001089   00c6     movwf   0x46             	MOVWF	r0x1028
00108a   0846     movf    0x46, 0x0        	MOVF	r0x1028,W
00108b   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00108c   28a4     goto    0x00a4           	GOTO	_00149_DS_
                                           ;	.line	93; "eeprom_ext.c"	Readings.Set_value = e2pext_r(20);
00108d   3014     movlw   0x14             	MOVLW	0x14
00108e   00ff     movwf   0x7f             	MOVWF	STK00
00108f   3000     movlw   0x00             	MOVLW	0x00
001090   210b     call    0x010b           	CALL	_e2pext_r
001091   1683     bsf     0x03, 0x5        	BANKSEL	r0x1028
001092   1303     bcf     0x03, 0x6        
001093   00c6     movwf   0x46             	MOVWF	r0x1028
001094   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
001095   1703     bsf     0x03, 0x6        
001096   009e     movwf   0x1e             	MOVWF	(_Readings + 4)
001097   1683     bsf     0x03, 0x5        	BANKSEL	r0x1029
001098   1303     bcf     0x03, 0x6        
001099   00c7     movwf   0x47             	MOVWF	r0x1029
00109a   01c8     clrf    0x48             	CLRF	r0x102A
00109b   01c9     clrf    0x49             	CLRF	r0x102B
00109c   01ca     clrf    0x4a             	CLRF	r0x102C
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;;106	MOVF	r0x1029,W
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
00109d   3000     movlw   0x00             	MOVLW	0x00
00109e   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
00109f   1703     bsf     0x03, 0x6        
0010a0   009f     movwf   0x1f             	MOVWF	(_Readings + 5)
0010a1   00a0     movwf   0x20             	MOVWF	(_Readings + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
0010a2   3000     movlw   0x00             	MOVLW	0x00
0010a3   00a1     movwf   0x21             	MOVWF	(_Readings + 7)
                                           _00149_DS_
0010a4   0008     return                   	RETURN	
                                           ; exit point of _e2pex_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _e2pext_w	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_Begin
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_End
                                           ;   _e2pext_r
                                           ;   _I2C_Begin
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_End
                                           ;   _e2pext_r
                                           ;12 compiler assigned registers:
                                           ;   r0x101E
                                           ;   STK00
                                           ;   r0x101F
                                           ;   STK01
                                           ;   r0x1020
                                           ;   r0x1021
                                           ;   r0x1022
                                           ;   r0x1023
                                           ;   r0x1024
                                           ;   r0x1025
                                           ;   r0x1026
                                           ;   r0x1027
                                           ;; Starting pCode block
                                           _e2pext_w	;Function start
                                           ; 2 exit points
                                           ;	.line	39; "eeprom_ext.c"	void e2pext_w(unsigned int addr, unsigned char val)
0010a5   1683     bsf     0x03, 0x5        	BANKSEL	r0x101E
0010a6   1303     bcf     0x03, 0x6        
0010a7   00bd     movwf   0x3d             	MOVWF	r0x101E
0010a8   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0010a9   00bc     movwf   0x3c             	MOVWF	r0x101F
0010aa   087e     movf    0x7e, 0x0        	MOVF	STK01,W
                                           ;	.line	46; "eeprom_ext.c"	tmp=val;
0010ab   00be     movwf   0x3e             	MOVWF	r0x1020
0010ac   00bf     movwf   0x3f             	MOVWF	r0x1021
0010ad   01c0     clrf    0x40             	CLRF	r0x1022
                                           ;	.line	47; "eeprom_ext.c"	ah=(addr&0x0100)>>8;
0010ae   01be     clrf    0x3e             	CLRF	r0x1020
0010af   3001     movlw   0x01             	MOVLW	0x01
0010b0   053d     andwf   0x3d, 0x0        	ANDWF	r0x101E,W
0010b1   00c1     movwf   0x41             	MOVWF	r0x1023
0010b2   00be     movwf   0x3e             	MOVWF	r0x1020
0010b3   00c2     movwf   0x42             	MOVWF	r0x1024
0010b4   01c3     clrf    0x43             	CLRF	r0x1025
                                           ;;107	MOVF	r0x1024,W
                                           ;;103	MOVF	r0x101F,W
                                           ;	.line	48; "eeprom_ext.c"	al=addr&0x00FF;
0010b5   01c3     clrf    0x43             	CLRF	r0x1025
                                           ;;102	MOVF	r0x1024,W
0010b6   083c     movf    0x3c, 0x0        	MOVF	r0x101F,W
0010b7   00c2     movwf   0x42             	MOVWF	r0x1024
0010b8   00c1     movwf   0x41             	MOVWF	r0x1023
                                           ;	.line	51; "eeprom_ext.c"	do
0010b9   01c2     clrf    0x42             	CLRF	r0x1024
                                           _00119_DS_
                                           ;	.line	53; "eeprom_ext.c"	I2C_Begin();
0010ba   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Begin
0010bb   120a     bcf     0x0a, 0x4        
0010bc   2793     call    0x0793           	CALL	_I2C_Begin
0010bd   118a     bcf     0x0a, 0x3        	PAGESEL	$
0010be   160a     bsf     0x0a, 0x4        
                                           ;	.line	54; "eeprom_ext.c"	if(ah)
0010bf   1683     bsf     0x03, 0x5        	BANKSEL	r0x1020
0010c0   1303     bcf     0x03, 0x6        
0010c1   083e     movf    0x3e, 0x0        	MOVF	r0x1020,W
0010c2   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0010c3   28cd     goto    0x00cd           	GOTO	_00116_DS_
                                           ;	.line	56; "eeprom_ext.c"	I2C_Write(0xA2);
0010c4   30a2     movlw   0xa2             	MOVLW	0xa2
0010c5   00ff     movwf   0x7f             	MOVWF	STK00
0010c6   3000     movlw   0x00             	MOVLW	0x00
0010c7   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Write
0010c8   120a     bcf     0x0a, 0x4        
0010c9   2782     call    0x0782           	CALL	_I2C_Write
0010ca   118a     bcf     0x0a, 0x3        	PAGESEL	$
0010cb   160a     bsf     0x0a, 0x4        
0010cc   28d5     goto    0x00d5           	GOTO	_00117_DS_
                                           _00116_DS_
                                           ;	.line	60; "eeprom_ext.c"	I2C_Write(0xA0);
0010cd   30a0     movlw   0xa0             	MOVLW	0xa0
0010ce   00ff     movwf   0x7f             	MOVWF	STK00
0010cf   3000     movlw   0x00             	MOVLW	0x00
0010d0   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Write
0010d1   120a     bcf     0x0a, 0x4        
0010d2   2782     call    0x0782           	CALL	_I2C_Write
0010d3   118a     bcf     0x0a, 0x3        	PAGESEL	$
0010d4   160a     bsf     0x0a, 0x4        
                                           ;;105	MOVF	r0x1023,W
                                           _00117_DS_
                                           ;	.line	62; "eeprom_ext.c"	I2C_Write(al);
0010d5   1683     bsf     0x03, 0x5        	BANKSEL	r0x1026
0010d6   1303     bcf     0x03, 0x6        
0010d7   01c4     clrf    0x44             	CLRF	r0x1026
                                           ;;104	MOVF	r0x1025,W
0010d8   0841     movf    0x41, 0x0        	MOVF	r0x1023,W
0010d9   00c3     movwf   0x43             	MOVWF	r0x1025
0010da   00ff     movwf   0x7f             	MOVWF	STK00
0010db   3000     movlw   0x00             	MOVLW	0x00
0010dc   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Write
0010dd   120a     bcf     0x0a, 0x4        
0010de   2782     call    0x0782           	CALL	_I2C_Write
0010df   118a     bcf     0x0a, 0x3        	PAGESEL	$
0010e0   160a     bsf     0x0a, 0x4        
                                           ;	.line	63; "eeprom_ext.c"	I2C_Write(tmp);
0010e1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1021
0010e2   1303     bcf     0x03, 0x6        
0010e3   083f     movf    0x3f, 0x0        	MOVF	r0x1021,W
0010e4   00ff     movwf   0x7f             	MOVWF	STK00
0010e5   0840     movf    0x40, 0x0        	MOVF	r0x1022,W
0010e6   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Write
0010e7   120a     bcf     0x0a, 0x4        
0010e8   2782     call    0x0782           	CALL	_I2C_Write
0010e9   118a     bcf     0x0a, 0x3        	PAGESEL	$
0010ea   160a     bsf     0x0a, 0x4        
                                           ;	.line	64; "eeprom_ext.c"	I2C_End();
0010eb   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_End
0010ec   120a     bcf     0x0a, 0x4        
0010ed   278e     call    0x078e           	CALL	_I2C_End
0010ee   118a     bcf     0x0a, 0x3        	PAGESEL	$
0010ef   160a     bsf     0x0a, 0x4        
                                           ;	.line	66; "eeprom_ext.c"	nt++;
0010f0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1024
0010f1   1303     bcf     0x03, 0x6        
0010f2   0ac2     incf    0x42, 0x1        	INCF	r0x1024,F
                                           ;	.line	68; "eeprom_ext.c"	while((tmp != e2pext_r(addr))&&(nt < 10));
0010f3   083c     movf    0x3c, 0x0        	MOVF	r0x101F,W
0010f4   00ff     movwf   0x7f             	MOVWF	STK00
0010f5   083d     movf    0x3d, 0x0        	MOVF	r0x101E,W
0010f6   210b     call    0x010b           	CALL	_e2pext_r
0010f7   1683     bsf     0x03, 0x5        	BANKSEL	r0x1025
0010f8   1303     bcf     0x03, 0x6        
0010f9   00c3     movwf   0x43             	MOVWF	r0x1025
0010fa   00c4     movwf   0x44             	MOVWF	r0x1026
0010fb   01c5     clrf    0x45             	CLRF	r0x1027
0010fc   0844     movf    0x44, 0x0        	MOVF	r0x1026,W
0010fd   063f     xorwf   0x3f, 0x0        	XORWF	r0x1021,W
0010fe   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0010ff   2904     goto    0x0104           	GOTO	_00134_DS_
001100   0845     movf    0x45, 0x0        	MOVF	r0x1027,W
001101   0640     xorwf   0x40, 0x0        	XORWF	r0x1022,W
001102   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001103   290a     goto    0x010a           	GOTO	_00122_DS_
                                           _00134_DS_
001104   300a     movlw   0x0a             	MOVLW	0x0a
001105   1683     bsf     0x03, 0x5        	BANKSEL	r0x1024
001106   1303     bcf     0x03, 0x6        
001107   0242     subwf   0x42, 0x0        	SUBWF	r0x1024,W
001108   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
001109   28ba     goto    0x00ba           	GOTO	_00119_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           _00122_DS_
00110a   0008     return                   	RETURN	
                                           ; exit point of _e2pext_w
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _e2pext_r	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_Begin
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_Begin
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_Read
                                           ;   _I2C_End
                                           ;   _I2C_Begin
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_Begin
                                           ;   _I2C_Write
                                           ;   _I2C_Write
                                           ;   _I2C_Read
                                           ;   _I2C_End
                                           ;7 compiler assigned registers:
                                           ;   r0x1018
                                           ;   STK00
                                           ;   r0x1019
                                           ;   r0x101A
                                           ;   r0x101B
                                           ;   r0x101C
                                           ;   r0x101D
                                           ;; Starting pCode block
                                           _e2pext_r	;Function start
                                           ; 2 exit points
                                           ;	.line	3; "eeprom_ext.c"	unsigned char e2pext_r(unsigned int addr)
00110b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
00110c   1303     bcf     0x03, 0x6        
00110d   00b9     movwf   0x39             	MOVWF	r0x1018
00110e   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00110f   00b8     movwf   0x38             	MOVWF	r0x1019
                                           ;	.line	9; "eeprom_ext.c"	ah=(addr&0x0100)>>8;
001110   01ba     clrf    0x3a             	CLRF	r0x101A
001111   3001     movlw   0x01             	MOVLW	0x01
001112   0539     andwf   0x39, 0x0        	ANDWF	r0x1018,W
001113   00bb     movwf   0x3b             	MOVWF	r0x101B
001114   00ba     movwf   0x3a             	MOVWF	r0x101A
                                           ;;1	MOVWF	r0x101C
                                           ;;1	CLRF	r0x101D
                                           ;;99	MOVF	r0x101C,W
                                           ;	.line	10; "eeprom_ext.c"	al=addr&0x00FF;
001115   01b9     clrf    0x39             	CLRF	r0x1018
001116   0838     movf    0x38, 0x0        	MOVF	r0x1019,W
001117   00bb     movwf   0x3b             	MOVWF	r0x101B
                                           ;	.line	12; "eeprom_ext.c"	I2C_Begin();
001118   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Begin
001119   120a     bcf     0x0a, 0x4        
00111a   2793     call    0x0793           	CALL	_I2C_Begin
00111b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00111c   160a     bsf     0x0a, 0x4        
                                           ;	.line	13; "eeprom_ext.c"	if(ah)
00111d   1683     bsf     0x03, 0x5        	BANKSEL	r0x101A
00111e   1303     bcf     0x03, 0x6        
00111f   083a     movf    0x3a, 0x0        	MOVF	r0x101A,W
001120   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001121   292b     goto    0x012b           	GOTO	_00106_DS_
                                           ;	.line	15; "eeprom_ext.c"	I2C_Write(0xA2);
001122   30a2     movlw   0xa2             	MOVLW	0xa2
001123   00ff     movwf   0x7f             	MOVWF	STK00
001124   3000     movlw   0x00             	MOVLW	0x00
001125   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Write
001126   120a     bcf     0x0a, 0x4        
001127   2782     call    0x0782           	CALL	_I2C_Write
001128   118a     bcf     0x0a, 0x3        	PAGESEL	$
001129   160a     bsf     0x0a, 0x4        
00112a   2933     goto    0x0133           	GOTO	_00107_DS_
                                           _00106_DS_
                                           ;	.line	19; "eeprom_ext.c"	I2C_Write(0xA0);
00112b   30a0     movlw   0xa0             	MOVLW	0xa0
00112c   00ff     movwf   0x7f             	MOVWF	STK00
00112d   3000     movlw   0x00             	MOVLW	0x00
00112e   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Write
00112f   120a     bcf     0x0a, 0x4        
001130   2782     call    0x0782           	CALL	_I2C_Write
001131   118a     bcf     0x0a, 0x3        	PAGESEL	$
001132   160a     bsf     0x0a, 0x4        
                                           ;;101	MOVF	r0x101B,W
                                           _00107_DS_
                                           ;	.line	21; "eeprom_ext.c"	I2C_Write(al);
001133   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
001134   1303     bcf     0x03, 0x6        
001135   01b9     clrf    0x39             	CLRF	r0x1018
                                           ;;100	MOVF	r0x1019,W
001136   083b     movf    0x3b, 0x0        	MOVF	r0x101B,W
001137   00b8     movwf   0x38             	MOVWF	r0x1019
001138   00ff     movwf   0x7f             	MOVWF	STK00
001139   3000     movlw   0x00             	MOVLW	0x00
00113a   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Write
00113b   120a     bcf     0x0a, 0x4        
00113c   2782     call    0x0782           	CALL	_I2C_Write
00113d   118a     bcf     0x0a, 0x3        	PAGESEL	$
00113e   160a     bsf     0x0a, 0x4        
                                           ;	.line	23; "eeprom_ext.c"	I2C_Begin();
00113f   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Begin
001140   120a     bcf     0x0a, 0x4        
001141   2793     call    0x0793           	CALL	_I2C_Begin
001142   118a     bcf     0x0a, 0x3        	PAGESEL	$
001143   160a     bsf     0x0a, 0x4        
                                           ;	.line	24; "eeprom_ext.c"	if(ah)
001144   1683     bsf     0x03, 0x5        	BANKSEL	r0x101A
001145   1303     bcf     0x03, 0x6        
001146   083a     movf    0x3a, 0x0        	MOVF	r0x101A,W
001147   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001148   2952     goto    0x0152           	GOTO	_00109_DS_
                                           ;	.line	26; "eeprom_ext.c"	I2C_Write(0xA3);
001149   30a3     movlw   0xa3             	MOVLW	0xa3
00114a   00ff     movwf   0x7f             	MOVWF	STK00
00114b   3000     movlw   0x00             	MOVLW	0x00
00114c   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Write
00114d   120a     bcf     0x0a, 0x4        
00114e   2782     call    0x0782           	CALL	_I2C_Write
00114f   118a     bcf     0x0a, 0x3        	PAGESEL	$
001150   160a     bsf     0x0a, 0x4        
001151   295a     goto    0x015a           	GOTO	_00110_DS_
                                           _00109_DS_
                                           ;	.line	30; "eeprom_ext.c"	I2C_Write(0xA1);
001152   30a1     movlw   0xa1             	MOVLW	0xa1
001153   00ff     movwf   0x7f             	MOVWF	STK00
001154   3000     movlw   0x00             	MOVLW	0x00
001155   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Write
001156   120a     bcf     0x0a, 0x4        
001157   2782     call    0x0782           	CALL	_I2C_Write
001158   118a     bcf     0x0a, 0x3        	PAGESEL	$
001159   160a     bsf     0x0a, 0x4        
                                           _00110_DS_
                                           ;	.line	32; "eeprom_ext.c"	ret=I2C_Read(1);
00115a   3001     movlw   0x01             	MOVLW	0x01
00115b   00ff     movwf   0x7f             	MOVWF	STK00
00115c   3000     movlw   0x00             	MOVLW	0x00
00115d   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Read
00115e   120a     bcf     0x0a, 0x4        
00115f   2754     call    0x0754           	CALL	_I2C_Read
001160   118a     bcf     0x0a, 0x3        	PAGESEL	$
001161   160a     bsf     0x0a, 0x4        
001162   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
001163   1303     bcf     0x03, 0x6        
001164   00b9     movwf   0x39             	MOVWF	r0x1018
001165   087f     movf    0x7f, 0x0        	MOVF	STK00,W
001166   00b8     movwf   0x38             	MOVWF	r0x1019
001167   00ba     movwf   0x3a             	MOVWF	r0x101A
                                           ;	.line	33; "eeprom_ext.c"	I2C_End();
001168   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_End
001169   120a     bcf     0x0a, 0x4        
00116a   278e     call    0x078e           	CALL	_I2C_End
00116b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00116c   160a     bsf     0x0a, 0x4        
                                           ;	.line	35; "eeprom_ext.c"	return ret;
00116d   1683     bsf     0x03, 0x5        	BANKSEL	r0x101A
00116e   1303     bcf     0x03, 0x6        
00116f   083a     movf    0x3a, 0x0        	MOVF	r0x101A,W
001170   0008     return                   	RETURN	
                                           ; exit point of _e2pext_r
                                           
                                           
                                           ;	code size estimation:
                                           ;	  221+   74 =   295 instructions (  738 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:22 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"gpio.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_GPIO_GetPortPinState
                                           	global	_GPIO_SetPortState
                                           	global	_GPIO_SetPortPinState
                                           	global	_GPIO_Update
                                           	global	_GPIO_InitPort
                                           	global	_GPIO_InitPortPin
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_gpio_0	udata
                                           r0x1011	res	1
                                           r0x1012	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           r0x1015	res	1
                                           r0x1016	res	1
                                           r0x1017	res	1
                                           r0x1006	res	1
                                           r0x1007	res	1
                                           r0x1008	res	1
                                           r0x1009	res	1
                                           r0x100A	res	1
                                           r0x100B	res	1
                                           r0x100C	res	1
                                           r0x100E	res	1
                                           r0x100D	res	1
                                           r0x100F	res	1
                                           r0x1010	res	1
                                           r0x1000	res	1
                                           r0x1001	res	1
                                           r0x1002	res	1
                                           r0x1003	res	1
                                           r0x1004	res	1
                                           r0x1005	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_gpio	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_GetPortPinState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;7 compiler assigned registers:
                                           ;   r0x1000
                                           ;   STK00
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;   r0x1005
                                           ;; Starting pCode block
                                           _GPIO_GetPortPinState	;Function start
                                           ; 2 exit points
                                           ;	.line	74; "gpio.c"	unsigned char GPIO_GetPortPinState(tPort port, unsigned char pin)
0003f2   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
0003f3   1303     bcf     0x03, 0x6        
0003f4   00b2     movwf   0x32             	MOVWF	r0x1000
0003f5   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0003f6   00b3     movwf   0x33             	MOVWF	r0x1001
                                           ;	.line	76; "gpio.c"	unsigned char ret = 0;
0003f7   01b4     clrf    0x34             	CLRF	r0x1002
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x5=5), size=1
                                           ;	.line	78; "gpio.c"	switch(port)
0003f8   3005     movlw   0x05             	MOVLW	0x05
0003f9   0232     subwf   0x32, 0x0        	SUBWF	r0x1000,W
0003fa   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
0003fb   2d0d     goto    0x050d           	GOTO	_00212_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
0003fc   3004     movlw   0x04             	MOVLW	HIGH(_00219_DS_)
0003fd   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
0003fe   1303     bcf     0x03, 0x6        
0003ff   008a     movwf   0x0a             	MOVWF	PCLATH
000400   300a     movlw   0x0a             	MOVLW	_00219_DS_
000401   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
000402   1303     bcf     0x03, 0x6        
000403   0732     addwf   0x32, 0x0        	ADDWF	r0x1000,W
000404   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000405   2c09     goto    0x0409           	GOTO	_00001_DS_
000406   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000407   1303     bcf     0x03, 0x6        
000408   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00001_DS_
000409   0082     movwf   0x02             	MOVWF	PCL
                                           _00219_DS_
00040a   2c0f     goto    0x040f           	GOTO	_00206_DS_
00040b   2c42     goto    0x0442           	GOTO	_00207_DS_
00040c   2c75     goto    0x0475           	GOTO	_00208_DS_
00040d   2ca8     goto    0x04a8           	GOTO	_00209_DS_
00040e   2cdb     goto    0x04db           	GOTO	_00210_DS_
                                           _00206_DS_
                                           ;	.line	81; "gpio.c"	ret =  READ_REGISTER_PIN(PORTA, pin);
00040f   3000     movlw   0x00             	MOVLW	0x00
000410   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
000411   1303     bcf     0x03, 0x6        
000412   00b5     movwf   0x35             	MOVWF	r0x1003
000413   3001     movlw   0x01             	MOVLW	0x01
000414   00b2     movwf   0x32             	MOVWF	r0x1000
000415   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
000416   3c00     sublw   0x00             	SUBLW	0x00
000417   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000418   2c20     goto    0x0420           	GOTO	_00221_DS_
                                           _00220_DS_
000419   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
00041a   1303     bcf     0x03, 0x6        
00041b   0db2     rlf     0x32, 0x1        	RLF	r0x1000,F
00041c   0db5     rlf     0x35, 0x1        	RLF	r0x1003,F
00041d   3e01     addlw   0x01             	ADDLW	0x01
00041e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00041f   2c19     goto    0x0419           	GOTO	_00220_DS_
                                           _00221_DS_
000420   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
000421   1303     bcf     0x03, 0x6        
000422   0805     movf    0x05, 0x0        	MOVF	_PORTA,W
000423   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
000424   1303     bcf     0x03, 0x6        
000425   00b6     movwf   0x36             	MOVWF	r0x1004
000426   01b7     clrf    0x37             	CLRF	r0x1005
000427   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
000428   05b2     andwf   0x32, 0x1        	ANDWF	r0x1000,F
000429   3000     movlw   0x00             	MOVLW	0x00
00042a   05b5     andwf   0x35, 0x1        	ANDWF	r0x1003,F
00042b   0835     movf    0x35, 0x0        	MOVF	r0x1003,W
00042c   00b7     movwf   0x37             	MOVWF	r0x1005
00042d   0832     movf    0x32, 0x0        	MOVF	r0x1000,W
00042e   00b6     movwf   0x36             	MOVWF	r0x1004
00042f   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
000430   3c00     sublw   0x00             	SUBLW	0x00
000431   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000432   2c3d     goto    0x043d           	GOTO	_00223_DS_
                                           _00222_DS_
000433   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000434   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
000435   1303     bcf     0x03, 0x6        
000436   1bb7     btfsc   0x37, 0x7        	BTFSC	r0x1005,7
000437   1403     bsf     0x03, 0x0        	BSF	STATUS,0
000438   0cb7     rrf     0x37, 0x1        	RRF	r0x1005,F
000439   0cb6     rrf     0x36, 0x1        	RRF	r0x1004,F
00043a   3e01     addlw   0x01             	ADDLW	0x01
00043b   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00043c   2c33     goto    0x0433           	GOTO	_00222_DS_
                                           _00223_DS_
00043d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
00043e   1303     bcf     0x03, 0x6        
00043f   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
000440   00b4     movwf   0x34             	MOVWF	r0x1002
                                           ;	.line	82; "gpio.c"	break;
000441   2d0d     goto    0x050d           	GOTO	_00212_DS_
                                           _00207_DS_
                                           ;	.line	84; "gpio.c"	ret =  READ_REGISTER_PIN(PORTB, pin);
000442   3000     movlw   0x00             	MOVLW	0x00
000443   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
000444   1303     bcf     0x03, 0x6        
000445   00b5     movwf   0x35             	MOVWF	r0x1003
000446   3001     movlw   0x01             	MOVLW	0x01
000447   00b2     movwf   0x32             	MOVWF	r0x1000
000448   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
000449   3c00     sublw   0x00             	SUBLW	0x00
00044a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00044b   2c53     goto    0x0453           	GOTO	_00225_DS_
                                           _00224_DS_
00044c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
00044d   1303     bcf     0x03, 0x6        
00044e   0db2     rlf     0x32, 0x1        	RLF	r0x1000,F
00044f   0db5     rlf     0x35, 0x1        	RLF	r0x1003,F
000450   3e01     addlw   0x01             	ADDLW	0x01
000451   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000452   2c4c     goto    0x044c           	GOTO	_00224_DS_
                                           _00225_DS_
000453   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
000454   1303     bcf     0x03, 0x6        
000455   0806     movf    0x06, 0x0        	MOVF	_PORTB,W
000456   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
000457   1303     bcf     0x03, 0x6        
000458   00b6     movwf   0x36             	MOVWF	r0x1004
000459   01b7     clrf    0x37             	CLRF	r0x1005
00045a   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
00045b   05b2     andwf   0x32, 0x1        	ANDWF	r0x1000,F
00045c   3000     movlw   0x00             	MOVLW	0x00
00045d   05b5     andwf   0x35, 0x1        	ANDWF	r0x1003,F
00045e   0835     movf    0x35, 0x0        	MOVF	r0x1003,W
00045f   00b7     movwf   0x37             	MOVWF	r0x1005
000460   0832     movf    0x32, 0x0        	MOVF	r0x1000,W
000461   00b6     movwf   0x36             	MOVWF	r0x1004
000462   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
000463   3c00     sublw   0x00             	SUBLW	0x00
000464   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000465   2c70     goto    0x0470           	GOTO	_00227_DS_
                                           _00226_DS_
000466   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000467   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
000468   1303     bcf     0x03, 0x6        
000469   1bb7     btfsc   0x37, 0x7        	BTFSC	r0x1005,7
00046a   1403     bsf     0x03, 0x0        	BSF	STATUS,0
00046b   0cb7     rrf     0x37, 0x1        	RRF	r0x1005,F
00046c   0cb6     rrf     0x36, 0x1        	RRF	r0x1004,F
00046d   3e01     addlw   0x01             	ADDLW	0x01
00046e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00046f   2c66     goto    0x0466           	GOTO	_00226_DS_
                                           _00227_DS_
000470   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
000471   1303     bcf     0x03, 0x6        
000472   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
000473   00b4     movwf   0x34             	MOVWF	r0x1002
                                           ;	.line	85; "gpio.c"	break;
000474   2d0d     goto    0x050d           	GOTO	_00212_DS_
                                           _00208_DS_
                                           ;	.line	87; "gpio.c"	ret =  READ_REGISTER_PIN(PORTC, pin);
000475   3000     movlw   0x00             	MOVLW	0x00
000476   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
000477   1303     bcf     0x03, 0x6        
000478   00b5     movwf   0x35             	MOVWF	r0x1003
000479   3001     movlw   0x01             	MOVLW	0x01
00047a   00b2     movwf   0x32             	MOVWF	r0x1000
00047b   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
00047c   3c00     sublw   0x00             	SUBLW	0x00
00047d   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00047e   2c86     goto    0x0486           	GOTO	_00229_DS_
                                           _00228_DS_
00047f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
000480   1303     bcf     0x03, 0x6        
000481   0db2     rlf     0x32, 0x1        	RLF	r0x1000,F
000482   0db5     rlf     0x35, 0x1        	RLF	r0x1003,F
000483   3e01     addlw   0x01             	ADDLW	0x01
000484   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000485   2c7f     goto    0x047f           	GOTO	_00228_DS_
                                           _00229_DS_
000486   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
000487   1303     bcf     0x03, 0x6        
000488   0807     movf    0x07, 0x0        	MOVF	_PORTC,W
000489   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
00048a   1303     bcf     0x03, 0x6        
00048b   00b6     movwf   0x36             	MOVWF	r0x1004
00048c   01b7     clrf    0x37             	CLRF	r0x1005
00048d   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
00048e   05b2     andwf   0x32, 0x1        	ANDWF	r0x1000,F
00048f   3000     movlw   0x00             	MOVLW	0x00
000490   05b5     andwf   0x35, 0x1        	ANDWF	r0x1003,F
000491   0835     movf    0x35, 0x0        	MOVF	r0x1003,W
000492   00b7     movwf   0x37             	MOVWF	r0x1005
000493   0832     movf    0x32, 0x0        	MOVF	r0x1000,W
000494   00b6     movwf   0x36             	MOVWF	r0x1004
000495   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
000496   3c00     sublw   0x00             	SUBLW	0x00
000497   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000498   2ca3     goto    0x04a3           	GOTO	_00231_DS_
                                           _00230_DS_
000499   1003     bcf     0x03, 0x0        	BCF	STATUS,0
00049a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
00049b   1303     bcf     0x03, 0x6        
00049c   1bb7     btfsc   0x37, 0x7        	BTFSC	r0x1005,7
00049d   1403     bsf     0x03, 0x0        	BSF	STATUS,0
00049e   0cb7     rrf     0x37, 0x1        	RRF	r0x1005,F
00049f   0cb6     rrf     0x36, 0x1        	RRF	r0x1004,F
0004a0   3e01     addlw   0x01             	ADDLW	0x01
0004a1   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0004a2   2c99     goto    0x0499           	GOTO	_00230_DS_
                                           _00231_DS_
0004a3   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
0004a4   1303     bcf     0x03, 0x6        
0004a5   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
0004a6   00b4     movwf   0x34             	MOVWF	r0x1002
                                           ;	.line	88; "gpio.c"	break;
0004a7   2d0d     goto    0x050d           	GOTO	_00212_DS_
                                           _00209_DS_
                                           ;	.line	90; "gpio.c"	ret =  READ_REGISTER_PIN(PORTD, pin);
0004a8   3000     movlw   0x00             	MOVLW	0x00
0004a9   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
0004aa   1303     bcf     0x03, 0x6        
0004ab   00b5     movwf   0x35             	MOVWF	r0x1003
0004ac   3001     movlw   0x01             	MOVLW	0x01
0004ad   00b2     movwf   0x32             	MOVWF	r0x1000
0004ae   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
0004af   3c00     sublw   0x00             	SUBLW	0x00
0004b0   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004b1   2cb9     goto    0x04b9           	GOTO	_00233_DS_
                                           _00232_DS_
0004b2   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
0004b3   1303     bcf     0x03, 0x6        
0004b4   0db2     rlf     0x32, 0x1        	RLF	r0x1000,F
0004b5   0db5     rlf     0x35, 0x1        	RLF	r0x1003,F
0004b6   3e01     addlw   0x01             	ADDLW	0x01
0004b7   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0004b8   2cb2     goto    0x04b2           	GOTO	_00232_DS_
                                           _00233_DS_
0004b9   1283     bcf     0x03, 0x5        	BANKSEL	_PORTD
0004ba   1303     bcf     0x03, 0x6        
0004bb   0808     movf    0x08, 0x0        	MOVF	_PORTD,W
0004bc   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
0004bd   1303     bcf     0x03, 0x6        
0004be   00b6     movwf   0x36             	MOVWF	r0x1004
0004bf   01b7     clrf    0x37             	CLRF	r0x1005
0004c0   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
0004c1   05b2     andwf   0x32, 0x1        	ANDWF	r0x1000,F
0004c2   3000     movlw   0x00             	MOVLW	0x00
0004c3   05b5     andwf   0x35, 0x1        	ANDWF	r0x1003,F
0004c4   0835     movf    0x35, 0x0        	MOVF	r0x1003,W
0004c5   00b7     movwf   0x37             	MOVWF	r0x1005
0004c6   0832     movf    0x32, 0x0        	MOVF	r0x1000,W
0004c7   00b6     movwf   0x36             	MOVWF	r0x1004
0004c8   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
0004c9   3c00     sublw   0x00             	SUBLW	0x00
0004ca   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004cb   2cd6     goto    0x04d6           	GOTO	_00235_DS_
                                           _00234_DS_
0004cc   1003     bcf     0x03, 0x0        	BCF	STATUS,0
0004cd   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
0004ce   1303     bcf     0x03, 0x6        
0004cf   1bb7     btfsc   0x37, 0x7        	BTFSC	r0x1005,7
0004d0   1403     bsf     0x03, 0x0        	BSF	STATUS,0
0004d1   0cb7     rrf     0x37, 0x1        	RRF	r0x1005,F
0004d2   0cb6     rrf     0x36, 0x1        	RRF	r0x1004,F
0004d3   3e01     addlw   0x01             	ADDLW	0x01
0004d4   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0004d5   2ccc     goto    0x04cc           	GOTO	_00234_DS_
                                           _00235_DS_
0004d6   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
0004d7   1303     bcf     0x03, 0x6        
0004d8   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
0004d9   00b4     movwf   0x34             	MOVWF	r0x1002
                                           ;	.line	91; "gpio.c"	break;
0004da   2d0d     goto    0x050d           	GOTO	_00212_DS_
                                           _00210_DS_
                                           ;	.line	93; "gpio.c"	ret =  READ_REGISTER_PIN(PORTE, pin);
0004db   3000     movlw   0x00             	MOVLW	0x00
0004dc   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
0004dd   1303     bcf     0x03, 0x6        
0004de   00b5     movwf   0x35             	MOVWF	r0x1003
0004df   3001     movlw   0x01             	MOVLW	0x01
0004e0   00b2     movwf   0x32             	MOVWF	r0x1000
0004e1   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
0004e2   3c00     sublw   0x00             	SUBLW	0x00
0004e3   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004e4   2cec     goto    0x04ec           	GOTO	_00237_DS_
                                           _00236_DS_
0004e5   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
0004e6   1303     bcf     0x03, 0x6        
0004e7   0db2     rlf     0x32, 0x1        	RLF	r0x1000,F
0004e8   0db5     rlf     0x35, 0x1        	RLF	r0x1003,F
0004e9   3e01     addlw   0x01             	ADDLW	0x01
0004ea   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0004eb   2ce5     goto    0x04e5           	GOTO	_00236_DS_
                                           _00237_DS_
0004ec   1283     bcf     0x03, 0x5        	BANKSEL	_PORTE
0004ed   1303     bcf     0x03, 0x6        
0004ee   0809     movf    0x09, 0x0        	MOVF	_PORTE,W
0004ef   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
0004f0   1303     bcf     0x03, 0x6        
0004f1   00b6     movwf   0x36             	MOVWF	r0x1004
0004f2   01b7     clrf    0x37             	CLRF	r0x1005
0004f3   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
0004f4   05b2     andwf   0x32, 0x1        	ANDWF	r0x1000,F
0004f5   3000     movlw   0x00             	MOVLW	0x00
0004f6   05b5     andwf   0x35, 0x1        	ANDWF	r0x1003,F
0004f7   0835     movf    0x35, 0x0        	MOVF	r0x1003,W
0004f8   00b7     movwf   0x37             	MOVWF	r0x1005
0004f9   0832     movf    0x32, 0x0        	MOVF	r0x1000,W
0004fa   00b6     movwf   0x36             	MOVWF	r0x1004
0004fb   0833     movf    0x33, 0x0        	MOVF	r0x1001,W
0004fc   3c00     sublw   0x00             	SUBLW	0x00
0004fd   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0004fe   2d09     goto    0x0509           	GOTO	_00239_DS_
                                           _00238_DS_
0004ff   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000500   1683     bsf     0x03, 0x5        	BANKSEL	r0x1005
000501   1303     bcf     0x03, 0x6        
000502   1bb7     btfsc   0x37, 0x7        	BTFSC	r0x1005,7
000503   1403     bsf     0x03, 0x0        	BSF	STATUS,0
000504   0cb7     rrf     0x37, 0x1        	RRF	r0x1005,F
000505   0cb6     rrf     0x36, 0x1        	RRF	r0x1004,F
000506   3e01     addlw   0x01             	ADDLW	0x01
000507   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000508   2cff     goto    0x04ff           	GOTO	_00238_DS_
                                           _00239_DS_
000509   1683     bsf     0x03, 0x5        	BANKSEL	r0x1004
00050a   1303     bcf     0x03, 0x6        
00050b   0836     movf    0x36, 0x0        	MOVF	r0x1004,W
00050c   00b4     movwf   0x34             	MOVWF	r0x1002
                                           _00212_DS_
                                           ;	.line	100; "gpio.c"	return ret;
00050d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1002
00050e   1303     bcf     0x03, 0x6        
00050f   0834     movf    0x34, 0x0        	MOVF	r0x1002,W
000510   0008     return                   	RETURN	
                                           ; exit point of _GPIO_GetPortPinState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_SetPortState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;9 compiler assigned registers:
                                           ;   r0x100A
                                           ;   STK00
                                           ;   r0x100B
                                           ;   r0x100C
                                           ;   r0x100D
                                           ;   r0x100E
                                           ;   r0x100F
                                           ;   r0x1010
                                           ;   STK01
                                           ;; Starting pCode block
                                           _GPIO_SetPortState	;Function start
                                           ; 2 exit points
                                           ;	.line	64; "gpio.c"	void GPIO_SetPortState(tPort port, unsigned char state)
000511   1683     bsf     0x03, 0x5        	BANKSEL	r0x100A
000512   1303     bcf     0x03, 0x6        
000513   00ab     movwf   0x2b             	MOVWF	r0x100A
000514   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000515   00ac     movwf   0x2c             	MOVWF	r0x100B
                                           ;	.line	68; "gpio.c"	for (i = 0; i < 8; i++)
000516   01ad     clrf    0x2d             	CLRF	r0x100C
                                           _00190_DS_
                                           ;	.line	70; "gpio.c"	GPIO_SetPortPinState(port, i, READ_REGISTER_PIN(state, i));
000517   3000     movlw   0x00             	MOVLW	0x00
000518   1683     bsf     0x03, 0x5        	BANKSEL	r0x100D
000519   1303     bcf     0x03, 0x6        
00051a   00af     movwf   0x2f             	MOVWF	r0x100D
00051b   3001     movlw   0x01             	MOVLW	0x01
00051c   00ae     movwf   0x2e             	MOVWF	r0x100E
00051d   082d     movf    0x2d, 0x0        	MOVF	r0x100C,W
00051e   3c00     sublw   0x00             	SUBLW	0x00
00051f   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000520   2d28     goto    0x0528           	GOTO	_00199_DS_
                                           _00198_DS_
000521   1683     bsf     0x03, 0x5        	BANKSEL	r0x100E
000522   1303     bcf     0x03, 0x6        
000523   0dae     rlf     0x2e, 0x1        	RLF	r0x100E,F
000524   0daf     rlf     0x2f, 0x1        	RLF	r0x100D,F
000525   3e01     addlw   0x01             	ADDLW	0x01
000526   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000527   2d21     goto    0x0521           	GOTO	_00198_DS_
                                           ;;100	MOVF	r0x100B,W
                                           _00199_DS_
000528   1683     bsf     0x03, 0x5        	BANKSEL	r0x1010
000529   1303     bcf     0x03, 0x6        
00052a   01b1     clrf    0x31             	CLRF	r0x1010
                                           ;;99	MOVF	r0x100F,W
00052b   082c     movf    0x2c, 0x0        	MOVF	r0x100B,W
00052c   00b0     movwf   0x30             	MOVWF	r0x100F
00052d   05ae     andwf   0x2e, 0x1        	ANDWF	r0x100E,F
00052e   3000     movlw   0x00             	MOVLW	0x00
00052f   05af     andwf   0x2f, 0x1        	ANDWF	r0x100D,F
000530   082f     movf    0x2f, 0x0        	MOVF	r0x100D,W
000531   00b1     movwf   0x31             	MOVWF	r0x1010
000532   082e     movf    0x2e, 0x0        	MOVF	r0x100E,W
000533   00b0     movwf   0x30             	MOVWF	r0x100F
000534   082d     movf    0x2d, 0x0        	MOVF	r0x100C,W
000535   3c00     sublw   0x00             	SUBLW	0x00
000536   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000537   2d42     goto    0x0542           	GOTO	_00201_DS_
                                           _00200_DS_
000538   1003     bcf     0x03, 0x0        	BCF	STATUS,0
000539   1683     bsf     0x03, 0x5        	BANKSEL	r0x1010
00053a   1303     bcf     0x03, 0x6        
00053b   1bb1     btfsc   0x31, 0x7        	BTFSC	r0x1010,7
00053c   1403     bsf     0x03, 0x0        	BSF	STATUS,0
00053d   0cb1     rrf     0x31, 0x1        	RRF	r0x1010,F
00053e   0cb0     rrf     0x30, 0x1        	RRF	r0x100F,F
00053f   3e01     addlw   0x01             	ADDLW	0x01
000540   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000541   2d38     goto    0x0538           	GOTO	_00200_DS_
                                           _00201_DS_
000542   1683     bsf     0x03, 0x5        	BANKSEL	r0x100F
000543   1303     bcf     0x03, 0x6        
000544   0830     movf    0x30, 0x0        	MOVF	r0x100F,W
000545   00ae     movwf   0x2e             	MOVWF	r0x100E
000546   00fe     movwf   0x7e             	MOVWF	STK01
000547   082d     movf    0x2d, 0x0        	MOVF	r0x100C,W
000548   00ff     movwf   0x7f             	MOVWF	STK00
000549   082b     movf    0x2b, 0x0        	MOVF	r0x100A,W
00054a   2553     call    0x0553           	CALL	_GPIO_SetPortPinState
                                           ;	.line	68; "gpio.c"	for (i = 0; i < 8; i++)
00054b   1683     bsf     0x03, 0x5        	BANKSEL	r0x100C
00054c   1303     bcf     0x03, 0x6        
00054d   0aad     incf    0x2d, 0x1        	INCF	r0x100C,F
                                           ;;unsigned compare: left < lit(0x8=8), size=1
00054e   3008     movlw   0x08             	MOVLW	0x08
00054f   022d     subwf   0x2d, 0x0        	SUBWF	r0x100C,W
000550   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000551   2d17     goto    0x0517           	GOTO	_00190_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
000552   0008     return                   	RETURN	
                                           ; exit point of _GPIO_SetPortState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_SetPortPinState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;6 compiler assigned registers:
                                           ;   r0x1006
                                           ;   STK00
                                           ;   r0x1007
                                           ;   STK01
                                           ;   r0x1008
                                           ;   r0x1009
                                           ;; Starting pCode block
                                           _GPIO_SetPortPinState	;Function start
                                           ; 2 exit points
                                           ;	.line	42; "gpio.c"	void GPIO_SetPortPinState(tPort port, unsigned char pin, unsigned char state)
000553   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000554   1303     bcf     0x03, 0x6        
000555   00a7     movwf   0x27             	MOVWF	r0x1006
000556   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000557   00a8     movwf   0x28             	MOVWF	r0x1007
000558   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000559   00a9     movwf   0x29             	MOVWF	r0x1008
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x5=5), size=1
                                           ;	.line	44; "gpio.c"	switch(port)
00055a   3005     movlw   0x05             	MOVLW	0x05
00055b   0227     subwf   0x27, 0x0        	SUBWF	r0x1006,W
00055c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00055d   2e47     goto    0x0647           	GOTO	_00158_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00055e   3005     movlw   0x05             	MOVLW	HIGH(_00164_DS_)
00055f   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000560   1303     bcf     0x03, 0x6        
000561   008a     movwf   0x0a             	MOVWF	PCLATH
000562   306c     movlw   0x6c             	MOVLW	_00164_DS_
000563   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000564   1303     bcf     0x03, 0x6        
000565   0727     addwf   0x27, 0x0        	ADDWF	r0x1006,W
000566   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000567   2d6b     goto    0x056b           	GOTO	_00002_DS_
000568   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000569   1303     bcf     0x03, 0x6        
00056a   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00002_DS_
00056b   0082     movwf   0x02             	MOVWF	PCL
                                           _00164_DS_
00056c   2d71     goto    0x0571           	GOTO	_00152_DS_
00056d   2d9c     goto    0x059c           	GOTO	_00153_DS_
00056e   2dc7     goto    0x05c7           	GOTO	_00154_DS_
00056f   2df2     goto    0x05f2           	GOTO	_00155_DS_
000570   2e1d     goto    0x061d           	GOTO	_00156_DS_
                                           _00152_DS_
                                           ;	.line	47; "gpio.c"	SET_REGISTER_PIN(PORTA, pin, state);
000571   3001     movlw   0x01             	MOVLW	0x01
000572   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000573   1303     bcf     0x03, 0x6        
000574   00a7     movwf   0x27             	MOVWF	r0x1006
000575   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
000576   3c00     sublw   0x00             	SUBLW	0x00
000577   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000578   2d7f     goto    0x057f           	GOTO	_00166_DS_
                                           _00165_DS_
000579   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
00057a   1303     bcf     0x03, 0x6        
00057b   0da7     rlf     0x27, 0x1        	RLF	r0x1006,F
00057c   3e01     addlw   0x01             	ADDLW	0x01
00057d   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00057e   2d79     goto    0x0579           	GOTO	_00165_DS_
                                           _00166_DS_
00057f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000580   1303     bcf     0x03, 0x6        
000581   09a7     comf    0x27, 0x1        	COMF	r0x1006,F
000582   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
000583   1303     bcf     0x03, 0x6        
000584   0805     movf    0x05, 0x0        	MOVF	_PORTA,W
000585   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000586   1303     bcf     0x03, 0x6        
000587   05a7     andwf   0x27, 0x1        	ANDWF	r0x1006,F
000588   0829     movf    0x29, 0x0        	MOVF	r0x1008,W
000589   00aa     movwf   0x2a             	MOVWF	r0x1009
00058a   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
00058b   3c00     sublw   0x00             	SUBLW	0x00
00058c   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00058d   2d94     goto    0x0594           	GOTO	_00168_DS_
                                           _00167_DS_
00058e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
00058f   1303     bcf     0x03, 0x6        
000590   0daa     rlf     0x2a, 0x1        	RLF	r0x1009,F
000591   3e01     addlw   0x01             	ADDLW	0x01
000592   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000593   2d8e     goto    0x058e           	GOTO	_00167_DS_
                                           _00168_DS_
000594   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000595   1303     bcf     0x03, 0x6        
000596   082a     movf    0x2a, 0x0        	MOVF	r0x1009,W
000597   0427     iorwf   0x27, 0x0        	IORWF	r0x1006,W
000598   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
000599   1303     bcf     0x03, 0x6        
00059a   0085     movwf   0x05             	MOVWF	_PORTA
                                           ;	.line	48; "gpio.c"	break;
00059b   2e47     goto    0x0647           	GOTO	_00158_DS_
                                           _00153_DS_
                                           ;	.line	50; "gpio.c"	SET_REGISTER_PIN(PORTB, pin, state);
00059c   3001     movlw   0x01             	MOVLW	0x01
00059d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
00059e   1303     bcf     0x03, 0x6        
00059f   00a7     movwf   0x27             	MOVWF	r0x1006
0005a0   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
0005a1   3c00     sublw   0x00             	SUBLW	0x00
0005a2   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005a3   2daa     goto    0x05aa           	GOTO	_00170_DS_
                                           _00169_DS_
0005a4   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005a5   1303     bcf     0x03, 0x6        
0005a6   0da7     rlf     0x27, 0x1        	RLF	r0x1006,F
0005a7   3e01     addlw   0x01             	ADDLW	0x01
0005a8   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0005a9   2da4     goto    0x05a4           	GOTO	_00169_DS_
                                           _00170_DS_
0005aa   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005ab   1303     bcf     0x03, 0x6        
0005ac   09a7     comf    0x27, 0x1        	COMF	r0x1006,F
0005ad   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
0005ae   1303     bcf     0x03, 0x6        
0005af   0806     movf    0x06, 0x0        	MOVF	_PORTB,W
0005b0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005b1   1303     bcf     0x03, 0x6        
0005b2   05a7     andwf   0x27, 0x1        	ANDWF	r0x1006,F
0005b3   0829     movf    0x29, 0x0        	MOVF	r0x1008,W
0005b4   00aa     movwf   0x2a             	MOVWF	r0x1009
0005b5   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
0005b6   3c00     sublw   0x00             	SUBLW	0x00
0005b7   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005b8   2dbf     goto    0x05bf           	GOTO	_00172_DS_
                                           _00171_DS_
0005b9   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
0005ba   1303     bcf     0x03, 0x6        
0005bb   0daa     rlf     0x2a, 0x1        	RLF	r0x1009,F
0005bc   3e01     addlw   0x01             	ADDLW	0x01
0005bd   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0005be   2db9     goto    0x05b9           	GOTO	_00171_DS_
                                           _00172_DS_
0005bf   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
0005c0   1303     bcf     0x03, 0x6        
0005c1   082a     movf    0x2a, 0x0        	MOVF	r0x1009,W
0005c2   0427     iorwf   0x27, 0x0        	IORWF	r0x1006,W
0005c3   1283     bcf     0x03, 0x5        	BANKSEL	_PORTB
0005c4   1303     bcf     0x03, 0x6        
0005c5   0086     movwf   0x06             	MOVWF	_PORTB
                                           ;	.line	51; "gpio.c"	break;
0005c6   2e47     goto    0x0647           	GOTO	_00158_DS_
                                           _00154_DS_
                                           ;	.line	53; "gpio.c"	SET_REGISTER_PIN(PORTC, pin, state);
0005c7   3001     movlw   0x01             	MOVLW	0x01
0005c8   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005c9   1303     bcf     0x03, 0x6        
0005ca   00a7     movwf   0x27             	MOVWF	r0x1006
0005cb   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
0005cc   3c00     sublw   0x00             	SUBLW	0x00
0005cd   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005ce   2dd5     goto    0x05d5           	GOTO	_00174_DS_
                                           _00173_DS_
0005cf   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005d0   1303     bcf     0x03, 0x6        
0005d1   0da7     rlf     0x27, 0x1        	RLF	r0x1006,F
0005d2   3e01     addlw   0x01             	ADDLW	0x01
0005d3   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0005d4   2dcf     goto    0x05cf           	GOTO	_00173_DS_
                                           _00174_DS_
0005d5   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005d6   1303     bcf     0x03, 0x6        
0005d7   09a7     comf    0x27, 0x1        	COMF	r0x1006,F
0005d8   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
0005d9   1303     bcf     0x03, 0x6        
0005da   0807     movf    0x07, 0x0        	MOVF	_PORTC,W
0005db   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005dc   1303     bcf     0x03, 0x6        
0005dd   05a7     andwf   0x27, 0x1        	ANDWF	r0x1006,F
0005de   0829     movf    0x29, 0x0        	MOVF	r0x1008,W
0005df   00aa     movwf   0x2a             	MOVWF	r0x1009
0005e0   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
0005e1   3c00     sublw   0x00             	SUBLW	0x00
0005e2   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005e3   2dea     goto    0x05ea           	GOTO	_00176_DS_
                                           _00175_DS_
0005e4   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
0005e5   1303     bcf     0x03, 0x6        
0005e6   0daa     rlf     0x2a, 0x1        	RLF	r0x1009,F
0005e7   3e01     addlw   0x01             	ADDLW	0x01
0005e8   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0005e9   2de4     goto    0x05e4           	GOTO	_00175_DS_
                                           _00176_DS_
0005ea   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
0005eb   1303     bcf     0x03, 0x6        
0005ec   082a     movf    0x2a, 0x0        	MOVF	r0x1009,W
0005ed   0427     iorwf   0x27, 0x0        	IORWF	r0x1006,W
0005ee   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
0005ef   1303     bcf     0x03, 0x6        
0005f0   0087     movwf   0x07             	MOVWF	_PORTC
                                           ;	.line	54; "gpio.c"	break;
0005f1   2e47     goto    0x0647           	GOTO	_00158_DS_
                                           _00155_DS_
                                           ;	.line	56; "gpio.c"	SET_REGISTER_PIN(PORTD, pin, state);
0005f2   3001     movlw   0x01             	MOVLW	0x01
0005f3   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005f4   1303     bcf     0x03, 0x6        
0005f5   00a7     movwf   0x27             	MOVWF	r0x1006
0005f6   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
0005f7   3c00     sublw   0x00             	SUBLW	0x00
0005f8   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0005f9   2e00     goto    0x0600           	GOTO	_00178_DS_
                                           _00177_DS_
0005fa   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
0005fb   1303     bcf     0x03, 0x6        
0005fc   0da7     rlf     0x27, 0x1        	RLF	r0x1006,F
0005fd   3e01     addlw   0x01             	ADDLW	0x01
0005fe   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0005ff   2dfa     goto    0x05fa           	GOTO	_00177_DS_
                                           _00178_DS_
000600   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000601   1303     bcf     0x03, 0x6        
000602   09a7     comf    0x27, 0x1        	COMF	r0x1006,F
000603   1283     bcf     0x03, 0x5        	BANKSEL	_PORTD
000604   1303     bcf     0x03, 0x6        
000605   0808     movf    0x08, 0x0        	MOVF	_PORTD,W
000606   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000607   1303     bcf     0x03, 0x6        
000608   05a7     andwf   0x27, 0x1        	ANDWF	r0x1006,F
000609   0829     movf    0x29, 0x0        	MOVF	r0x1008,W
00060a   00aa     movwf   0x2a             	MOVWF	r0x1009
00060b   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
00060c   3c00     sublw   0x00             	SUBLW	0x00
00060d   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00060e   2e15     goto    0x0615           	GOTO	_00180_DS_
                                           _00179_DS_
00060f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000610   1303     bcf     0x03, 0x6        
000611   0daa     rlf     0x2a, 0x1        	RLF	r0x1009,F
000612   3e01     addlw   0x01             	ADDLW	0x01
000613   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000614   2e0f     goto    0x060f           	GOTO	_00179_DS_
                                           _00180_DS_
000615   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000616   1303     bcf     0x03, 0x6        
000617   082a     movf    0x2a, 0x0        	MOVF	r0x1009,W
000618   0427     iorwf   0x27, 0x0        	IORWF	r0x1006,W
000619   1283     bcf     0x03, 0x5        	BANKSEL	_PORTD
00061a   1303     bcf     0x03, 0x6        
00061b   0088     movwf   0x08             	MOVWF	_PORTD
                                           ;	.line	57; "gpio.c"	break;
00061c   2e47     goto    0x0647           	GOTO	_00158_DS_
                                           _00156_DS_
                                           ;	.line	59; "gpio.c"	SET_REGISTER_PIN(PORTE, pin, state);
00061d   3001     movlw   0x01             	MOVLW	0x01
00061e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
00061f   1303     bcf     0x03, 0x6        
000620   00a7     movwf   0x27             	MOVWF	r0x1006
000621   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
000622   3c00     sublw   0x00             	SUBLW	0x00
000623   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000624   2e2b     goto    0x062b           	GOTO	_00182_DS_
                                           _00181_DS_
000625   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000626   1303     bcf     0x03, 0x6        
000627   0da7     rlf     0x27, 0x1        	RLF	r0x1006,F
000628   3e01     addlw   0x01             	ADDLW	0x01
000629   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00062a   2e25     goto    0x0625           	GOTO	_00181_DS_
                                           _00182_DS_
00062b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
00062c   1303     bcf     0x03, 0x6        
00062d   09a7     comf    0x27, 0x1        	COMF	r0x1006,F
00062e   1283     bcf     0x03, 0x5        	BANKSEL	_PORTE
00062f   1303     bcf     0x03, 0x6        
000630   0809     movf    0x09, 0x0        	MOVF	_PORTE,W
000631   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
000632   1303     bcf     0x03, 0x6        
000633   05a7     andwf   0x27, 0x1        	ANDWF	r0x1006,F
000634   0829     movf    0x29, 0x0        	MOVF	r0x1008,W
000635   00aa     movwf   0x2a             	MOVWF	r0x1009
000636   0828     movf    0x28, 0x0        	MOVF	r0x1007,W
000637   3c00     sublw   0x00             	SUBLW	0x00
000638   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000639   2e40     goto    0x0640           	GOTO	_00184_DS_
                                           _00183_DS_
00063a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
00063b   1303     bcf     0x03, 0x6        
00063c   0daa     rlf     0x2a, 0x1        	RLF	r0x1009,F
00063d   3e01     addlw   0x01             	ADDLW	0x01
00063e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00063f   2e3a     goto    0x063a           	GOTO	_00183_DS_
                                           _00184_DS_
000640   1683     bsf     0x03, 0x5        	BANKSEL	r0x1009
000641   1303     bcf     0x03, 0x6        
000642   082a     movf    0x2a, 0x0        	MOVF	r0x1009,W
000643   0427     iorwf   0x27, 0x0        	IORWF	r0x1006,W
000644   1283     bcf     0x03, 0x5        	BANKSEL	_PORTE
000645   1303     bcf     0x03, 0x6        
000646   0089     movwf   0x09             	MOVWF	_PORTE
                                           _00158_DS_
                                           ;	.line	61; "gpio.c"	}
000647   0008     return                   	RETURN	
                                           ; exit point of _GPIO_SetPortPinState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _GPIO_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	39; "gpio.c"	}
000648   0008     return                   	RETURN	
                                           ; exit point of _GPIO_Update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_InitPort	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;5 compiler assigned registers:
                                           ;   r0x1015
                                           ;   STK00
                                           ;   r0x1016
                                           ;   r0x1017
                                           ;   STK01
                                           ;; Starting pCode block
                                           _GPIO_InitPort	;Function start
                                           ; 2 exit points
                                           ;	.line	26; "gpio.c"	void GPIO_InitPort(tPort port, tPortDirection direction)
000649   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
00064a   1303     bcf     0x03, 0x6        
00064b   00a4     movwf   0x24             	MOVWF	r0x1015
00064c   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00064d   00a5     movwf   0x25             	MOVWF	r0x1016
                                           ;	.line	30; "gpio.c"	for (i = 0; i < 8; i++)
00064e   01a6     clrf    0x26             	CLRF	r0x1017
                                           _00143_DS_
                                           ;	.line	32; "gpio.c"	GPIO_InitPortPin(port, i, direction);
00064f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1016
000650   1303     bcf     0x03, 0x6        
000651   0825     movf    0x25, 0x0        	MOVF	r0x1016,W
000652   00fe     movwf   0x7e             	MOVWF	STK01
000653   0826     movf    0x26, 0x0        	MOVF	r0x1017,W
000654   00ff     movwf   0x7f             	MOVWF	STK00
000655   0824     movf    0x24, 0x0        	MOVF	r0x1015,W
000656   265f     call    0x065f           	CALL	_GPIO_InitPortPin
                                           ;	.line	30; "gpio.c"	for (i = 0; i < 8; i++)
000657   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
000658   1303     bcf     0x03, 0x6        
000659   0aa6     incf    0x26, 0x1        	INCF	r0x1017,F
                                           ;;unsigned compare: left < lit(0x8=8), size=1
00065a   3008     movlw   0x08             	MOVLW	0x08
00065b   0226     subwf   0x26, 0x0        	SUBWF	r0x1017,W
00065c   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00065d   2e4f     goto    0x064f           	GOTO	_00143_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00065e   0008     return                   	RETURN	
                                           ; exit point of _GPIO_InitPort
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _GPIO_InitPortPin	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;6 compiler assigned registers:
                                           ;   r0x1011
                                           ;   STK00
                                           ;   r0x1012
                                           ;   STK01
                                           ;   r0x1013
                                           ;   r0x1014
                                           ;; Starting pCode block
                                           _GPIO_InitPortPin	;Function start
                                           ; 2 exit points
                                           ;	.line	4; "gpio.c"	void GPIO_InitPortPin(tPort port, unsigned char pin, tPortDirection direction)
00065f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000660   1303     bcf     0x03, 0x6        
000661   00a0     movwf   0x20             	MOVWF	r0x1011
000662   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000663   00a1     movwf   0x21             	MOVWF	r0x1012
000664   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000665   00a2     movwf   0x22             	MOVWF	r0x1013
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x5=5), size=1
                                           ;	.line	6; "gpio.c"	switch(port)
000666   3005     movlw   0x05             	MOVLW	0x05
000667   0220     subwf   0x20, 0x0        	SUBWF	r0x1011,W
000668   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000669   2f53     goto    0x0753           	GOTO	_00111_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00066a   3006     movlw   0x06             	MOVLW	HIGH(_00117_DS_)
00066b   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00066c   1303     bcf     0x03, 0x6        
00066d   008a     movwf   0x0a             	MOVWF	PCLATH
00066e   3078     movlw   0x78             	MOVLW	_00117_DS_
00066f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000670   1303     bcf     0x03, 0x6        
000671   0720     addwf   0x20, 0x0        	ADDWF	r0x1011,W
000672   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000673   2e77     goto    0x0677           	GOTO	_00003_DS_
000674   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000675   1303     bcf     0x03, 0x6        
000676   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00003_DS_
000677   0082     movwf   0x02             	MOVWF	PCL
                                           _00117_DS_
000678   2e7d     goto    0x067d           	GOTO	_00105_DS_
000679   2ea8     goto    0x06a8           	GOTO	_00106_DS_
00067a   2ed3     goto    0x06d3           	GOTO	_00107_DS_
00067b   2efe     goto    0x06fe           	GOTO	_00108_DS_
00067c   2f29     goto    0x0729           	GOTO	_00109_DS_
                                           _00105_DS_
                                           ;	.line	9; "gpio.c"	SET_REGISTER_PIN(TRISA, pin, direction);
00067d   3001     movlw   0x01             	MOVLW	0x01
00067e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00067f   1303     bcf     0x03, 0x6        
000680   00a0     movwf   0x20             	MOVWF	r0x1011
000681   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
000682   3c00     sublw   0x00             	SUBLW	0x00
000683   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000684   2e8b     goto    0x068b           	GOTO	_00119_DS_
                                           _00118_DS_
000685   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000686   1303     bcf     0x03, 0x6        
000687   0da0     rlf     0x20, 0x1        	RLF	r0x1011,F
000688   3e01     addlw   0x01             	ADDLW	0x01
000689   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00068a   2e85     goto    0x0685           	GOTO	_00118_DS_
                                           _00119_DS_
00068b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00068c   1303     bcf     0x03, 0x6        
00068d   09a0     comf    0x20, 0x1        	COMF	r0x1011,F
00068e   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
00068f   1303     bcf     0x03, 0x6        
000690   0805     movf    0x05, 0x0        	MOVF	_TRISA,W
000691   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000692   1303     bcf     0x03, 0x6        
000693   05a0     andwf   0x20, 0x1        	ANDWF	r0x1011,F
000694   0822     movf    0x22, 0x0        	MOVF	r0x1013,W
000695   00a3     movwf   0x23             	MOVWF	r0x1014
000696   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
000697   3c00     sublw   0x00             	SUBLW	0x00
000698   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000699   2ea0     goto    0x06a0           	GOTO	_00121_DS_
                                           _00120_DS_
00069a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00069b   1303     bcf     0x03, 0x6        
00069c   0da3     rlf     0x23, 0x1        	RLF	r0x1014,F
00069d   3e01     addlw   0x01             	ADDLW	0x01
00069e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00069f   2e9a     goto    0x069a           	GOTO	_00120_DS_
                                           _00121_DS_
0006a0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
0006a1   1303     bcf     0x03, 0x6        
0006a2   0823     movf    0x23, 0x0        	MOVF	r0x1014,W
0006a3   0420     iorwf   0x20, 0x0        	IORWF	r0x1011,W
0006a4   1683     bsf     0x03, 0x5        	BANKSEL	_TRISA
0006a5   1303     bcf     0x03, 0x6        
0006a6   0085     movwf   0x05             	MOVWF	_TRISA
                                           ;	.line	10; "gpio.c"	break;
0006a7   2f53     goto    0x0753           	GOTO	_00111_DS_
                                           _00106_DS_
                                           ;	.line	12; "gpio.c"	SET_REGISTER_PIN(TRISB, pin, direction);
0006a8   3001     movlw   0x01             	MOVLW	0x01
0006a9   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006aa   1303     bcf     0x03, 0x6        
0006ab   00a0     movwf   0x20             	MOVWF	r0x1011
0006ac   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
0006ad   3c00     sublw   0x00             	SUBLW	0x00
0006ae   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0006af   2eb6     goto    0x06b6           	GOTO	_00123_DS_
                                           _00122_DS_
0006b0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006b1   1303     bcf     0x03, 0x6        
0006b2   0da0     rlf     0x20, 0x1        	RLF	r0x1011,F
0006b3   3e01     addlw   0x01             	ADDLW	0x01
0006b4   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0006b5   2eb0     goto    0x06b0           	GOTO	_00122_DS_
                                           _00123_DS_
0006b6   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006b7   1303     bcf     0x03, 0x6        
0006b8   09a0     comf    0x20, 0x1        	COMF	r0x1011,F
0006b9   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
0006ba   1303     bcf     0x03, 0x6        
0006bb   0806     movf    0x06, 0x0        	MOVF	_TRISB,W
0006bc   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006bd   1303     bcf     0x03, 0x6        
0006be   05a0     andwf   0x20, 0x1        	ANDWF	r0x1011,F
0006bf   0822     movf    0x22, 0x0        	MOVF	r0x1013,W
0006c0   00a3     movwf   0x23             	MOVWF	r0x1014
0006c1   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
0006c2   3c00     sublw   0x00             	SUBLW	0x00
0006c3   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0006c4   2ecb     goto    0x06cb           	GOTO	_00125_DS_
                                           _00124_DS_
0006c5   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
0006c6   1303     bcf     0x03, 0x6        
0006c7   0da3     rlf     0x23, 0x1        	RLF	r0x1014,F
0006c8   3e01     addlw   0x01             	ADDLW	0x01
0006c9   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0006ca   2ec5     goto    0x06c5           	GOTO	_00124_DS_
                                           _00125_DS_
0006cb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
0006cc   1303     bcf     0x03, 0x6        
0006cd   0823     movf    0x23, 0x0        	MOVF	r0x1014,W
0006ce   0420     iorwf   0x20, 0x0        	IORWF	r0x1011,W
0006cf   1683     bsf     0x03, 0x5        	BANKSEL	_TRISB
0006d0   1303     bcf     0x03, 0x6        
0006d1   0086     movwf   0x06             	MOVWF	_TRISB
                                           ;	.line	13; "gpio.c"	break;
0006d2   2f53     goto    0x0753           	GOTO	_00111_DS_
                                           _00107_DS_
                                           ;	.line	15; "gpio.c"	SET_REGISTER_PIN(TRISC, pin, direction);
0006d3   3001     movlw   0x01             	MOVLW	0x01
0006d4   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006d5   1303     bcf     0x03, 0x6        
0006d6   00a0     movwf   0x20             	MOVWF	r0x1011
0006d7   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
0006d8   3c00     sublw   0x00             	SUBLW	0x00
0006d9   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0006da   2ee1     goto    0x06e1           	GOTO	_00127_DS_
                                           _00126_DS_
0006db   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006dc   1303     bcf     0x03, 0x6        
0006dd   0da0     rlf     0x20, 0x1        	RLF	r0x1011,F
0006de   3e01     addlw   0x01             	ADDLW	0x01
0006df   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0006e0   2edb     goto    0x06db           	GOTO	_00126_DS_
                                           _00127_DS_
0006e1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006e2   1303     bcf     0x03, 0x6        
0006e3   09a0     comf    0x20, 0x1        	COMF	r0x1011,F
0006e4   1683     bsf     0x03, 0x5        	BANKSEL	_TRISC
0006e5   1303     bcf     0x03, 0x6        
0006e6   0807     movf    0x07, 0x0        	MOVF	_TRISC,W
0006e7   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0006e8   1303     bcf     0x03, 0x6        
0006e9   05a0     andwf   0x20, 0x1        	ANDWF	r0x1011,F
0006ea   0822     movf    0x22, 0x0        	MOVF	r0x1013,W
0006eb   00a3     movwf   0x23             	MOVWF	r0x1014
0006ec   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
0006ed   3c00     sublw   0x00             	SUBLW	0x00
0006ee   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0006ef   2ef6     goto    0x06f6           	GOTO	_00129_DS_
                                           _00128_DS_
0006f0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
0006f1   1303     bcf     0x03, 0x6        
0006f2   0da3     rlf     0x23, 0x1        	RLF	r0x1014,F
0006f3   3e01     addlw   0x01             	ADDLW	0x01
0006f4   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0006f5   2ef0     goto    0x06f0           	GOTO	_00128_DS_
                                           _00129_DS_
0006f6   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
0006f7   1303     bcf     0x03, 0x6        
0006f8   0823     movf    0x23, 0x0        	MOVF	r0x1014,W
0006f9   0420     iorwf   0x20, 0x0        	IORWF	r0x1011,W
0006fa   1683     bsf     0x03, 0x5        	BANKSEL	_TRISC
0006fb   1303     bcf     0x03, 0x6        
0006fc   0087     movwf   0x07             	MOVWF	_TRISC
                                           ;	.line	16; "gpio.c"	break;
0006fd   2f53     goto    0x0753           	GOTO	_00111_DS_
                                           _00108_DS_
                                           ;	.line	18; "gpio.c"	SET_REGISTER_PIN(TRISD, pin, direction);
0006fe   3001     movlw   0x01             	MOVLW	0x01
0006ff   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000700   1303     bcf     0x03, 0x6        
000701   00a0     movwf   0x20             	MOVWF	r0x1011
000702   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
000703   3c00     sublw   0x00             	SUBLW	0x00
000704   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000705   2f0c     goto    0x070c           	GOTO	_00131_DS_
                                           _00130_DS_
000706   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000707   1303     bcf     0x03, 0x6        
000708   0da0     rlf     0x20, 0x1        	RLF	r0x1011,F
000709   3e01     addlw   0x01             	ADDLW	0x01
00070a   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00070b   2f06     goto    0x0706           	GOTO	_00130_DS_
                                           _00131_DS_
00070c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00070d   1303     bcf     0x03, 0x6        
00070e   09a0     comf    0x20, 0x1        	COMF	r0x1011,F
00070f   1683     bsf     0x03, 0x5        	BANKSEL	_TRISD
000710   1303     bcf     0x03, 0x6        
000711   0808     movf    0x08, 0x0        	MOVF	_TRISD,W
000712   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000713   1303     bcf     0x03, 0x6        
000714   05a0     andwf   0x20, 0x1        	ANDWF	r0x1011,F
000715   0822     movf    0x22, 0x0        	MOVF	r0x1013,W
000716   00a3     movwf   0x23             	MOVWF	r0x1014
000717   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
000718   3c00     sublw   0x00             	SUBLW	0x00
000719   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00071a   2f21     goto    0x0721           	GOTO	_00133_DS_
                                           _00132_DS_
00071b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00071c   1303     bcf     0x03, 0x6        
00071d   0da3     rlf     0x23, 0x1        	RLF	r0x1014,F
00071e   3e01     addlw   0x01             	ADDLW	0x01
00071f   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000720   2f1b     goto    0x071b           	GOTO	_00132_DS_
                                           _00133_DS_
000721   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
000722   1303     bcf     0x03, 0x6        
000723   0823     movf    0x23, 0x0        	MOVF	r0x1014,W
000724   0420     iorwf   0x20, 0x0        	IORWF	r0x1011,W
000725   1683     bsf     0x03, 0x5        	BANKSEL	_TRISD
000726   1303     bcf     0x03, 0x6        
000727   0088     movwf   0x08             	MOVWF	_TRISD
                                           ;	.line	19; "gpio.c"	break;
000728   2f53     goto    0x0753           	GOTO	_00111_DS_
                                           _00109_DS_
                                           ;	.line	21; "gpio.c"	SET_REGISTER_PIN(TRISE, pin, direction);
000729   3001     movlw   0x01             	MOVLW	0x01
00072a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00072b   1303     bcf     0x03, 0x6        
00072c   00a0     movwf   0x20             	MOVWF	r0x1011
00072d   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
00072e   3c00     sublw   0x00             	SUBLW	0x00
00072f   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000730   2f37     goto    0x0737           	GOTO	_00135_DS_
                                           _00134_DS_
000731   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000732   1303     bcf     0x03, 0x6        
000733   0da0     rlf     0x20, 0x1        	RLF	r0x1011,F
000734   3e01     addlw   0x01             	ADDLW	0x01
000735   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000736   2f31     goto    0x0731           	GOTO	_00134_DS_
                                           _00135_DS_
000737   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
000738   1303     bcf     0x03, 0x6        
000739   09a0     comf    0x20, 0x1        	COMF	r0x1011,F
00073a   1683     bsf     0x03, 0x5        	BANKSEL	_TRISE
00073b   1303     bcf     0x03, 0x6        
00073c   0809     movf    0x09, 0x0        	MOVF	_TRISE,W
00073d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00073e   1303     bcf     0x03, 0x6        
00073f   05a0     andwf   0x20, 0x1        	ANDWF	r0x1011,F
000740   0822     movf    0x22, 0x0        	MOVF	r0x1013,W
000741   00a3     movwf   0x23             	MOVWF	r0x1014
000742   0821     movf    0x21, 0x0        	MOVF	r0x1012,W
000743   3c00     sublw   0x00             	SUBLW	0x00
000744   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000745   2f4c     goto    0x074c           	GOTO	_00137_DS_
                                           _00136_DS_
000746   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
000747   1303     bcf     0x03, 0x6        
000748   0da3     rlf     0x23, 0x1        	RLF	r0x1014,F
000749   3e01     addlw   0x01             	ADDLW	0x01
00074a   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00074b   2f46     goto    0x0746           	GOTO	_00136_DS_
                                           _00137_DS_
00074c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00074d   1303     bcf     0x03, 0x6        
00074e   0823     movf    0x23, 0x0        	MOVF	r0x1014,W
00074f   0420     iorwf   0x20, 0x0        	IORWF	r0x1011,W
000750   1683     bsf     0x03, 0x5        	BANKSEL	_TRISE
000751   1303     bcf     0x03, 0x6        
000752   0089     movwf   0x09             	MOVWF	_TRISE
                                           _00111_DS_
                                           ;	.line	23; "gpio.c"	}
000753   0008     return                   	RETURN	
                                           ; exit point of _GPIO_InitPortPin
                                           
                                           
                                           ;	code size estimation:
                                           ;	  600+  133 =   733 instructions ( 1732 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:22 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"heater.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_LED_Init
                                           	extern	_LED_GetState
                                           	extern	_LED_Update
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pex_update
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_SettingMode_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_Heater_update
                                           	global	_Heater_GetState
                                           	global	_Heater_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_heater	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Heater_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _Heater_SetState
                                           ;   _GPIO_SetPortPinState
                                           ;4 compiler assigned registers:
                                           ;   r0x1007
                                           ;   r0x1006
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _Heater_update	;Function start
                                           ; 2 exit points
                                           ;	.line	20; "heater.c"	Heater_SetState(Flags.Heater_Operation);
0018d7   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
0018d8   1703     bsf     0x03, 0x6        
0018d9   0831     movf    0x31, 0x0        	MOVF	(_Flags + 2),W
                                           ;;1	MOVWF	r0x1007
                                           ;;1	MOVWF	r0x1006
                                           _Heater_SetState
                                           ;	.line	11; "heater.c"	GPIO_SetPortPinState(PORT_C,5,state);
0018da   00fe     movwf   0x7e             	MOVWF	STK01
0018db   3005     movlw   0x05             	MOVLW	0x05
0018dc   00ff     movwf   0x7f             	MOVWF	STK00
0018dd   3002     movlw   0x02             	MOVLW	0x02
0018de   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
0018df   120a     bcf     0x0a, 0x4        
0018e0   2553     call    0x0553           	CALL	_GPIO_SetPortPinState
0018e1   158a     bsf     0x0a, 0x3        	PAGESEL	$
0018e2   160a     bsf     0x0a, 0x4        
0018e3   0008     return                   	RETURN	
                                           ; exit point of _Heater_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Heater_GetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;2 compiler assigned registers:
                                           ;   STK00
                                           ;   r0x1008
                                           ;; Starting pCode block
                                           _Heater_GetState	;Function start
                                           ; 2 exit points
                                           ;	.line	16; "heater.c"	return GPIO_GetPortPinState(PORT_C,5);
0018e4   3005     movlw   0x05             	MOVLW	0x05
0018e5   00ff     movwf   0x7f             	MOVWF	STK00
0018e6   3002     movlw   0x02             	MOVLW	0x02
0018e7   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
0018e8   120a     bcf     0x0a, 0x4        
0018e9   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
0018ea   158a     bsf     0x0a, 0x3        	PAGESEL	$
0018eb   160a     bsf     0x0a, 0x4        
                                           ;;1	MOVWF	r0x1008
0018ec   0008     return                   	RETURN	
                                           ; exit point of _Heater_GetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Heater_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;2 compiler assigned registers:
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _Heater_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	5; "heater.c"	GPIO_InitPortPin(PORT_C,5,GPIO_OUT);
0018ed   3000     movlw   0x00             	MOVLW	0x00
0018ee   00fe     movwf   0x7e             	MOVWF	STK01
0018ef   3005     movlw   0x05             	MOVLW	0x05
0018f0   00ff     movwf   0x7f             	MOVWF	STK00
0018f1   3002     movlw   0x02             	MOVLW	0x02
0018f2   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
0018f3   120a     bcf     0x0a, 0x4        
0018f4   265f     call    0x065f           	CALL	_GPIO_InitPortPin
0018f5   158a     bsf     0x0a, 0x3        	PAGESEL	$
0018f6   160a     bsf     0x0a, 0x4        
0018f7   0008     return                   	RETURN	
                                           ; exit point of _Heater_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   19+    7 =    26 instructions (   66 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:22 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"i2c.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	__mullong
                                           	extern	__divulong
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_I2C_Read
                                           	global	_I2C_Write
                                           	global	_I2C_End
                                           	global	_I2C_Begin
                                           	global	_I2C_Hold
                                           	global	_I2C_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_i2c_0	udata
                                           r0x100A	res	1
                                           r0x1009	res	1
                                           r0x1008	res	1
                                           r0x1007	res	1
                                           r0x100B	res	1
                                           r0x1006	res	1
                                           r0x1001	res	1
                                           r0x1000	res	1
                                           r0x1002	res	1
                                           r0x1003	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_i2c	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_Read	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;6 compiler assigned registers:
                                           ;   r0x1000
                                           ;   STK00
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;; Starting pCode block
                                           _I2C_Read	;Function start
                                           ; 2 exit points
                                           ;	.line	36; "i2c.c"	unsigned short I2C_Read(unsigned short ack)
000754   1283     bcf     0x03, 0x5        	BANKSEL	r0x1000
000755   1703     bsf     0x03, 0x6        
000756   00e4     movwf   0x64             	MOVWF	r0x1000
000757   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000758   00e3     movwf   0x63             	MOVWF	r0x1001
                                           ;	.line	39; "i2c.c"	I2C_Hold();
000759   2798     call    0x0798           	CALL	_I2C_Hold
                                           ;	.line	40; "i2c.c"	RCEN = 1;
00075a   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
00075b   1303     bcf     0x03, 0x6        
00075c   1591     bsf     0x11, 0x3        	BSF	_SSPCON2bits,3
                                           ;	.line	42; "i2c.c"	I2C_Hold();
00075d   2798     call    0x0798           	CALL	_I2C_Hold
                                           ;	.line	43; "i2c.c"	incoming = SSPBUF;
00075e   1283     bcf     0x03, 0x5        	BANKSEL	_SSPBUF
00075f   1303     bcf     0x03, 0x6        
000760   0813     movf    0x13, 0x0        	MOVF	_SSPBUF,W
000761   1283     bcf     0x03, 0x5        	BANKSEL	r0x1002
000762   1703     bsf     0x03, 0x6        
000763   00e5     movwf   0x65             	MOVWF	r0x1002
000764   01e6     clrf    0x66             	CLRF	r0x1003
                                           ;	.line	44; "i2c.c"	I2C_Hold();
000765   2798     call    0x0798           	CALL	_I2C_Hold
                                           ;	.line	45; "i2c.c"	ACKDT = (ack)?0:1;
000766   1283     bcf     0x03, 0x5        	BANKSEL	r0x1001
000767   1703     bsf     0x03, 0x6        
000768   0863     movf    0x63, 0x0        	MOVF	r0x1001,W
000769   0464     iorwf   0x64, 0x0        	IORWF	r0x1000,W
00076a   3000     movlw   0x00             	MOVLW	0x00
00076b   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00076c   3001     movlw   0x01             	MOVLW	0x01
                                           ;;1	MOVWF	r0x1004
00076d   00e3     movwf   0x63             	MOVWF	r0x1001
00076e   0c63     rrf     0x63, 0x0        	RRF	r0x1001,W
00076f   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000770   2f74     goto    0x0774           	GOTO	_00001_DS_
000771   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
000772   1303     bcf     0x03, 0x6        
000773   1291     bcf     0x11, 0x5        	BCF	_SSPCON2bits,5
                                           _00001_DS_
000774   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000775   2f79     goto    0x0779           	GOTO	_00002_DS_
000776   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
000777   1303     bcf     0x03, 0x6        
000778   1691     bsf     0x11, 0x5        	BSF	_SSPCON2bits,5
                                           _00002_DS_
                                           ;	.line	46; "i2c.c"	ACKEN = 1;
000779   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
00077a   1303     bcf     0x03, 0x6        
00077b   1611     bsf     0x11, 0x4        	BSF	_SSPCON2bits,4
                                           ;	.line	48; "i2c.c"	return incoming;
00077c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1002
00077d   1703     bsf     0x03, 0x6        
00077e   0865     movf    0x65, 0x0        	MOVF	r0x1002,W
00077f   00ff     movwf   0x7f             	MOVWF	STK00
000780   0866     movf    0x66, 0x0        	MOVF	r0x1003,W
000781   0008     return                   	RETURN	
                                           ; exit point of _I2C_Read
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_Write	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;3 compiler assigned registers:
                                           ;   r0x1005
                                           ;   STK00
                                           ;   r0x1006
                                           ;; Starting pCode block
                                           _I2C_Write	;Function start
                                           ; 2 exit points
                                           ;;1	MOVWF	r0x1005
                                           ;	.line	30; "i2c.c"	void I2C_Write(unsigned data)
000782   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000783   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000784   1703     bsf     0x03, 0x6        
000785   00e2     movwf   0x62             	MOVWF	r0x1006
                                           ;	.line	32; "i2c.c"	I2C_Hold();
000786   2798     call    0x0798           	CALL	_I2C_Hold
                                           ;	.line	33; "i2c.c"	SSPBUF = data;
000787   1283     bcf     0x03, 0x5        	BANKSEL	r0x1006
000788   1703     bsf     0x03, 0x6        
000789   0862     movf    0x62, 0x0        	MOVF	r0x1006,W
00078a   1283     bcf     0x03, 0x5        	BANKSEL	_SSPBUF
00078b   1303     bcf     0x03, 0x6        
00078c   0093     movwf   0x13             	MOVWF	_SSPBUF
00078d   0008     return                   	RETURN	
                                           ; exit point of _I2C_Write
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_End	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;; Starting pCode block
                                           _I2C_End	;Function start
                                           ; 2 exit points
                                           ;	.line	26; "i2c.c"	I2C_Hold();
00078e   2798     call    0x0798           	CALL	_I2C_Hold
                                           ;	.line	27; "i2c.c"	PEN = 1;
00078f   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
000790   1303     bcf     0x03, 0x6        
000791   1511     bsf     0x11, 0x2        	BSF	_SSPCON2bits,2
000792   0008     return                   	RETURN	
                                           ; exit point of _I2C_End
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_Begin	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _I2C_Hold
                                           ;   _I2C_Hold
                                           ;; Starting pCode block
                                           _I2C_Begin	;Function start
                                           ; 2 exit points
                                           ;	.line	21; "i2c.c"	I2C_Hold();
000793   2798     call    0x0798           	CALL	_I2C_Hold
                                           ;	.line	22; "i2c.c"	SEN = 1;
000794   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2bits
000795   1303     bcf     0x03, 0x6        
000796   1411     bsf     0x11, 0x0        	BSF	_SSPCON2bits,0
000797   0008     return                   	RETURN	
                                           ; exit point of _I2C_Begin
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_Hold	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _I2C_Hold	;Function start
                                           ; 2 exit points
                                           _00110_DS_
                                           ;	.line	16; "i2c.c"	while (   (SSPCON2 & 0b00011111)    ||    (SSPSTAT & 0b00000100)   ) ;
000798   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2
000799   1303     bcf     0x03, 0x6        
00079a   0811     movf    0x11, 0x0        	MOVF	_SSPCON2,W
00079b   391f     andlw   0x1f             	ANDLW	0x1f
00079c   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00079d   2f98     goto    0x0798           	GOTO	_00110_DS_
00079e   1914     btfsc   0x14, 0x2        	BTFSC	_SSPSTAT,2
00079f   2f98     goto    0x0798           	GOTO	_00110_DS_
0007a0   0008     return                   	RETURN	
                                           ; exit point of _I2C_Hold
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _I2C_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mullong
                                           ;   __divulong
                                           ;   __mullong
                                           ;   __divulong
                                           ;12 compiler assigned registers:
                                           ;   r0x1007
                                           ;   STK00
                                           ;   r0x1008
                                           ;   STK01
                                           ;   r0x1009
                                           ;   STK02
                                           ;   r0x100A
                                           ;   STK06
                                           ;   STK05
                                           ;   STK04
                                           ;   STK03
                                           ;   r0x100B
                                           ;; Starting pCode block
                                           _I2C_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	3; "i2c.c"	void I2C_Init(const unsigned long feq_K)
0007a1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
0007a2   1703     bsf     0x03, 0x6        
0007a3   00e0     movwf   0x60             	MOVWF	r0x1007
0007a4   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0007a5   00df     movwf   0x5f             	MOVWF	r0x1008
0007a6   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0007a7   00de     movwf   0x5e             	MOVWF	r0x1009
0007a8   087d     movf    0x7d, 0x0        	MOVF	STK02,W
0007a9   00dd     movwf   0x5d             	MOVWF	r0x100A
                                           ;	.line	5; "i2c.c"	TRISC3 = 1;  TRISC4 = 1;
0007aa   1683     bsf     0x03, 0x5        	BANKSEL	_TRISCbits
0007ab   1303     bcf     0x03, 0x6        
0007ac   1587     bsf     0x07, 0x3        	BSF	_TRISCbits,3
0007ad   1607     bsf     0x07, 0x4        	BSF	_TRISCbits,4
                                           ;	.line	7; "i2c.c"	SSPCON  = 0b00101000;
0007ae   3028     movlw   0x28             	MOVLW	0x28
0007af   1283     bcf     0x03, 0x5        	BANKSEL	_SSPCON
0007b0   1303     bcf     0x03, 0x6        
0007b1   0094     movwf   0x14             	MOVWF	_SSPCON
                                           ;	.line	8; "i2c.c"	SSPCON2 = 0b00000000;
0007b2   1683     bsf     0x03, 0x5        	BANKSEL	_SSPCON2
0007b3   1303     bcf     0x03, 0x6        
0007b4   0191     clrf    0x11             	CLRF	_SSPCON2
                                           ;	.line	10; "i2c.c"	SSPADD = (_XTAL_FREQ/(4*feq_K*100))-1;
0007b5   1283     bcf     0x03, 0x5        	BANKSEL	r0x100A
0007b6   1703     bsf     0x03, 0x6        
0007b7   085d     movf    0x5d, 0x0        	MOVF	r0x100A,W
0007b8   00f9     movwf   0x79             	MOVWF	STK06
0007b9   085e     movf    0x5e, 0x0        	MOVF	r0x1009,W
0007ba   00fa     movwf   0x7a             	MOVWF	STK05
0007bb   085f     movf    0x5f, 0x0        	MOVF	r0x1008,W
0007bc   00fb     movwf   0x7b             	MOVWF	STK04
0007bd   0860     movf    0x60, 0x0        	MOVF	r0x1007,W
0007be   00fc     movwf   0x7c             	MOVWF	STK03
0007bf   3090     movlw   0x90             	MOVLW	0x90
0007c0   00fd     movwf   0x7d             	MOVWF	STK02
0007c1   3001     movlw   0x01             	MOVLW	0x01
0007c2   00fe     movwf   0x7e             	MOVWF	STK01
0007c3   3000     movlw   0x00             	MOVLW	0x00
0007c4   00ff     movwf   0x7f             	MOVWF	STK00
0007c5   3000     movlw   0x00             	MOVLW	0x00
0007c6   118a     bcf     0x0a, 0x3        	PAGESEL	__mullong
0007c7   160a     bsf     0x0a, 0x4        
0007c8   252a     call    0x052a           	CALL	__mullong
0007c9   118a     bcf     0x0a, 0x3        	PAGESEL	$
0007ca   120a     bcf     0x0a, 0x4        
0007cb   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
0007cc   1703     bsf     0x03, 0x6        
0007cd   00e0     movwf   0x60             	MOVWF	r0x1007
0007ce   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0007cf   00df     movwf   0x5f             	MOVWF	r0x1008
0007d0   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0007d1   00de     movwf   0x5e             	MOVWF	r0x1009
0007d2   087d     movf    0x7d, 0x0        	MOVF	STK02,W
0007d3   00dd     movwf   0x5d             	MOVWF	r0x100A
0007d4   00f9     movwf   0x79             	MOVWF	STK06
0007d5   085e     movf    0x5e, 0x0        	MOVF	r0x1009,W
0007d6   00fa     movwf   0x7a             	MOVWF	STK05
0007d7   085f     movf    0x5f, 0x0        	MOVF	r0x1008,W
0007d8   00fb     movwf   0x7b             	MOVWF	STK04
0007d9   0860     movf    0x60, 0x0        	MOVF	r0x1007,W
0007da   00fc     movwf   0x7c             	MOVWF	STK03
0007db   3000     movlw   0x00             	MOVLW	0x00
0007dc   00fd     movwf   0x7d             	MOVWF	STK02
0007dd   3012     movlw   0x12             	MOVLW	0x12
0007de   00fe     movwf   0x7e             	MOVWF	STK01
0007df   307a     movlw   0x7a             	MOVLW	0x7a
0007e0   00ff     movwf   0x7f             	MOVWF	STK00
0007e1   3000     movlw   0x00             	MOVLW	0x00
0007e2   118a     bcf     0x0a, 0x3        	PAGESEL	__divulong
0007e3   160a     bsf     0x0a, 0x4        
0007e4   2674     call    0x0674           	CALL	__divulong
0007e5   118a     bcf     0x0a, 0x3        	PAGESEL	$
0007e6   120a     bcf     0x0a, 0x4        
0007e7   1283     bcf     0x03, 0x5        	BANKSEL	r0x1007
0007e8   1703     bsf     0x03, 0x6        
0007e9   00e0     movwf   0x60             	MOVWF	r0x1007
0007ea   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0007eb   00df     movwf   0x5f             	MOVWF	r0x1008
0007ec   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0007ed   00de     movwf   0x5e             	MOVWF	r0x1009
0007ee   087d     movf    0x7d, 0x0        	MOVF	STK02,W
0007ef   00dd     movwf   0x5d             	MOVWF	r0x100A
0007f0   00e1     movwf   0x61             	MOVWF	r0x100B
0007f1   0361     decf    0x61, 0x0        	DECF	r0x100B,W
0007f2   1683     bsf     0x03, 0x5        	BANKSEL	_SSPADD
0007f3   1303     bcf     0x03, 0x6        
0007f4   0093     movwf   0x13             	MOVWF	_SSPADD
                                           ;	.line	11; "i2c.c"	SSPSTAT = 0b00000000;
0007f5   0194     clrf    0x14             	CLRF	_SSPSTAT
0007f6   0008     return                   	RETURN	
                                           ; exit point of _I2C_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  109+   27 =   136 instructions (  326 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:22 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"Interrupt.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_SettingMode_update
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_LED_Init
                                           	extern	_LED_GetState
                                           	extern	_LED_Update
                                           	extern	_Heater_Init
                                           	extern	_Heater_update
                                           	extern	_Heater_GetState
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pex_update
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	___sdcc_saved_fsr
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_ISR
                                           	global	_RB0Int_update
                                           	global	_RB0_INT_Init
                                           	global	_flag
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_Interrupt_0	udata
                                           r0x1008	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           
                                           ID_Interrupt_0	idata
                                           _flag
                                           	db	0x00
                                           
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; interrupt and initialization code
                                           ;--------------------------------------------------------
                                           c_interrupt	code	0x4
                                           __sdcc_interrupt
                                           ;***
                                           ;  pBlock Stats: dbName = I
                                           ;***
                                           ;entry:  _ISR	;Function start
                                           ; 0 exit points
                                           ;functions called:
                                           ;   _RB0Int_update
                                           ;   _RB0Int_update
                                           ;; Starting pCode block
                                           _ISR	;Function start
                                           ; 0 exit points
                                           ;	.line	19; "Interrupt.c"	void ISR(void)__interrupt 0
000004   00f2     movwf   0x72             	MOVWF	WSAVE
000005   0e03     swapf   0x03, 0x0        	SWAPF	STATUS,W
000006   0183     clrf    0x03             	CLRF	STATUS
000007   00f1     movwf   0x71             	MOVWF	SSAVE
000008   080a     movf    0x0a, 0x0        	MOVF	PCLATH,W
000009   018a     clrf    0x0a             	CLRF	PCLATH
00000a   00f0     movwf   0x70             	MOVWF	PSAVE
00000b   0804     movf    0x04, 0x0        	MOVF	FSR,W
00000c   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
00000d   1703     bsf     0x03, 0x6        
00000e   00c3     movwf   0x43             	MOVWF	___sdcc_saved_fsr
                                           ;	.line	22; "Interrupt.c"	if(TMR0IF)
00000f   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000010   1303     bcf     0x03, 0x6        
000011   1d0b     btfss   0x0b, 0x2        	BTFSS	_INTCONbits,2
000012   281c     goto    0x001c           	GOTO	_00114_DS_
                                           ;	.line	24; "Interrupt.c"	flag = 1 ; //execute main program
000013   3001     movlw   0x01             	MOVLW	0x01
000014   1683     bsf     0x03, 0x5        	BANKSEL	_flag
000015   1703     bsf     0x03, 0x6        
000016   00c0     movwf   0x40             	MOVWF	_flag
                                           ;	.line	25; "Interrupt.c"	TMR0_InterruptFlag_Clear();
000017   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000018   1303     bcf     0x03, 0x6        
000019   110b     bcf     0x0b, 0x2        	BCF	_INTCONbits,2
                                           ;	.line	26; "Interrupt.c"	TMR0_UPDATE_REGISTER(20);
00001a   3060     movlw   0x60             	MOVLW	0x60
00001b   0081     movwf   0x01             	MOVWF	_TMR0
                                           _00114_DS_
                                           ;	.line	29; "Interrupt.c"	if(INTF)
00001c   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
00001d   1303     bcf     0x03, 0x6        
00001e   1c8b     btfss   0x0b, 0x1        	BTFSS	_INTCONbits,1
00001f   2828     goto    0x0028           	GOTO	_00117_DS_
                                           ;	.line	31; "Interrupt.c"	RB0Int_update();
000020   158a     bsf     0x0a, 0x3        	PAGESEL	_RB0Int_update
000021   160a     bsf     0x0a, 0x4        
000022   20b5     call    0x00b5           	CALL	_RB0Int_update
000023   118a     bcf     0x0a, 0x3        	PAGESEL	$
000024   120a     bcf     0x0a, 0x4        
                                           ;	.line	33; "Interrupt.c"	CLEAR_RB0_EXINT_FLAG();
000025   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000026   1303     bcf     0x03, 0x6        
000027   108b     bcf     0x0b, 0x1        	BCF	_INTCONbits,1
                                           _00117_DS_
000028   1683     bsf     0x03, 0x5        	BANKSEL	___sdcc_saved_fsr
000029   1703     bsf     0x03, 0x6        
00002a   0843     movf    0x43, 0x0        	MOVF	___sdcc_saved_fsr,W
00002b   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00002c   1303     bcf     0x03, 0x6        
00002d   0084     movwf   0x04             	MOVWF	FSR
00002e   0870     movf    0x70, 0x0        	MOVF	PSAVE,W
00002f   008a     movwf   0x0a             	MOVWF	PCLATH
000030   0183     clrf    0x03             	CLRF	STATUS
000031   0e71     swapf   0x71, 0x0        	SWAPF	SSAVE,W
000032   0083     movwf   0x03             	MOVWF	STATUS
000033   0ef2     swapf   0x72, 0x1        	SWAPF	WSAVE,F
000034   0e72     swapf   0x72, 0x0        	SWAPF	WSAVE,W
                                           END_OF_INTERRUPT
000035   0009     retfie                   	RETFIE	
                                           
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_Interrupt	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _RB0Int_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;1 compiler assigned register :
                                           ;   r0x1008
                                           ;; Starting pCode block
                                           _RB0Int_update	;Function start
                                           ; 2 exit points
                                           ;	.line	16; "Interrupt.c"	Flags.Operation_Flag ^= 1 ; //toggle the mode once pressing power push button
0018b5   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
0018b6   1703     bsf     0x03, 0x6        
0018b7   0833     movf    0x33, 0x0        	MOVF	(_Flags + 4),W
0018b8   1683     bsf     0x03, 0x5        	BANKSEL	r0x1008
0018b9   1703     bsf     0x03, 0x6        
0018ba   00bf     movwf   0x3f             	MOVWF	r0x1008
0018bb   3001     movlw   0x01             	MOVLW	0x01
0018bc   06bf     xorwf   0x3f, 0x1        	XORWF	r0x1008,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
0018bd   083f     movf    0x3f, 0x0        	MOVF	r0x1008,W
0018be   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
0018bf   1703     bsf     0x03, 0x6        
0018c0   00b3     movwf   0x33             	MOVWF	(_Flags + 4)
0018c1   0008     return                   	RETURN	
                                           ; exit point of _RB0Int_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _RB0_INT_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;2 compiler assigned registers:
                                           ;   STK01
                                           ;   STK00
                                           ;; Starting pCode block
                                           _RB0_INT_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	7; "Interrupt.c"	GPIO_InitPortPin(PORT_B,0,GPIO_IN);
0018c2   3001     movlw   0x01             	MOVLW	0x01
0018c3   00fe     movwf   0x7e             	MOVWF	STK01
0018c4   3000     movlw   0x00             	MOVLW	0x00
0018c5   00ff     movwf   0x7f             	MOVWF	STK00
0018c6   3001     movlw   0x01             	MOVLW	0x01
0018c7   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
0018c8   120a     bcf     0x0a, 0x4        
0018c9   265f     call    0x065f           	CALL	_GPIO_InitPortPin
0018ca   158a     bsf     0x0a, 0x3        	PAGESEL	$
0018cb   160a     bsf     0x0a, 0x4        
                                           ;	.line	8; "Interrupt.c"	GLOBAL_INT_ENABLE();
0018cc   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
0018cd   1303     bcf     0x03, 0x6        
0018ce   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	9; "Interrupt.c"	RB0_EXINT_ENABLE();
0018cf   160b     bsf     0x0b, 0x4        	BSF	_INTCONbits,4
                                           ;	.line	10; "Interrupt.c"	SET_RB0_EDGE(EDGE);//select edge from the header file
0018d0   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
0018d1   1303     bcf     0x03, 0x6        
0018d2   1701     bsf     0x01, 0x6        	BSF	_OPTION_REGbits,6
                                           ;	.line	11; "Interrupt.c"	CLEAR_RB0_EXINT_FLAG();
0018d3   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
0018d4   1303     bcf     0x03, 0x6        
0018d5   108b     bcf     0x0b, 0x1        	BCF	_INTCONbits,1
0018d6   0008     return                   	RETURN	
                                           ; exit point of _RB0_INT_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   48+   18 =    66 instructions (  168 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:22 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"led.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_Heater_Init
                                           	extern	_Heater_update
                                           	extern	_Heater_GetState
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pex_update
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_SettingMode_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_LED_GetState
                                           	global	_LED_Update
                                           	global	_LED_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_led_0	udata
                                           r0x1015	res	1
                                           r0x1016	res	1
                                           r0x1014	res	1
                                           r0x1010	res	1
                                           r0x1011	res	1
                                           r0x1012	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_led	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _LED_Toggle	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _LED_GetState
                                           ;   _LED_SetState
                                           ;   _LED_SetState
                                           ;   _LED_GetState
                                           ;   _LED_SetState
                                           ;   _LED_SetState
                                           ;3 compiler assigned registers:
                                           ;   r0x1012
                                           ;   r0x1013
                                           ;   STK00
                                           ;; Starting pCode block
                                           _LED_Toggle	;Function start
                                           ; 2 exit points
                                           ;	.line	117; "led.c"	static void LED_Toggle(tLED led)
001171   1683     bsf     0x03, 0x5        	BANKSEL	r0x1012
001172   1703     bsf     0x03, 0x6        
001173   00ae     movwf   0x2e             	MOVWF	r0x1012
                                           ;	.line	119; "led.c"	if (LED_GetState(led) == LED_ON)
001174   21e1     call    0x01e1           	CALL	_LED_GetState
                                           ;;1	MOVWF	r0x1013
001175   3a01     xorlw   0x01             	XORLW	0x01
001176   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001177   297f     goto    0x017f           	GOTO	_00226_DS_
                                           ;	.line	121; "led.c"	LED_SetState(led, LED_OFF);
001178   3000     movlw   0x00             	MOVLW	0x00
001179   00ff     movwf   0x7f             	MOVWF	STK00
00117a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1012
00117b   1703     bsf     0x03, 0x6        
00117c   082e     movf    0x2e, 0x0        	MOVF	r0x1012,W
00117d   2186     call    0x0186           	CALL	_LED_SetState
00117e   2985     goto    0x0185           	GOTO	_00228_DS_
                                           _00226_DS_
                                           ;	.line	125; "led.c"	LED_SetState(led, LED_ON);
00117f   3001     movlw   0x01             	MOVLW	0x01
001180   00ff     movwf   0x7f             	MOVWF	STK00
001181   1683     bsf     0x03, 0x5        	BANKSEL	r0x1012
001182   1703     bsf     0x03, 0x6        
001183   082e     movf    0x2e, 0x0        	MOVF	r0x1012,W
001184   2186     call    0x0186           	CALL	_LED_SetState
                                           _00228_DS_
001185   0008     return                   	RETURN	
                                           ; exit point of _LED_Toggle
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _LED_SetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;4 compiler assigned registers:
                                           ;   r0x1010
                                           ;   STK00
                                           ;   r0x1011
                                           ;   STK01
                                           ;; Starting pCode block
                                           _LED_SetState	;Function start
                                           ; 2 exit points
                                           ;	.line	91; "led.c"	static void LED_SetState(tLED led, tLED_State state)
001186   1683     bsf     0x03, 0x5        	BANKSEL	r0x1010
001187   1703     bsf     0x03, 0x6        
001188   00ac     movwf   0x2c             	MOVWF	r0x1010
001189   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00118a   00ad     movwf   0x2d             	MOVWF	r0x1011
                                           ;	.line	93; "led.c"	switch(led)
00118b   082c     movf    0x2c, 0x0        	MOVF	r0x1010,W
00118c   3a01     xorlw   0x01             	XORLW	0x01
00118d   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00118e   29a0     goto    0x01a0           	GOTO	_00192_DS_
00118f   082c     movf    0x2c, 0x0        	MOVF	r0x1010,W
001190   3a02     xorlw   0x02             	XORLW	0x02
001191   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001192   29ad     goto    0x01ad           	GOTO	_00193_DS_
001193   082c     movf    0x2c, 0x0        	MOVF	r0x1010,W
001194   3a03     xorlw   0x03             	XORLW	0x03
001195   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001196   29ba     goto    0x01ba           	GOTO	_00194_DS_
001197   082c     movf    0x2c, 0x0        	MOVF	r0x1010,W
001198   3a04     xorlw   0x04             	XORLW	0x04
001199   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00119a   29c7     goto    0x01c7           	GOTO	_00195_DS_
00119b   082c     movf    0x2c, 0x0        	MOVF	r0x1010,W
00119c   3a07     xorlw   0x07             	XORLW	0x07
00119d   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00119e   29d4     goto    0x01d4           	GOTO	_00196_DS_
00119f   29e0     goto    0x01e0           	GOTO	_00199_DS_
                                           _00192_DS_
                                           ;	.line	96; "led.c"	GPIO_SetPortPinState(PORT_B, 0, state);
0011a0   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0011a1   1703     bsf     0x03, 0x6        
0011a2   082d     movf    0x2d, 0x0        	MOVF	r0x1011,W
0011a3   00fe     movwf   0x7e             	MOVWF	STK01
0011a4   3000     movlw   0x00             	MOVLW	0x00
0011a5   00ff     movwf   0x7f             	MOVWF	STK00
0011a6   3001     movlw   0x01             	MOVLW	0x01
0011a7   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
0011a8   120a     bcf     0x0a, 0x4        
0011a9   2553     call    0x0553           	CALL	_GPIO_SetPortPinState
0011aa   118a     bcf     0x0a, 0x3        	PAGESEL	$
0011ab   160a     bsf     0x0a, 0x4        
                                           ;	.line	97; "led.c"	break;
0011ac   29e0     goto    0x01e0           	GOTO	_00199_DS_
                                           _00193_DS_
                                           ;	.line	99; "led.c"	GPIO_SetPortPinState(PORT_B, 1, state);
0011ad   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0011ae   1703     bsf     0x03, 0x6        
0011af   082d     movf    0x2d, 0x0        	MOVF	r0x1011,W
0011b0   00fe     movwf   0x7e             	MOVWF	STK01
0011b1   3001     movlw   0x01             	MOVLW	0x01
0011b2   00ff     movwf   0x7f             	MOVWF	STK00
0011b3   3001     movlw   0x01             	MOVLW	0x01
0011b4   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
0011b5   120a     bcf     0x0a, 0x4        
0011b6   2553     call    0x0553           	CALL	_GPIO_SetPortPinState
0011b7   118a     bcf     0x0a, 0x3        	PAGESEL	$
0011b8   160a     bsf     0x0a, 0x4        
                                           ;	.line	100; "led.c"	break;
0011b9   29e0     goto    0x01e0           	GOTO	_00199_DS_
                                           _00194_DS_
                                           ;	.line	102; "led.c"	GPIO_SetPortPinState(PORT_B, 2, state);
0011ba   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0011bb   1703     bsf     0x03, 0x6        
0011bc   082d     movf    0x2d, 0x0        	MOVF	r0x1011,W
0011bd   00fe     movwf   0x7e             	MOVWF	STK01
0011be   3002     movlw   0x02             	MOVLW	0x02
0011bf   00ff     movwf   0x7f             	MOVWF	STK00
0011c0   3001     movlw   0x01             	MOVLW	0x01
0011c1   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
0011c2   120a     bcf     0x0a, 0x4        
0011c3   2553     call    0x0553           	CALL	_GPIO_SetPortPinState
0011c4   118a     bcf     0x0a, 0x3        	PAGESEL	$
0011c5   160a     bsf     0x0a, 0x4        
                                           ;	.line	103; "led.c"	break;
0011c6   29e0     goto    0x01e0           	GOTO	_00199_DS_
                                           _00195_DS_
                                           ;	.line	105; "led.c"	GPIO_SetPortPinState(PORT_B, 3, state);
0011c7   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0011c8   1703     bsf     0x03, 0x6        
0011c9   082d     movf    0x2d, 0x0        	MOVF	r0x1011,W
0011ca   00fe     movwf   0x7e             	MOVWF	STK01
0011cb   3003     movlw   0x03             	MOVLW	0x03
0011cc   00ff     movwf   0x7f             	MOVWF	STK00
0011cd   3001     movlw   0x01             	MOVLW	0x01
0011ce   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
0011cf   120a     bcf     0x0a, 0x4        
0011d0   2553     call    0x0553           	CALL	_GPIO_SetPortPinState
0011d1   118a     bcf     0x0a, 0x3        	PAGESEL	$
0011d2   160a     bsf     0x0a, 0x4        
                                           ;	.line	106; "led.c"	break;
0011d3   29e0     goto    0x01e0           	GOTO	_00199_DS_
                                           _00196_DS_
                                           ;	.line	108; "led.c"	GPIO_SetPortPinState(PORT_B, 7, state);
0011d4   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
0011d5   1703     bsf     0x03, 0x6        
0011d6   082d     movf    0x2d, 0x0        	MOVF	r0x1011,W
0011d7   00fe     movwf   0x7e             	MOVWF	STK01
0011d8   3007     movlw   0x07             	MOVLW	0x07
0011d9   00ff     movwf   0x7f             	MOVWF	STK00
0011da   3001     movlw   0x01             	MOVLW	0x01
0011db   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
0011dc   120a     bcf     0x0a, 0x4        
0011dd   2553     call    0x0553           	CALL	_GPIO_SetPortPinState
0011de   118a     bcf     0x0a, 0x3        	PAGESEL	$
0011df   160a     bsf     0x0a, 0x4        
                                           _00199_DS_
                                           ;	.line	113; "led.c"	}
0011e0   0008     return                   	RETURN	
                                           ; exit point of _LED_SetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _LED_GetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;3 compiler assigned registers:
                                           ;   r0x1010
                                           ;   r0x1011
                                           ;   STK00
                                           ;; Starting pCode block
                                           _LED_GetState	;Function start
                                           ; 2 exit points
                                           ;	.line	62; "led.c"	tLED_State LED_GetState(tLED led)
0011e1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1010
0011e2   1703     bsf     0x03, 0x6        
0011e3   00ac     movwf   0x2c             	MOVWF	r0x1010
                                           ;	.line	64; "led.c"	tLED_State ret = LED_OFF;
0011e4   01ad     clrf    0x2d             	CLRF	r0x1011
                                           ;	.line	66; "led.c"	switch(led)
0011e5   082c     movf    0x2c, 0x0        	MOVF	r0x1010,W
0011e6   3a01     xorlw   0x01             	XORLW	0x01
0011e7   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0011e8   29fa     goto    0x01fa           	GOTO	_00159_DS_
0011e9   082c     movf    0x2c, 0x0        	MOVF	r0x1010,W
0011ea   3a02     xorlw   0x02             	XORLW	0x02
0011eb   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0011ec   2a06     goto    0x0206           	GOTO	_00160_DS_
0011ed   082c     movf    0x2c, 0x0        	MOVF	r0x1010,W
0011ee   3a03     xorlw   0x03             	XORLW	0x03
0011ef   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0011f0   2a12     goto    0x0212           	GOTO	_00161_DS_
0011f1   082c     movf    0x2c, 0x0        	MOVF	r0x1010,W
0011f2   3a04     xorlw   0x04             	XORLW	0x04
0011f3   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0011f4   2a1e     goto    0x021e           	GOTO	_00162_DS_
0011f5   082c     movf    0x2c, 0x0        	MOVF	r0x1010,W
0011f6   3a07     xorlw   0x07             	XORLW	0x07
0011f7   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0011f8   2a2a     goto    0x022a           	GOTO	_00163_DS_
0011f9   2a35     goto    0x0235           	GOTO	_00165_DS_
                                           _00159_DS_
                                           ;	.line	69; "led.c"	ret = GPIO_GetPortPinState(PORT_B, 0);
0011fa   3000     movlw   0x00             	MOVLW	0x00
0011fb   00ff     movwf   0x7f             	MOVWF	STK00
0011fc   3001     movlw   0x01             	MOVLW	0x01
0011fd   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
0011fe   120a     bcf     0x0a, 0x4        
0011ff   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
001200   118a     bcf     0x0a, 0x3        	PAGESEL	$
001201   160a     bsf     0x0a, 0x4        
001202   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
001203   1703     bsf     0x03, 0x6        
001204   00ad     movwf   0x2d             	MOVWF	r0x1011
                                           ;	.line	70; "led.c"	break;
001205   2a35     goto    0x0235           	GOTO	_00165_DS_
                                           _00160_DS_
                                           ;	.line	72; "led.c"	ret = GPIO_GetPortPinState(PORT_B, 1);
001206   3001     movlw   0x01             	MOVLW	0x01
001207   00ff     movwf   0x7f             	MOVWF	STK00
001208   3001     movlw   0x01             	MOVLW	0x01
001209   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
00120a   120a     bcf     0x0a, 0x4        
00120b   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
00120c   118a     bcf     0x0a, 0x3        	PAGESEL	$
00120d   160a     bsf     0x0a, 0x4        
00120e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00120f   1703     bsf     0x03, 0x6        
001210   00ad     movwf   0x2d             	MOVWF	r0x1011
                                           ;	.line	73; "led.c"	break;
001211   2a35     goto    0x0235           	GOTO	_00165_DS_
                                           _00161_DS_
                                           ;	.line	75; "led.c"	ret = GPIO_GetPortPinState(PORT_B, 2);
001212   3002     movlw   0x02             	MOVLW	0x02
001213   00ff     movwf   0x7f             	MOVWF	STK00
001214   3001     movlw   0x01             	MOVLW	0x01
001215   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
001216   120a     bcf     0x0a, 0x4        
001217   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
001218   118a     bcf     0x0a, 0x3        	PAGESEL	$
001219   160a     bsf     0x0a, 0x4        
00121a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
00121b   1703     bsf     0x03, 0x6        
00121c   00ad     movwf   0x2d             	MOVWF	r0x1011
                                           ;	.line	76; "led.c"	break;
00121d   2a35     goto    0x0235           	GOTO	_00165_DS_
                                           _00162_DS_
                                           ;	.line	78; "led.c"	ret = GPIO_GetPortPinState(PORT_B, 3);
00121e   3003     movlw   0x03             	MOVLW	0x03
00121f   00ff     movwf   0x7f             	MOVWF	STK00
001220   3001     movlw   0x01             	MOVLW	0x01
001221   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
001222   120a     bcf     0x0a, 0x4        
001223   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
001224   118a     bcf     0x0a, 0x3        	PAGESEL	$
001225   160a     bsf     0x0a, 0x4        
001226   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
001227   1703     bsf     0x03, 0x6        
001228   00ad     movwf   0x2d             	MOVWF	r0x1011
                                           ;	.line	79; "led.c"	break;
001229   2a35     goto    0x0235           	GOTO	_00165_DS_
                                           _00163_DS_
                                           ;	.line	81; "led.c"	ret = GPIO_GetPortPinState(PORT_B, 7);
00122a   3007     movlw   0x07             	MOVLW	0x07
00122b   00ff     movwf   0x7f             	MOVWF	STK00
00122c   3001     movlw   0x01             	MOVLW	0x01
00122d   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
00122e   120a     bcf     0x0a, 0x4        
00122f   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
001230   118a     bcf     0x0a, 0x3        	PAGESEL	$
001231   160a     bsf     0x0a, 0x4        
001232   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
001233   1703     bsf     0x03, 0x6        
001234   00ad     movwf   0x2d             	MOVWF	r0x1011
                                           _00165_DS_
                                           ;	.line	88; "led.c"	return ret;
001235   1683     bsf     0x03, 0x5        	BANKSEL	r0x1011
001236   1703     bsf     0x03, 0x6        
001237   082d     movf    0x2d, 0x0        	MOVF	r0x1011,W
001238   0008     return                   	RETURN	
                                           ; exit point of _LED_GetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _LED_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _LED_SetState
                                           ;   _LED_Toggle
                                           ;   _LED_SetState
                                           ;   _LED_SetState
                                           ;   _LED_Toggle
                                           ;   _LED_SetState
                                           ;2 compiler assigned registers:
                                           ;   r0x1014
                                           ;   STK00
                                           ;; Starting pCode block
                                           _LED_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	39; "led.c"	switch(Flags.Toggle_led)
001239   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
00123a   1703     bsf     0x03, 0x6        
00123b   0830     movf    0x30, 0x0        	MOVF	(_Flags + 1),W
00123c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00123d   1703     bsf     0x03, 0x6        
00123e   00ab     movwf   0x2b             	MOVWF	r0x1014
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x3=3), size=1
00123f   3003     movlw   0x03             	MOVLW	0x03
001240   022b     subwf   0x2b, 0x0        	SUBWF	r0x1014,W
001241   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
001242   2a7a     goto    0x027a           	GOTO	_00145_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
001243   3012     movlw   0x12             	MOVLW	HIGH(_00154_DS_)
001244   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
001245   1303     bcf     0x03, 0x6        
001246   008a     movwf   0x0a             	MOVWF	PCLATH
001247   3051     movlw   0x51             	MOVLW	_00154_DS_
001248   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
001249   1703     bsf     0x03, 0x6        
00124a   072b     addwf   0x2b, 0x0        	ADDWF	r0x1014,W
00124b   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00124c   2a50     goto    0x0250           	GOTO	_00001_DS_
00124d   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00124e   1303     bcf     0x03, 0x6        
00124f   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00001_DS_
001250   0082     movwf   0x02             	MOVWF	PCL
                                           _00154_DS_
001251   2a54     goto    0x0254           	GOTO	_00138_DS_
001252   2a59     goto    0x0259           	GOTO	_00139_DS_
001253   2a76     goto    0x0276           	GOTO	_00142_DS_
                                           _00138_DS_
                                           ;	.line	42; "led.c"	LED_SetState(LED_7,LED_ON);
001254   3001     movlw   0x01             	MOVLW	0x01
001255   00ff     movwf   0x7f             	MOVWF	STK00
001256   3007     movlw   0x07             	MOVLW	0x07
001257   2186     call    0x0186           	CALL	_LED_SetState
                                           ;	.line	43; "led.c"	break;
001258   2a7a     goto    0x027a           	GOTO	_00145_DS_
                                           _00139_DS_
                                           ;	.line	45; "led.c"	if(Counters.Led_counter == 50)
001259   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00125a   1703     bsf     0x03, 0x6        
00125b   0814     movf    0x14, 0x0        	MOVF	(_Counters + 4),W
00125c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00125d   1703     bsf     0x03, 0x6        
00125e   00ab     movwf   0x2b             	MOVWF	r0x1014
00125f   3a32     xorlw   0x32             	XORLW	0x32
001260   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001261   2a6a     goto    0x026a           	GOTO	_00141_DS_
                                           ;	.line	47; "led.c"	LED_Toggle(LED_7);
001262   3007     movlw   0x07             	MOVLW	0x07
001263   2171     call    0x0171           	CALL	_LED_Toggle
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	48; "led.c"	Counters.Led_counter = 0 ;
001264   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001265   1703     bsf     0x03, 0x6        
001266   0194     clrf    0x14             	CLRF	(_Counters + 4)
                                           ;	.line	49; "led.c"	RC7 = 1;
001267   1283     bcf     0x03, 0x5        	BANKSEL	_PORTCbits
001268   1303     bcf     0x03, 0x6        
001269   1787     bsf     0x07, 0x7        	BSF	_PORTCbits,7
                                           _00141_DS_
                                           ;	.line	51; "led.c"	Counters.Led_counter++ ;
00126a   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00126b   1703     bsf     0x03, 0x6        
00126c   0814     movf    0x14, 0x0        	MOVF	(_Counters + 4),W
00126d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00126e   1703     bsf     0x03, 0x6        
00126f   00ab     movwf   0x2b             	MOVWF	r0x1014
001270   0aab     incf    0x2b, 0x1        	INCF	r0x1014,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
001271   082b     movf    0x2b, 0x0        	MOVF	r0x1014,W
001272   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001273   1703     bsf     0x03, 0x6        
001274   0094     movwf   0x14             	MOVWF	(_Counters + 4)
                                           ;	.line	52; "led.c"	break;
001275   2a7a     goto    0x027a           	GOTO	_00145_DS_
                                           _00142_DS_
                                           ;	.line	54; "led.c"	LED_SetState(LED_7,LED_OFF);
001276   3000     movlw   0x00             	MOVLW	0x00
001277   00ff     movwf   0x7f             	MOVWF	STK00
001278   3007     movlw   0x07             	MOVLW	0x07
001279   2186     call    0x0186           	CALL	_LED_SetState
                                           _00145_DS_
                                           ;	.line	58; "led.c"	}
00127a   0008     return                   	RETURN	
                                           ; exit point of _LED_Update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _LED_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _LED_SetState
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _LED_SetState
                                           ;4 compiler assigned registers:
                                           ;   r0x1015
                                           ;   STK00
                                           ;   r0x1016
                                           ;   STK01
                                           ;; Starting pCode block
                                           _LED_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	3; "led.c"	void LED_Init(tLED led, tLED_State initial_state)
00127b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
00127c   1703     bsf     0x03, 0x6        
00127d   00a9     movwf   0x29             	MOVWF	r0x1015
00127e   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00127f   00aa     movwf   0x2a             	MOVWF	r0x1016
                                           ;	.line	6; "led.c"	switch(led)
001280   0829     movf    0x29, 0x0        	MOVF	r0x1015,W
001281   3a01     xorlw   0x01             	XORLW	0x01
001282   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001283   2a95     goto    0x0295           	GOTO	_00105_DS_
001284   0829     movf    0x29, 0x0        	MOVF	r0x1015,W
001285   3a02     xorlw   0x02             	XORLW	0x02
001286   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001287   2aa0     goto    0x02a0           	GOTO	_00106_DS_
001288   0829     movf    0x29, 0x0        	MOVF	r0x1015,W
001289   3a03     xorlw   0x03             	XORLW	0x03
00128a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00128b   2aab     goto    0x02ab           	GOTO	_00107_DS_
00128c   0829     movf    0x29, 0x0        	MOVF	r0x1015,W
00128d   3a04     xorlw   0x04             	XORLW	0x04
00128e   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00128f   2ab6     goto    0x02b6           	GOTO	_00108_DS_
001290   0829     movf    0x29, 0x0        	MOVF	r0x1015,W
001291   3a07     xorlw   0x07             	XORLW	0x07
001292   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001293   2ac1     goto    0x02c1           	GOTO	_00109_DS_
001294   2acb     goto    0x02cb           	GOTO	_00111_DS_
                                           _00105_DS_
                                           ;	.line	10; "led.c"	GPIO_InitPortPin(PORT_B, 0, GPIO_OUT);
001295   3000     movlw   0x00             	MOVLW	0x00
001296   00fe     movwf   0x7e             	MOVWF	STK01
001297   3000     movlw   0x00             	MOVLW	0x00
001298   00ff     movwf   0x7f             	MOVWF	STK00
001299   3001     movlw   0x01             	MOVLW	0x01
00129a   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
00129b   120a     bcf     0x0a, 0x4        
00129c   265f     call    0x065f           	CALL	_GPIO_InitPortPin
00129d   118a     bcf     0x0a, 0x3        	PAGESEL	$
00129e   160a     bsf     0x0a, 0x4        
                                           ;	.line	11; "led.c"	break;
00129f   2acb     goto    0x02cb           	GOTO	_00111_DS_
                                           _00106_DS_
                                           ;	.line	14; "led.c"	GPIO_InitPortPin(PORT_B, 1, GPIO_OUT);
0012a0   3000     movlw   0x00             	MOVLW	0x00
0012a1   00fe     movwf   0x7e             	MOVWF	STK01
0012a2   3001     movlw   0x01             	MOVLW	0x01
0012a3   00ff     movwf   0x7f             	MOVWF	STK00
0012a4   3001     movlw   0x01             	MOVLW	0x01
0012a5   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
0012a6   120a     bcf     0x0a, 0x4        
0012a7   265f     call    0x065f           	CALL	_GPIO_InitPortPin
0012a8   118a     bcf     0x0a, 0x3        	PAGESEL	$
0012a9   160a     bsf     0x0a, 0x4        
                                           ;	.line	15; "led.c"	break;
0012aa   2acb     goto    0x02cb           	GOTO	_00111_DS_
                                           _00107_DS_
                                           ;	.line	18; "led.c"	GPIO_InitPortPin(PORT_B, 2, GPIO_OUT);
0012ab   3000     movlw   0x00             	MOVLW	0x00
0012ac   00fe     movwf   0x7e             	MOVWF	STK01
0012ad   3002     movlw   0x02             	MOVLW	0x02
0012ae   00ff     movwf   0x7f             	MOVWF	STK00
0012af   3001     movlw   0x01             	MOVLW	0x01
0012b0   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
0012b1   120a     bcf     0x0a, 0x4        
0012b2   265f     call    0x065f           	CALL	_GPIO_InitPortPin
0012b3   118a     bcf     0x0a, 0x3        	PAGESEL	$
0012b4   160a     bsf     0x0a, 0x4        
                                           ;	.line	19; "led.c"	break;
0012b5   2acb     goto    0x02cb           	GOTO	_00111_DS_
                                           _00108_DS_
                                           ;	.line	22; "led.c"	GPIO_InitPortPin(PORT_B, 3, GPIO_OUT);
0012b6   3000     movlw   0x00             	MOVLW	0x00
0012b7   00fe     movwf   0x7e             	MOVWF	STK01
0012b8   3003     movlw   0x03             	MOVLW	0x03
0012b9   00ff     movwf   0x7f             	MOVWF	STK00
0012ba   3001     movlw   0x01             	MOVLW	0x01
0012bb   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
0012bc   120a     bcf     0x0a, 0x4        
0012bd   265f     call    0x065f           	CALL	_GPIO_InitPortPin
0012be   118a     bcf     0x0a, 0x3        	PAGESEL	$
0012bf   160a     bsf     0x0a, 0x4        
                                           ;	.line	23; "led.c"	break;
0012c0   2acb     goto    0x02cb           	GOTO	_00111_DS_
                                           _00109_DS_
                                           ;	.line	26; "led.c"	GPIO_InitPortPin(PORT_B, 7, GPIO_OUT);
0012c1   3000     movlw   0x00             	MOVLW	0x00
0012c2   00fe     movwf   0x7e             	MOVWF	STK01
0012c3   3007     movlw   0x07             	MOVLW	0x07
0012c4   00ff     movwf   0x7f             	MOVWF	STK00
0012c5   3001     movlw   0x01             	MOVLW	0x01
0012c6   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
0012c7   120a     bcf     0x0a, 0x4        
0012c8   265f     call    0x065f           	CALL	_GPIO_InitPortPin
0012c9   118a     bcf     0x0a, 0x3        	PAGESEL	$
0012ca   160a     bsf     0x0a, 0x4        
                                           _00111_DS_
                                           ;	.line	34; "led.c"	LED_SetState(led, initial_state);
0012cb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1016
0012cc   1703     bsf     0x03, 0x6        
0012cd   082a     movf    0x2a, 0x0        	MOVF	r0x1016,W
0012ce   00ff     movwf   0x7f             	MOVWF	STK00
0012cf   0829     movf    0x29, 0x0        	MOVF	r0x1015,W
0012d0   2186     call    0x0186           	CALL	_LED_SetState
0012d1   0008     return                   	RETURN	
                                           ; exit point of _LED_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  233+   60 =   293 instructions (  706 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:22 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"main.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; config word(s)
                                           ;--------------------------------------------------------
002007   3f32     addlw   0x32             	__config 0x3f32
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_LED_Init
                                           	extern	_LED_GetState
                                           	extern	_LED_Update
                                           	extern	_Heater_Init
                                           	extern	_Heater_update
                                           	extern	_Heater_GetState
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_SettingMode_update
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_RB0_INT_Init
                                           	extern	_RB0Int_update
                                           	extern	_ISR
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pex_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_flag
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_main
                                           
                                           	global PSAVE
                                           	global SSAVE
                                           	global WSAVE
                                           	global STK12
                                           	global STK11
                                           	global STK10
                                           	global STK09
                                           	global STK08
                                           	global STK07
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00
                                           
                                           sharebank udata_ovr 0x0070
                                           PSAVE	res 1
                                           SSAVE	res 1
                                           WSAVE	res 1
                                           STK12	res 1
                                           STK11	res 1
                                           STK10	res 1
                                           STK09	res 1
                                           STK08	res 1
                                           STK07	res 1
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
000001   118a     bcf     0x0a, 0x3        	pagesel __sdcc_gsinit_startup
000002   160a     bsf     0x0a, 0x4        
000003   2dd8     goto    0x05d8           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_main	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;entry:  _main	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _PB_Init
                                           ;   _PB_Init
                                           ;   _RB0_INT_Init
                                           ;   _SSD_Init
                                           ;   _SSD_Init
                                           ;   _Heater_Init
                                           ;   _Cooler_Init
                                           ;   _LED_Init
                                           ;   _Temprature_Init
                                           ;   _I2C_Init
                                           ;   _TMR0_Init
                                           ;   _TMR0_Start
                                           ;   _TMR0_Update
                                           ;   _PB_Init
                                           ;   _PB_Init
                                           ;   _RB0_INT_Init
                                           ;   _SSD_Init
                                           ;   _SSD_Init
                                           ;   _Heater_Init
                                           ;   _Cooler_Init
                                           ;   _LED_Init
                                           ;   _Temprature_Init
                                           ;   _I2C_Init
                                           ;   _TMR0_Init
                                           ;   _TMR0_Start
                                           ;   _TMR0_Update
                                           ;3 compiler assigned registers:
                                           ;   STK00
                                           ;   STK01
                                           ;   STK02
                                           ;; Starting pCode block
                                           _main	;Function start
                                           ; 2 exit points
                                           ;	.line	19; "main.c"	PB_Init(PB_UP,PB_RELEASED);
0016f8   3000     movlw   0x00             	MOVLW	0x00
0016f9   00ff     movwf   0x7f             	MOVWF	STK00
0016fa   3002     movlw   0x02             	MOVLW	0x02
0016fb   118a     bcf     0x0a, 0x3        	PAGESEL	_PB_Init
0016fc   120a     bcf     0x0a, 0x4        
0016fd   2321     call    0x0321           	CALL	_PB_Init
0016fe   118a     bcf     0x0a, 0x3        	PAGESEL	$
0016ff   160a     bsf     0x0a, 0x4        
                                           ;	.line	20; "main.c"	PB_Init(PB_DOWN,PB_RELEASED);
001700   3000     movlw   0x00             	MOVLW	0x00
001701   00ff     movwf   0x7f             	MOVWF	STK00
001702   3001     movlw   0x01             	MOVLW	0x01
001703   118a     bcf     0x0a, 0x3        	PAGESEL	_PB_Init
001704   120a     bcf     0x0a, 0x4        
001705   2321     call    0x0321           	CALL	_PB_Init
001706   118a     bcf     0x0a, 0x3        	PAGESEL	$
001707   160a     bsf     0x0a, 0x4        
                                           ;	.line	21; "main.c"	RB0_INT_Init();
001708   158a     bsf     0x0a, 0x3        	PAGESEL	_RB0_INT_Init
001709   160a     bsf     0x0a, 0x4        
00170a   20c2     call    0x00c2           	CALL	_RB0_INT_Init
00170b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00170c   160a     bsf     0x0a, 0x4        
                                           ;	.line	24; "main.c"	SSD_Init(SSD_MR,SSD_OFF,SSD_NULL);
00170d   300a     movlw   0x0a             	MOVLW	0x0a
00170e   00fe     movwf   0x7e             	MOVWF	STK01
00170f   3000     movlw   0x00             	MOVLW	0x00
001710   00ff     movwf   0x7f             	MOVWF	STK00
001711   3000     movlw   0x00             	MOVLW	0x00
001712   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_Init
001713   120a     bcf     0x0a, 0x4        
001714   252b     call    0x052b           	CALL	_SSD_Init
001715   118a     bcf     0x0a, 0x3        	PAGESEL	$
001716   160a     bsf     0x0a, 0x4        
                                           ;	.line	25; "main.c"	SSD_Init(SSD_R,SSD_OFF,SSD_NULL);
001717   300a     movlw   0x0a             	MOVLW	0x0a
001718   00fe     movwf   0x7e             	MOVWF	STK01
001719   3000     movlw   0x00             	MOVLW	0x00
00171a   00ff     movwf   0x7f             	MOVWF	STK00
00171b   3001     movlw   0x01             	MOVLW	0x01
00171c   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_Init
00171d   120a     bcf     0x0a, 0x4        
00171e   252b     call    0x052b           	CALL	_SSD_Init
00171f   118a     bcf     0x0a, 0x3        	PAGESEL	$
001720   160a     bsf     0x0a, 0x4        
                                           ;	.line	28; "main.c"	Heater_Init();
001721   158a     bsf     0x0a, 0x3        	PAGESEL	_Heater_Init
001722   160a     bsf     0x0a, 0x4        
001723   20ed     call    0x00ed           	CALL	_Heater_Init
001724   118a     bcf     0x0a, 0x3        	PAGESEL	$
001725   160a     bsf     0x0a, 0x4        
                                           ;	.line	29; "main.c"	Cooler_Init();
001726   158a     bsf     0x0a, 0x3        	PAGESEL	_Cooler_Init
001727   160a     bsf     0x0a, 0x4        
001728   20aa     call    0x00aa           	CALL	_Cooler_Init
001729   118a     bcf     0x0a, 0x3        	PAGESEL	$
00172a   160a     bsf     0x0a, 0x4        
                                           ;	.line	30; "main.c"	LED_Init(LED_7,LED_OFF);
00172b   3000     movlw   0x00             	MOVLW	0x00
00172c   00ff     movwf   0x7f             	MOVWF	STK00
00172d   3007     movlw   0x07             	MOVLW	0x07
00172e   118a     bcf     0x0a, 0x3        	PAGESEL	_LED_Init
00172f   160a     bsf     0x0a, 0x4        
001730   227b     call    0x027b           	CALL	_LED_Init
001731   118a     bcf     0x0a, 0x3        	PAGESEL	$
001732   160a     bsf     0x0a, 0x4        
                                           ;	.line	33; "main.c"	Temprature_Init();
001733   118a     bcf     0x0a, 0x3        	PAGESEL	_Temprature_Init
001734   160a     bsf     0x0a, 0x4        
001735   2523     call    0x0523           	CALL	_Temprature_Init
001736   118a     bcf     0x0a, 0x3        	PAGESEL	$
001737   160a     bsf     0x0a, 0x4        
                                           ;	.line	36; "main.c"	I2C_Init(488);//we choose this value because the system operates at 8MHz frequency.
001738   30e8     movlw   0xe8             	MOVLW	0xe8
001739   00fd     movwf   0x7d             	MOVWF	STK02
00173a   3001     movlw   0x01             	MOVLW	0x01
00173b   00fe     movwf   0x7e             	MOVWF	STK01
00173c   3000     movlw   0x00             	MOVLW	0x00
00173d   00ff     movwf   0x7f             	MOVWF	STK00
00173e   3000     movlw   0x00             	MOVLW	0x00
00173f   118a     bcf     0x0a, 0x3        	PAGESEL	_I2C_Init
001740   120a     bcf     0x0a, 0x4        
001741   27a1     call    0x07a1           	CALL	_I2C_Init
001742   118a     bcf     0x0a, 0x3        	PAGESEL	$
001743   160a     bsf     0x0a, 0x4        
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	37; "main.c"	Flags.e2prom_flag = 0;
001744   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001745   1703     bsf     0x03, 0x6        
001746   01b4     clrf    0x34             	CLRF	(_Flags + 5)
                                           ;	.line	39; "main.c"	TMR0_Init();
001747   158a     bsf     0x0a, 0x3        	PAGESEL	_TMR0_Init
001748   160a     bsf     0x0a, 0x4        
001749   205b     call    0x005b           	CALL	_TMR0_Init
00174a   118a     bcf     0x0a, 0x3        	PAGESEL	$
00174b   160a     bsf     0x0a, 0x4        
                                           ;	.line	40; "main.c"	TMR0_Start();
00174c   158a     bsf     0x0a, 0x3        	PAGESEL	_TMR0_Start
00174d   160a     bsf     0x0a, 0x4        
00174e   2052     call    0x0052           	CALL	_TMR0_Start
00174f   118a     bcf     0x0a, 0x3        	PAGESEL	$
001750   160a     bsf     0x0a, 0x4        
                                           _00105_DS_
                                           ;	.line	44; "main.c"	while(flag == 0){
001751   3000     movlw   0x00             	MOVLW	0x00
001752   1683     bsf     0x03, 0x5        	BANKSEL	_flag
001753   1703     bsf     0x03, 0x6        
001754   0440     iorwf   0x40, 0x0        	IORWF	_flag,W
001755   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
001756   2f51     goto    0x0751           	GOTO	_00105_DS_
                                           ;	.line	47; "main.c"	flag = 0;
001757   01c0     clrf    0x40             	CLRF	_flag
                                           ;	.line	49; "main.c"	TMR0_Update(); //the whole program logic is called in this function.
001758   158a     bsf     0x0a, 0x3        	PAGESEL	_TMR0_Update
001759   160a     bsf     0x0a, 0x4        
00175a   2000     call    0x0000           	CALL	_TMR0_Update
00175b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00175c   160a     bsf     0x0a, 0x4        
00175d   2f51     goto    0x0751           	GOTO	_00105_DS_
00175e   0008     return                   	RETURN	
                                           ; exit point of _main
                                           
                                           
                                           ;	code size estimation:
                                           ;	   47+   28 =    75 instructions (  206 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:22 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"push_button.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_LED_Init
                                           	extern	_LED_GetState
                                           	extern	_LED_Update
                                           	extern	_Heater_Init
                                           	extern	_Heater_update
                                           	extern	_Heater_GetState
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pex_update
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_SettingMode_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	__mulchar
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_PB_GetState
                                           	global	_PB_Update
                                           	global	_PB_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_push_button_0	udata
                                           r0x102E	res	1
                                           r0x102F	res	1
                                           r0x1030	res	1
                                           r0x1031	res	1
                                           r0x1032	res	1
                                           r0x1026	res	1
                                           r0x1027	res	1
                                           r0x1028	res	1
                                           r0x1029	res	1
                                           r0x102A	res	1
                                           r0x102B	res	1
                                           r0x102C	res	1
                                           r0x102D	res	1
                                           r0x101E	res	1
                                           r0x101F	res	1
                                           r0x1020	res	1
                                           r0x1021	res	1
                                           r0x1022	res	1
                                           r0x1023	res	1
                                           r0x1024	res	1
                                           r0x1025	res	1
                                           _pb_info	res	12
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_push_button	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SetValue_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _PB_GetState
                                           ;   _PB_GetState
                                           ;   _PB_GetState
                                           ;   _PB_GetState
                                           ;4 compiler assigned registers:
                                           ;   r0x1022
                                           ;   r0x1023
                                           ;   r0x1024
                                           ;   r0x1025
                                           ;; Starting pCode block
                                           _SetValue_update	;Function start
                                           ; 2 exit points
                                           ;	.line	134; "push_button.c"	if(Readings.Set_value <= 75 && Readings.Set_value >= 35)
000036   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000037   1703     bsf     0x03, 0x6        
000038   081e     movf    0x1e, 0x0        	MOVF	(_Readings + 4),W
000039   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
00003a   1303     bcf     0x03, 0x6        
00003b   00d6     movwf   0x56             	MOVWF	r0x1022
00003c   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
00003d   1703     bsf     0x03, 0x6        
00003e   081f     movf    0x1f, 0x0        	MOVF	(_Readings + 5),W
00003f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000040   1303     bcf     0x03, 0x6        
000041   00d7     movwf   0x57             	MOVWF	r0x1023
000042   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000043   1703     bsf     0x03, 0x6        
000044   0820     movf    0x20, 0x0        	MOVF	(_Readings + 6),W
000045   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
000046   1303     bcf     0x03, 0x6        
000047   00d8     movwf   0x58             	MOVWF	r0x1024
000048   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000049   1703     bsf     0x03, 0x6        
00004a   0821     movf    0x21, 0x0        	MOVF	(_Readings + 7),W
00004b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
00004c   1303     bcf     0x03, 0x6        
00004d   00d9     movwf   0x59             	MOVWF	r0x1025
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4C=76), size=4
00004e   3000     movlw   0x00             	MOVLW	0x00
00004f   0259     subwf   0x59, 0x0        	SUBWF	r0x1025,W
000050   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000051   285c     goto    0x005c           	GOTO	_00234_DS_
000052   3000     movlw   0x00             	MOVLW	0x00
000053   0258     subwf   0x58, 0x0        	SUBWF	r0x1024,W
000054   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000055   285c     goto    0x005c           	GOTO	_00234_DS_
000056   3000     movlw   0x00             	MOVLW	0x00
000057   0257     subwf   0x57, 0x0        	SUBWF	r0x1023,W
000058   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000059   285c     goto    0x005c           	GOTO	_00234_DS_
00005a   304c     movlw   0x4c             	MOVLW	0x4c
00005b   0256     subwf   0x56, 0x0        	SUBWF	r0x1022,W
                                           _00234_DS_
00005c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00005d   292a     goto    0x012a           	GOTO	_00214_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;;unsigned compare: left < lit(0x23=35), size=4
00005e   3000     movlw   0x00             	MOVLW	0x00
00005f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
000060   1303     bcf     0x03, 0x6        
000061   0259     subwf   0x59, 0x0        	SUBWF	r0x1025,W
000062   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000063   286e     goto    0x006e           	GOTO	_00235_DS_
000064   3000     movlw   0x00             	MOVLW	0x00
000065   0258     subwf   0x58, 0x0        	SUBWF	r0x1024,W
000066   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000067   286e     goto    0x006e           	GOTO	_00235_DS_
000068   3000     movlw   0x00             	MOVLW	0x00
000069   0257     subwf   0x57, 0x0        	SUBWF	r0x1023,W
00006a   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00006b   286e     goto    0x006e           	GOTO	_00235_DS_
00006c   3023     movlw   0x23             	MOVLW	0x23
00006d   0256     subwf   0x56, 0x0        	SUBWF	r0x1022,W
                                           _00235_DS_
00006e   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00006f   292a     goto    0x012a           	GOTO	_00214_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;	.line	136; "push_button.c"	if(PB_GetState(PB_UP) == PB_PRE_RELEASED)
000070   3002     movlw   0x02             	MOVLW	0x02
000071   212b     call    0x012b           	CALL	_PB_GetState
000072   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
000073   1303     bcf     0x03, 0x6        
000074   00d6     movwf   0x56             	MOVWF	r0x1022
000075   3a03     xorlw   0x03             	XORLW	0x03
000076   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000077   28cc     goto    0x00cc           	GOTO	_00209_DS_
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	138; "push_button.c"	Counters.FixedMode_counter = 0; //count new 5 seconds
000078   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000079   1703     bsf     0x03, 0x6        
00007a   0190     clrf    0x10             	CLRF	(_Counters + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
00007b   0191     clrf    0x11             	CLRF	(_Counters + 1)
                                           ;	.line	139; "push_button.c"	Readings.Set_value+=5 ;
00007c   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
00007d   1703     bsf     0x03, 0x6        
00007e   081e     movf    0x1e, 0x0        	MOVF	(_Readings + 4),W
00007f   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
000080   1303     bcf     0x03, 0x6        
000081   00d6     movwf   0x56             	MOVWF	r0x1022
000082   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000083   1703     bsf     0x03, 0x6        
000084   081f     movf    0x1f, 0x0        	MOVF	(_Readings + 5),W
000085   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000086   1303     bcf     0x03, 0x6        
000087   00d7     movwf   0x57             	MOVWF	r0x1023
000088   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000089   1703     bsf     0x03, 0x6        
00008a   0820     movf    0x20, 0x0        	MOVF	(_Readings + 6),W
00008b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
00008c   1303     bcf     0x03, 0x6        
00008d   00d8     movwf   0x58             	MOVWF	r0x1024
00008e   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
00008f   1703     bsf     0x03, 0x6        
000090   0821     movf    0x21, 0x0        	MOVF	(_Readings + 7),W
000091   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
000092   1303     bcf     0x03, 0x6        
000093   00d9     movwf   0x59             	MOVWF	r0x1025
000094   3005     movlw   0x05             	MOVLW	0x05
000095   07d6     addwf   0x56, 0x1        	ADDWF	r0x1022,F
000096   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000097   0ad7     incf    0x57, 0x1        	INCF	r0x1023,F
000098   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000099   0ad8     incf    0x58, 0x1        	INCF	r0x1024,F
00009a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00009b   0ad9     incf    0x59, 0x1        	INCF	r0x1025,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
00009c   0856     movf    0x56, 0x0        	MOVF	r0x1022,W
00009d   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
00009e   1703     bsf     0x03, 0x6        
00009f   009e     movwf   0x1e             	MOVWF	(_Readings + 4)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
0000a0   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
0000a1   1303     bcf     0x03, 0x6        
0000a2   0857     movf    0x57, 0x0        	MOVF	r0x1023,W
0000a3   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
0000a4   1703     bsf     0x03, 0x6        
0000a5   009f     movwf   0x1f             	MOVWF	(_Readings + 5)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
0000a6   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
0000a7   1303     bcf     0x03, 0x6        
0000a8   0858     movf    0x58, 0x0        	MOVF	r0x1024,W
0000a9   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
0000aa   1703     bsf     0x03, 0x6        
0000ab   00a0     movwf   0x20             	MOVWF	(_Readings + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
0000ac   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
0000ad   1303     bcf     0x03, 0x6        
0000ae   0859     movf    0x59, 0x0        	MOVF	r0x1025,W
0000af   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
0000b0   1703     bsf     0x03, 0x6        
0000b1   00a1     movwf   0x21             	MOVWF	(_Readings + 7)
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4C=76), size=4
                                           ;	.line	140; "push_button.c"	if(Readings.Set_value > 75)
0000b2   3000     movlw   0x00             	MOVLW	0x00
0000b3   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
0000b4   1303     bcf     0x03, 0x6        
0000b5   0259     subwf   0x59, 0x0        	SUBWF	r0x1025,W
0000b6   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000b7   28c2     goto    0x00c2           	GOTO	_00236_DS_
0000b8   3000     movlw   0x00             	MOVLW	0x00
0000b9   0258     subwf   0x58, 0x0        	SUBWF	r0x1024,W
0000ba   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000bb   28c2     goto    0x00c2           	GOTO	_00236_DS_
0000bc   3000     movlw   0x00             	MOVLW	0x00
0000bd   0257     subwf   0x57, 0x0        	SUBWF	r0x1023,W
0000be   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000bf   28c2     goto    0x00c2           	GOTO	_00236_DS_
0000c0   304c     movlw   0x4c             	MOVLW	0x4c
0000c1   0256     subwf   0x56, 0x0        	SUBWF	r0x1022,W
                                           _00236_DS_
0000c2   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000c3   292a     goto    0x012a           	GOTO	_00214_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;	.line	142; "push_button.c"	Readings.Set_value = 75 ;
0000c4   304b     movlw   0x4b             	MOVLW	0x4b
0000c5   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
0000c6   1703     bsf     0x03, 0x6        
0000c7   009e     movwf   0x1e             	MOVWF	(_Readings + 4)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
0000c8   019f     clrf    0x1f             	CLRF	(_Readings + 5)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
0000c9   01a0     clrf    0x20             	CLRF	(_Readings + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
0000ca   01a1     clrf    0x21             	CLRF	(_Readings + 7)
0000cb   292a     goto    0x012a           	GOTO	_00214_DS_
                                           _00209_DS_
                                           ;	.line	145; "push_button.c"	else if(PB_GetState(PB_DOWN) == PB_PRE_RELEASED)
0000cc   3001     movlw   0x01             	MOVLW	0x01
0000cd   212b     call    0x012b           	CALL	_PB_GetState
0000ce   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
0000cf   1303     bcf     0x03, 0x6        
0000d0   00d6     movwf   0x56             	MOVWF	r0x1022
0000d1   3a03     xorlw   0x03             	XORLW	0x03
0000d2   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0000d3   292a     goto    0x012a           	GOTO	_00214_DS_
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	147; "push_button.c"	Counters.FixedMode_counter = 0; //count new 5 seconds
0000d4   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
0000d5   1703     bsf     0x03, 0x6        
0000d6   0190     clrf    0x10             	CLRF	(_Counters + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
0000d7   0191     clrf    0x11             	CLRF	(_Counters + 1)
                                           ;	.line	148; "push_button.c"	Readings.Set_value-= 5 ;
0000d8   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
0000d9   1703     bsf     0x03, 0x6        
0000da   081e     movf    0x1e, 0x0        	MOVF	(_Readings + 4),W
0000db   1283     bcf     0x03, 0x5        	BANKSEL	r0x1022
0000dc   1303     bcf     0x03, 0x6        
0000dd   00d6     movwf   0x56             	MOVWF	r0x1022
0000de   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
0000df   1703     bsf     0x03, 0x6        
0000e0   081f     movf    0x1f, 0x0        	MOVF	(_Readings + 5),W
0000e1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
0000e2   1303     bcf     0x03, 0x6        
0000e3   00d7     movwf   0x57             	MOVWF	r0x1023
0000e4   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
0000e5   1703     bsf     0x03, 0x6        
0000e6   0820     movf    0x20, 0x0        	MOVF	(_Readings + 6),W
0000e7   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
0000e8   1303     bcf     0x03, 0x6        
0000e9   00d8     movwf   0x58             	MOVWF	r0x1024
0000ea   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
0000eb   1703     bsf     0x03, 0x6        
0000ec   0821     movf    0x21, 0x0        	MOVF	(_Readings + 7),W
0000ed   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
0000ee   1303     bcf     0x03, 0x6        
0000ef   00d9     movwf   0x59             	MOVWF	r0x1025
0000f0   30fb     movlw   0xfb             	MOVLW	0xfb
0000f1   07d6     addwf   0x56, 0x1        	ADDWF	r0x1022,F
0000f2   30ff     movlw   0xff             	MOVLW	0xff
0000f3   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000f4   07d7     addwf   0x57, 0x1        	ADDWF	r0x1023,F
0000f5   30ff     movlw   0xff             	MOVLW	0xff
0000f6   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000f7   07d8     addwf   0x58, 0x1        	ADDWF	r0x1024,F
0000f8   30ff     movlw   0xff             	MOVLW	0xff
0000f9   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0000fa   07d9     addwf   0x59, 0x1        	ADDWF	r0x1025,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
0000fb   0856     movf    0x56, 0x0        	MOVF	r0x1022,W
0000fc   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
0000fd   1703     bsf     0x03, 0x6        
0000fe   009e     movwf   0x1e             	MOVWF	(_Readings + 4)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
0000ff   1283     bcf     0x03, 0x5        	BANKSEL	r0x1023
000100   1303     bcf     0x03, 0x6        
000101   0857     movf    0x57, 0x0        	MOVF	r0x1023,W
000102   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000103   1703     bsf     0x03, 0x6        
000104   009f     movwf   0x1f             	MOVWF	(_Readings + 5)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
000105   1283     bcf     0x03, 0x5        	BANKSEL	r0x1024
000106   1303     bcf     0x03, 0x6        
000107   0858     movf    0x58, 0x0        	MOVF	r0x1024,W
000108   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000109   1703     bsf     0x03, 0x6        
00010a   00a0     movwf   0x20             	MOVWF	(_Readings + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
00010b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
00010c   1303     bcf     0x03, 0x6        
00010d   0859     movf    0x59, 0x0        	MOVF	r0x1025,W
00010e   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
00010f   1703     bsf     0x03, 0x6        
000110   00a1     movwf   0x21             	MOVWF	(_Readings + 7)
                                           ;;unsigned compare: left < lit(0x23=35), size=4
                                           ;	.line	149; "push_button.c"	if(Readings.Set_value < 35)
000111   3000     movlw   0x00             	MOVLW	0x00
000112   1283     bcf     0x03, 0x5        	BANKSEL	r0x1025
000113   1303     bcf     0x03, 0x6        
000114   0259     subwf   0x59, 0x0        	SUBWF	r0x1025,W
000115   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000116   2921     goto    0x0121           	GOTO	_00237_DS_
000117   3000     movlw   0x00             	MOVLW	0x00
000118   0258     subwf   0x58, 0x0        	SUBWF	r0x1024,W
000119   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00011a   2921     goto    0x0121           	GOTO	_00237_DS_
00011b   3000     movlw   0x00             	MOVLW	0x00
00011c   0257     subwf   0x57, 0x0        	SUBWF	r0x1023,W
00011d   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00011e   2921     goto    0x0121           	GOTO	_00237_DS_
00011f   3023     movlw   0x23             	MOVLW	0x23
000120   0256     subwf   0x56, 0x0        	SUBWF	r0x1022,W
                                           _00237_DS_
000121   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000122   292a     goto    0x012a           	GOTO	_00214_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;	.line	151; "push_button.c"	Readings.Set_value = 35 ;
000123   3023     movlw   0x23             	MOVLW	0x23
000124   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000125   1703     bsf     0x03, 0x6        
000126   009e     movwf   0x1e             	MOVWF	(_Readings + 4)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
000127   019f     clrf    0x1f             	CLRF	(_Readings + 5)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
000128   01a0     clrf    0x20             	CLRF	(_Readings + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
000129   01a1     clrf    0x21             	CLRF	(_Readings + 7)
                                           _00214_DS_
00012a   0008     return                   	RETURN	
                                           ; exit point of _SetValue_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _PB_GetState	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mulchar
                                           ;   __mulchar
                                           ;5 compiler assigned registers:
                                           ;   r0x101E
                                           ;   STK00
                                           ;   r0x101F
                                           ;   r0x1020
                                           ;   r0x1021
                                           ;; Starting pCode block
                                           _PB_GetState	;Function start
                                           ; 2 exit points
                                           ;	.line	122; "push_button.c"	tPB_State PB_GetState(tPB pb)
00012b   1283     bcf     0x03, 0x5        	BANKSEL	r0x101E
00012c   1303     bcf     0x03, 0x6        
00012d   00d2     movwf   0x52             	MOVWF	r0x101E
                                           ;	.line	126; "push_button.c"	ret = pb_info[pb].state;
00012e   3003     movlw   0x03             	MOVLW	0x03
00012f   00ff     movwf   0x7f             	MOVWF	STK00
000130   0852     movf    0x52, 0x0        	MOVF	r0x101E,W
000131   158a     bsf     0x0a, 0x3        	PAGESEL	__mulchar
000132   160a     bsf     0x0a, 0x4        
000133   20f8     call    0x00f8           	CALL	__mulchar
000134   118a     bcf     0x0a, 0x3        	PAGESEL	$
000135   120a     bcf     0x0a, 0x4        
000136   1283     bcf     0x03, 0x5        	BANKSEL	r0x101F
000137   1303     bcf     0x03, 0x6        
000138   00d3     movwf   0x53             	MOVWF	r0x101F
000139   01d4     clrf    0x54             	CLRF	r0x1020
00013a   0853     movf    0x53, 0x0        	MOVF	r0x101F,W
00013b   3e5a     addlw   0x5a             	ADDLW	(_pb_info + 0)
00013c   00d2     movwf   0x52             	MOVWF	r0x101E
00013d   3000     movlw   0x00             	MOVLW	high (_pb_info + 0)
00013e   00d5     movwf   0x55             	MOVWF	r0x1021
00013f   3000     movlw   0x00             	MOVLW	0x00
000140   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000141   0f54     incfsz  0x54, 0x0        	INCFSZ	r0x1020,W
000142   07d5     addwf   0x55, 0x1        	ADDWF	r0x1021,F
000143   3002     movlw   0x02             	MOVLW	0x02
000144   07d2     addwf   0x52, 0x1        	ADDWF	r0x101E,F
000145   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000146   0ad5     incf    0x55, 0x1        	INCF	r0x1021,F
000147   0852     movf    0x52, 0x0        	MOVF	r0x101E,W
000148   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000149   1303     bcf     0x03, 0x6        
00014a   0084     movwf   0x04             	MOVWF	FSR
00014b   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00014c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1021
00014d   1303     bcf     0x03, 0x6        
00014e   1855     btfsc   0x55, 0x0        	BTFSC	r0x1021,0
00014f   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000150   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000151   1303     bcf     0x03, 0x6        
000152   0800     movf    0x00, 0x0        	MOVF	INDF,W
                                           ;	.line	128; "push_button.c"	return ret;
000153   1283     bcf     0x03, 0x5        	BANKSEL	r0x101F
000154   1303     bcf     0x03, 0x6        
000155   00d3     movwf   0x53             	MOVWF	r0x101F
000156   0008     return                   	RETURN	
                                           ; exit point of _PB_GetState
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _PB_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __mulchar
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   __mulchar
                                           ;   _SetValue_update
                                           ;   __mulchar
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   __mulchar
                                           ;   _SetValue_update
                                           ;9 compiler assigned registers:
                                           ;   r0x1026
                                           ;   STK00
                                           ;   r0x1027
                                           ;   r0x1028
                                           ;   r0x1029
                                           ;   r0x102A
                                           ;   r0x102B
                                           ;   r0x102C
                                           ;   r0x102D
                                           ;; Starting pCode block
                                           _PB_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	59; "push_button.c"	for (current_button = PB_POWER; current_button <= PB_UNUSED; current_button++)
000157   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000158   1303     bcf     0x03, 0x6        
000159   01ca     clrf    0x4a             	CLRF	r0x1026
                                           _00155_DS_
                                           ;	.line	62; "push_button.c"	pb_info[current_button].samples[0] = pb_info[current_button].samples[1];
00015a   3003     movlw   0x03             	MOVLW	0x03
00015b   00ff     movwf   0x7f             	MOVWF	STK00
00015c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
00015d   1303     bcf     0x03, 0x6        
00015e   084a     movf    0x4a, 0x0        	MOVF	r0x1026,W
00015f   158a     bsf     0x0a, 0x3        	PAGESEL	__mulchar
000160   160a     bsf     0x0a, 0x4        
000161   20f8     call    0x00f8           	CALL	__mulchar
000162   118a     bcf     0x0a, 0x3        	PAGESEL	$
000163   120a     bcf     0x0a, 0x4        
000164   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
000165   1303     bcf     0x03, 0x6        
000166   00cb     movwf   0x4b             	MOVWF	r0x1027
000167   01cc     clrf    0x4c             	CLRF	r0x1028
000168   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
000169   3e5a     addlw   0x5a             	ADDLW	(_pb_info + 0)
00016a   00cd     movwf   0x4d             	MOVWF	r0x1029
00016b   3000     movlw   0x00             	MOVLW	high (_pb_info + 0)
00016c   00ce     movwf   0x4e             	MOVWF	r0x102A
00016d   3000     movlw   0x00             	MOVLW	0x00
00016e   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00016f   0f4c     incfsz  0x4c, 0x0        	INCFSZ	r0x1028,W
000170   07ce     addwf   0x4e, 0x1        	ADDWF	r0x102A,F
000171   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
000172   3e5a     addlw   0x5a             	ADDLW	(_pb_info + 0)
000173   00cb     movwf   0x4b             	MOVWF	r0x1027
000174   084c     movf    0x4c, 0x0        	MOVF	r0x1028,W
000175   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000176   0f4c     incfsz  0x4c, 0x0        	INCFSZ	r0x1028,W
000177   3e00     addlw   0x00             	ADDLW	high (_pb_info + 0)
000178   00cc     movwf   0x4c             	MOVWF	r0x1028
000179   0acb     incf    0x4b, 0x1        	INCF	r0x1027,F
00017a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00017b   0acc     incf    0x4c, 0x1        	INCF	r0x1028,F
00017c   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
00017d   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00017e   1303     bcf     0x03, 0x6        
00017f   0084     movwf   0x04             	MOVWF	FSR
000180   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000181   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
000182   1303     bcf     0x03, 0x6        
000183   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1028,0
000184   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000185   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000186   1303     bcf     0x03, 0x6        
000187   0800     movf    0x00, 0x0        	MOVF	INDF,W
000188   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
000189   1303     bcf     0x03, 0x6        
00018a   00cf     movwf   0x4f             	MOVWF	r0x102B
00018b   084d     movf    0x4d, 0x0        	MOVF	r0x1029,W
00018c   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00018d   1303     bcf     0x03, 0x6        
00018e   0084     movwf   0x04             	MOVWF	FSR
00018f   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000190   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
000191   1303     bcf     0x03, 0x6        
000192   184e     btfsc   0x4e, 0x0        	BTFSC	r0x102A,0
000193   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000194   084f     movf    0x4f, 0x0        	MOVF	r0x102B,W
000195   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000196   1303     bcf     0x03, 0x6        
000197   0080     movwf   0x00             	MOVWF	INDF
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
                                           ;	.line	64; "push_button.c"	switch(current_button)
000198   3004     movlw   0x04             	MOVLW	0x04
000199   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
00019a   1303     bcf     0x03, 0x6        
00019b   024a     subwf   0x4a, 0x0        	SUBWF	r0x1026,W
00019c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00019d   2a13     goto    0x0213           	GOTO	_00137_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00019e   3001     movlw   0x01             	MOVLW	HIGH(_00191_DS_)
00019f   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
0001a0   1303     bcf     0x03, 0x6        
0001a1   008a     movwf   0x0a             	MOVWF	PCLATH
0001a2   30ac     movlw   0xac             	MOVLW	_00191_DS_
0001a3   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
0001a4   1303     bcf     0x03, 0x6        
0001a5   074a     addwf   0x4a, 0x0        	ADDWF	r0x1026,W
0001a6   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0001a7   29ab     goto    0x01ab           	GOTO	_00001_DS_
0001a8   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
0001a9   1303     bcf     0x03, 0x6        
0001aa   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00001_DS_
0001ab   0082     movwf   0x02             	MOVWF	PCL
                                           _00191_DS_
0001ac   29b0     goto    0x01b0           	GOTO	_00132_DS_
0001ad   29c9     goto    0x01c9           	GOTO	_00133_DS_
0001ae   29e2     goto    0x01e2           	GOTO	_00134_DS_
0001af   29fb     goto    0x01fb           	GOTO	_00135_DS_
                                           _00132_DS_
                                           ;	.line	67; "push_button.c"	pb_info[current_button].samples[1] = GPIO_GetPortPinState(PORT_B, 0);
0001b0   3000     movlw   0x00             	MOVLW	0x00
0001b1   00ff     movwf   0x7f             	MOVWF	STK00
0001b2   3001     movlw   0x01             	MOVLW	0x01
0001b3   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
0001b4   120a     bcf     0x0a, 0x4        
0001b5   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
0001b6   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001b7   120a     bcf     0x0a, 0x4        
0001b8   1283     bcf     0x03, 0x5        	BANKSEL	r0x1029
0001b9   1303     bcf     0x03, 0x6        
0001ba   00cd     movwf   0x4d             	MOVWF	r0x1029
0001bb   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
0001bc   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001bd   1303     bcf     0x03, 0x6        
0001be   0084     movwf   0x04             	MOVWF	FSR
0001bf   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001c0   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
0001c1   1303     bcf     0x03, 0x6        
0001c2   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1028,0
0001c3   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001c4   084d     movf    0x4d, 0x0        	MOVF	r0x1029,W
0001c5   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001c6   1303     bcf     0x03, 0x6        
0001c7   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	68; "push_button.c"	break;
0001c8   2a13     goto    0x0213           	GOTO	_00137_DS_
                                           _00133_DS_
                                           ;	.line	70; "push_button.c"	pb_info[current_button].samples[1] = GPIO_GetPortPinState(PORT_B, 1);
0001c9   3001     movlw   0x01             	MOVLW	0x01
0001ca   00ff     movwf   0x7f             	MOVWF	STK00
0001cb   3001     movlw   0x01             	MOVLW	0x01
0001cc   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
0001cd   120a     bcf     0x0a, 0x4        
0001ce   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
0001cf   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001d0   120a     bcf     0x0a, 0x4        
0001d1   1283     bcf     0x03, 0x5        	BANKSEL	r0x1029
0001d2   1303     bcf     0x03, 0x6        
0001d3   00cd     movwf   0x4d             	MOVWF	r0x1029
0001d4   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
0001d5   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001d6   1303     bcf     0x03, 0x6        
0001d7   0084     movwf   0x04             	MOVWF	FSR
0001d8   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001d9   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
0001da   1303     bcf     0x03, 0x6        
0001db   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1028,0
0001dc   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001dd   084d     movf    0x4d, 0x0        	MOVF	r0x1029,W
0001de   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001df   1303     bcf     0x03, 0x6        
0001e0   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	71; "push_button.c"	break;
0001e1   2a13     goto    0x0213           	GOTO	_00137_DS_
                                           _00134_DS_
                                           ;	.line	73; "push_button.c"	pb_info[current_button].samples[1] = GPIO_GetPortPinState(PORT_B, 2);
0001e2   3002     movlw   0x02             	MOVLW	0x02
0001e3   00ff     movwf   0x7f             	MOVWF	STK00
0001e4   3001     movlw   0x01             	MOVLW	0x01
0001e5   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
0001e6   120a     bcf     0x0a, 0x4        
0001e7   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
0001e8   118a     bcf     0x0a, 0x3        	PAGESEL	$
0001e9   120a     bcf     0x0a, 0x4        
0001ea   1283     bcf     0x03, 0x5        	BANKSEL	r0x1029
0001eb   1303     bcf     0x03, 0x6        
0001ec   00cd     movwf   0x4d             	MOVWF	r0x1029
0001ed   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
0001ee   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0001ef   1303     bcf     0x03, 0x6        
0001f0   0084     movwf   0x04             	MOVWF	FSR
0001f1   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0001f2   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
0001f3   1303     bcf     0x03, 0x6        
0001f4   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1028,0
0001f5   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0001f6   084d     movf    0x4d, 0x0        	MOVF	r0x1029,W
0001f7   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0001f8   1303     bcf     0x03, 0x6        
0001f9   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	74; "push_button.c"	break;
0001fa   2a13     goto    0x0213           	GOTO	_00137_DS_
                                           _00135_DS_
                                           ;	.line	76; "push_button.c"	pb_info[current_button].samples[1] = GPIO_GetPortPinState(PORT_B, 3);
0001fb   3003     movlw   0x03             	MOVLW	0x03
0001fc   00ff     movwf   0x7f             	MOVWF	STK00
0001fd   3001     movlw   0x01             	MOVLW	0x01
0001fe   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
0001ff   120a     bcf     0x0a, 0x4        
000200   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
000201   118a     bcf     0x0a, 0x3        	PAGESEL	$
000202   120a     bcf     0x0a, 0x4        
000203   1283     bcf     0x03, 0x5        	BANKSEL	r0x1029
000204   1303     bcf     0x03, 0x6        
000205   00cd     movwf   0x4d             	MOVWF	r0x1029
000206   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
000207   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000208   1303     bcf     0x03, 0x6        
000209   0084     movwf   0x04             	MOVWF	FSR
00020a   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00020b   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
00020c   1303     bcf     0x03, 0x6        
00020d   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1028,0
00020e   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00020f   084d     movf    0x4d, 0x0        	MOVF	r0x1029,W
000210   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000211   1303     bcf     0x03, 0x6        
000212   0080     movwf   0x00             	MOVWF	INDF
                                           _00137_DS_
                                           ;	.line	84; "push_button.c"	switch(pb_info[current_button].state)
000213   3003     movlw   0x03             	MOVLW	0x03
000214   00ff     movwf   0x7f             	MOVWF	STK00
000215   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000216   1303     bcf     0x03, 0x6        
000217   084a     movf    0x4a, 0x0        	MOVF	r0x1026,W
000218   158a     bsf     0x0a, 0x3        	PAGESEL	__mulchar
000219   160a     bsf     0x0a, 0x4        
00021a   20f8     call    0x00f8           	CALL	__mulchar
00021b   118a     bcf     0x0a, 0x3        	PAGESEL	$
00021c   120a     bcf     0x0a, 0x4        
00021d   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
00021e   1303     bcf     0x03, 0x6        
00021f   00cb     movwf   0x4b             	MOVWF	r0x1027
000220   01cc     clrf    0x4c             	CLRF	r0x1028
000221   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
000222   3e5a     addlw   0x5a             	ADDLW	(_pb_info + 0)
000223   00cb     movwf   0x4b             	MOVWF	r0x1027
000224   3000     movlw   0x00             	MOVLW	0x00
000225   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000226   0f4c     incfsz  0x4c, 0x0        	INCFSZ	r0x1028,W
000227   3e00     addlw   0x00             	ADDLW	high (_pb_info + 0)
000228   00cc     movwf   0x4c             	MOVWF	r0x1028
000229   3002     movlw   0x02             	MOVLW	0x02
00022a   074b     addwf   0x4b, 0x0        	ADDWF	r0x1027,W
00022b   00cd     movwf   0x4d             	MOVWF	r0x1029
00022c   01ce     clrf    0x4e             	CLRF	r0x102A
00022d   0dce     rlf     0x4e, 0x1        	RLF	r0x102A,F
00022e   084c     movf    0x4c, 0x0        	MOVF	r0x1028,W
00022f   07ce     addwf   0x4e, 0x1        	ADDWF	r0x102A,F
000230   084d     movf    0x4d, 0x0        	MOVF	r0x1029,W
000231   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000232   1303     bcf     0x03, 0x6        
000233   0084     movwf   0x04             	MOVWF	FSR
000234   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000235   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
000236   1303     bcf     0x03, 0x6        
000237   184e     btfsc   0x4e, 0x0        	BTFSC	r0x102A,0
000238   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000239   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00023a   1303     bcf     0x03, 0x6        
00023b   0800     movf    0x00, 0x0        	MOVF	INDF,W
00023c   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
00023d   1303     bcf     0x03, 0x6        
00023e   00cf     movwf   0x4f             	MOVWF	r0x102B
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
00023f   3004     movlw   0x04             	MOVLW	0x04
000240   024f     subwf   0x4f, 0x0        	SUBWF	r0x102B,W
000241   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000242   2b18     goto    0x0318           	GOTO	_00156_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
000243   3002     movlw   0x02             	MOVLW	HIGH(_00193_DS_)
000244   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000245   1303     bcf     0x03, 0x6        
000246   008a     movwf   0x0a             	MOVWF	PCLATH
000247   3051     movlw   0x51             	MOVLW	_00193_DS_
000248   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
000249   1303     bcf     0x03, 0x6        
00024a   074f     addwf   0x4f, 0x0        	ADDWF	r0x102B,W
00024b   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00024c   2a50     goto    0x0250           	GOTO	_00002_DS_
00024d   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00024e   1303     bcf     0x03, 0x6        
00024f   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00002_DS_
000250   0082     movwf   0x02             	MOVWF	PCL
                                           _00193_DS_
000251   2a55     goto    0x0255           	GOTO	_00138_DS_
000252   2a90     goto    0x0290           	GOTO	_00142_DS_
000253   2ab9     goto    0x02b9           	GOTO	_00145_DS_
000254   2af4     goto    0x02f4           	GOTO	_00149_DS_
                                           _00138_DS_
                                           ;	.line	87; "push_button.c"	if((pb_info[current_button].samples[0] == PB_PRESSED_VOLTAGE) &&
000255   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
000256   1303     bcf     0x03, 0x6        
000257   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
000258   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000259   1303     bcf     0x03, 0x6        
00025a   0084     movwf   0x04             	MOVWF	FSR
00025b   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00025c   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
00025d   1303     bcf     0x03, 0x6        
00025e   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1028,0
00025f   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000260   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000261   1303     bcf     0x03, 0x6        
000262   0800     movf    0x00, 0x0        	MOVF	INDF,W
000263   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
000264   1303     bcf     0x03, 0x6        
000265   00cf     movwf   0x4f             	MOVWF	r0x102B
000266   084f     movf    0x4f, 0x0        	MOVF	r0x102B,W
000267   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000268   2b18     goto    0x0318           	GOTO	_00156_DS_
                                           ;	.line	88; "push_button.c"	(pb_info[current_button].samples[1] == PB_PRESSED_VOLTAGE))
000269   3001     movlw   0x01             	MOVLW	0x01
00026a   074b     addwf   0x4b, 0x0        	ADDWF	r0x1027,W
00026b   00cf     movwf   0x4f             	MOVWF	r0x102B
00026c   01d0     clrf    0x50             	CLRF	r0x102C
00026d   0dd0     rlf     0x50, 0x1        	RLF	r0x102C,F
00026e   084c     movf    0x4c, 0x0        	MOVF	r0x1028,W
00026f   07d0     addwf   0x50, 0x1        	ADDWF	r0x102C,F
000270   084f     movf    0x4f, 0x0        	MOVF	r0x102B,W
000271   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000272   1303     bcf     0x03, 0x6        
000273   0084     movwf   0x04             	MOVWF	FSR
000274   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000275   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
000276   1303     bcf     0x03, 0x6        
000277   1850     btfsc   0x50, 0x0        	BTFSC	r0x102C,0
000278   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000279   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00027a   1303     bcf     0x03, 0x6        
00027b   0800     movf    0x00, 0x0        	MOVF	INDF,W
00027c   1283     bcf     0x03, 0x5        	BANKSEL	r0x102D
00027d   1303     bcf     0x03, 0x6        
00027e   00d1     movwf   0x51             	MOVWF	r0x102D
00027f   0851     movf    0x51, 0x0        	MOVF	r0x102D,W
000280   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000281   2b18     goto    0x0318           	GOTO	_00156_DS_
                                           ;	.line	90; "push_button.c"	pb_info[current_button].state = PB_PRE_PRESSED;
000282   084d     movf    0x4d, 0x0        	MOVF	r0x1029,W
000283   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000284   1303     bcf     0x03, 0x6        
000285   0084     movwf   0x04             	MOVWF	FSR
000286   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000287   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
000288   1303     bcf     0x03, 0x6        
000289   184e     btfsc   0x4e, 0x0        	BTFSC	r0x102A,0
00028a   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00028b   3001     movlw   0x01             	MOVLW	0x01
00028c   1283     bcf     0x03, 0x5        	BANKSEL	INDF
00028d   1303     bcf     0x03, 0x6        
00028e   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	92; "push_button.c"	break;
00028f   2b18     goto    0x0318           	GOTO	_00156_DS_
                                           _00142_DS_
                                           ;	.line	94; "push_button.c"	if(pb_info[current_button].samples[1] == PB_PRESSED_VOLTAGE)
000290   3001     movlw   0x01             	MOVLW	0x01
000291   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
000292   1303     bcf     0x03, 0x6        
000293   074b     addwf   0x4b, 0x0        	ADDWF	r0x1027,W
000294   00cf     movwf   0x4f             	MOVWF	r0x102B
000295   01d0     clrf    0x50             	CLRF	r0x102C
000296   0dd0     rlf     0x50, 0x1        	RLF	r0x102C,F
000297   084c     movf    0x4c, 0x0        	MOVF	r0x1028,W
000298   07d0     addwf   0x50, 0x1        	ADDWF	r0x102C,F
000299   084f     movf    0x4f, 0x0        	MOVF	r0x102B,W
00029a   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00029b   1303     bcf     0x03, 0x6        
00029c   0084     movwf   0x04             	MOVWF	FSR
00029d   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00029e   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
00029f   1303     bcf     0x03, 0x6        
0002a0   1850     btfsc   0x50, 0x0        	BTFSC	r0x102C,0
0002a1   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002a2   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002a3   1303     bcf     0x03, 0x6        
0002a4   0800     movf    0x00, 0x0        	MOVF	INDF,W
0002a5   1283     bcf     0x03, 0x5        	BANKSEL	r0x102D
0002a6   1303     bcf     0x03, 0x6        
0002a7   00d1     movwf   0x51             	MOVWF	r0x102D
0002a8   0851     movf    0x51, 0x0        	MOVF	r0x102D,W
0002a9   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0002aa   2b18     goto    0x0318           	GOTO	_00156_DS_
                                           ;	.line	96; "push_button.c"	pb_info[current_button].state = PB_PRESSED;
0002ab   084d     movf    0x4d, 0x0        	MOVF	r0x1029,W
0002ac   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002ad   1303     bcf     0x03, 0x6        
0002ae   0084     movwf   0x04             	MOVWF	FSR
0002af   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002b0   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
0002b1   1303     bcf     0x03, 0x6        
0002b2   184e     btfsc   0x4e, 0x0        	BTFSC	r0x102A,0
0002b3   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002b4   3002     movlw   0x02             	MOVLW	0x02
0002b5   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002b6   1303     bcf     0x03, 0x6        
0002b7   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	98; "push_button.c"	break;
0002b8   2b18     goto    0x0318           	GOTO	_00156_DS_
                                           _00145_DS_
                                           ;	.line	100; "push_button.c"	if((pb_info[current_button].samples[0] == PB_RELEASED_VOLTAGE) &&
0002b9   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
0002ba   1303     bcf     0x03, 0x6        
0002bb   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
0002bc   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002bd   1303     bcf     0x03, 0x6        
0002be   0084     movwf   0x04             	MOVWF	FSR
0002bf   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002c0   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
0002c1   1303     bcf     0x03, 0x6        
0002c2   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1028,0
0002c3   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002c4   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002c5   1303     bcf     0x03, 0x6        
0002c6   0800     movf    0x00, 0x0        	MOVF	INDF,W
0002c7   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
0002c8   1303     bcf     0x03, 0x6        
0002c9   00cf     movwf   0x4f             	MOVWF	r0x102B
0002ca   3a01     xorlw   0x01             	XORLW	0x01
0002cb   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0002cc   2b18     goto    0x0318           	GOTO	_00156_DS_
                                           ;	.line	101; "push_button.c"	(pb_info[current_button].samples[1] == PB_RELEASED_VOLTAGE))
0002cd   3001     movlw   0x01             	MOVLW	0x01
0002ce   074b     addwf   0x4b, 0x0        	ADDWF	r0x1027,W
0002cf   00cf     movwf   0x4f             	MOVWF	r0x102B
0002d0   01d0     clrf    0x50             	CLRF	r0x102C
0002d1   0dd0     rlf     0x50, 0x1        	RLF	r0x102C,F
0002d2   084c     movf    0x4c, 0x0        	MOVF	r0x1028,W
0002d3   07d0     addwf   0x50, 0x1        	ADDWF	r0x102C,F
0002d4   084f     movf    0x4f, 0x0        	MOVF	r0x102B,W
0002d5   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002d6   1303     bcf     0x03, 0x6        
0002d7   0084     movwf   0x04             	MOVWF	FSR
0002d8   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002d9   1283     bcf     0x03, 0x5        	BANKSEL	r0x102C
0002da   1303     bcf     0x03, 0x6        
0002db   1850     btfsc   0x50, 0x0        	BTFSC	r0x102C,0
0002dc   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002dd   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002de   1303     bcf     0x03, 0x6        
0002df   0800     movf    0x00, 0x0        	MOVF	INDF,W
0002e0   1283     bcf     0x03, 0x5        	BANKSEL	r0x102D
0002e1   1303     bcf     0x03, 0x6        
0002e2   00d1     movwf   0x51             	MOVWF	r0x102D
0002e3   3a01     xorlw   0x01             	XORLW	0x01
0002e4   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0002e5   2b18     goto    0x0318           	GOTO	_00156_DS_
                                           ;	.line	103; "push_button.c"	pb_info[current_button].state = PB_PRE_RELEASED;
0002e6   084d     movf    0x4d, 0x0        	MOVF	r0x1029,W
0002e7   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002e8   1303     bcf     0x03, 0x6        
0002e9   0084     movwf   0x04             	MOVWF	FSR
0002ea   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002eb   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
0002ec   1303     bcf     0x03, 0x6        
0002ed   184e     btfsc   0x4e, 0x0        	BTFSC	r0x102A,0
0002ee   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0002ef   3003     movlw   0x03             	MOVLW	0x03
0002f0   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0002f1   1303     bcf     0x03, 0x6        
0002f2   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	105; "push_button.c"	break;
0002f3   2b18     goto    0x0318           	GOTO	_00156_DS_
                                           _00149_DS_
                                           ;	.line	107; "push_button.c"	if(pb_info[current_button].samples[1] == PB_RELEASED_VOLTAGE)
0002f4   1283     bcf     0x03, 0x5        	BANKSEL	r0x1027
0002f5   1303     bcf     0x03, 0x6        
0002f6   0acb     incf    0x4b, 0x1        	INCF	r0x1027,F
0002f7   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0002f8   0acc     incf    0x4c, 0x1        	INCF	r0x1028,F
0002f9   084b     movf    0x4b, 0x0        	MOVF	r0x1027,W
0002fa   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0002fb   1303     bcf     0x03, 0x6        
0002fc   0084     movwf   0x04             	MOVWF	FSR
0002fd   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0002fe   1283     bcf     0x03, 0x5        	BANKSEL	r0x1028
0002ff   1303     bcf     0x03, 0x6        
000300   184c     btfsc   0x4c, 0x0        	BTFSC	r0x1028,0
000301   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000302   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000303   1303     bcf     0x03, 0x6        
000304   0800     movf    0x00, 0x0        	MOVF	INDF,W
000305   1283     bcf     0x03, 0x5        	BANKSEL	r0x102B
000306   1303     bcf     0x03, 0x6        
000307   00cf     movwf   0x4f             	MOVWF	r0x102B
000308   3a01     xorlw   0x01             	XORLW	0x01
000309   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00030a   2b18     goto    0x0318           	GOTO	_00156_DS_
                                           ;	.line	109; "push_button.c"	pb_info[current_button].state = PB_RELEASED;
00030b   084d     movf    0x4d, 0x0        	MOVF	r0x1029,W
00030c   1283     bcf     0x03, 0x5        	BANKSEL	FSR
00030d   1303     bcf     0x03, 0x6        
00030e   0084     movwf   0x04             	MOVWF	FSR
00030f   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000310   1283     bcf     0x03, 0x5        	BANKSEL	r0x102A
000311   1303     bcf     0x03, 0x6        
000312   184e     btfsc   0x4e, 0x0        	BTFSC	r0x102A,0
000313   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000314   3000     movlw   0x00             	MOVLW	0x00
000315   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000316   1303     bcf     0x03, 0x6        
000317   0080     movwf   0x00             	MOVWF	INDF
                                           _00156_DS_
                                           ;	.line	59; "push_button.c"	for (current_button = PB_POWER; current_button <= PB_UNUSED; current_button++)
000318   1283     bcf     0x03, 0x5        	BANKSEL	r0x1026
000319   1303     bcf     0x03, 0x6        
00031a   0aca     incf    0x4a, 0x1        	INCF	r0x1026,F
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
00031b   3004     movlw   0x04             	MOVLW	0x04
00031c   024a     subwf   0x4a, 0x0        	SUBWF	r0x1026,W
00031d   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
00031e   295a     goto    0x015a           	GOTO	_00155_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;	.line	119; "push_button.c"	SetValue_update(); //fn to check for the push buttons to decrement and increment the user set value
00031f   2036     call    0x0036           	CALL	_SetValue_update
000320   0008     return                   	RETURN	
                                           ; exit point of _PB_Update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _PB_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   __mulchar
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   __mulchar
                                           ;7 compiler assigned registers:
                                           ;   r0x102E
                                           ;   STK00
                                           ;   r0x102F
                                           ;   STK01
                                           ;   r0x1030
                                           ;   r0x1031
                                           ;   r0x1032
                                           ;; Starting pCode block
                                           _PB_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	15; "push_button.c"	void PB_Init(tPB pb, tPB_State initial_state)
000321   1283     bcf     0x03, 0x5        	BANKSEL	r0x102E
000322   1303     bcf     0x03, 0x6        
000323   00c5     movwf   0x45             	MOVWF	r0x102E
000324   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000325   00c6     movwf   0x46             	MOVWF	r0x102F
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
                                           ;	.line	18; "push_button.c"	switch(pb)
000326   3004     movlw   0x04             	MOVLW	0x04
000327   0245     subwf   0x45, 0x0        	SUBWF	r0x102E,W
000328   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000329   2b67     goto    0x0367           	GOTO	_00110_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
00032a   3003     movlw   0x03             	MOVLW	HIGH(_00125_DS_)
00032b   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00032c   1303     bcf     0x03, 0x6        
00032d   008a     movwf   0x0a             	MOVWF	PCLATH
00032e   3038     movlw   0x38             	MOVLW	_00125_DS_
00032f   1283     bcf     0x03, 0x5        	BANKSEL	r0x102E
000330   1303     bcf     0x03, 0x6        
000331   0745     addwf   0x45, 0x0        	ADDWF	r0x102E,W
000332   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000333   2b37     goto    0x0337           	GOTO	_00003_DS_
000334   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
000335   1303     bcf     0x03, 0x6        
000336   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00003_DS_
000337   0082     movwf   0x02             	MOVWF	PCL
                                           _00125_DS_
000338   2b3c     goto    0x033c           	GOTO	_00105_DS_
000339   2b47     goto    0x0347           	GOTO	_00106_DS_
00033a   2b52     goto    0x0352           	GOTO	_00107_DS_
00033b   2b5d     goto    0x035d           	GOTO	_00108_DS_
                                           _00105_DS_
                                           ;	.line	21; "push_button.c"	GPIO_InitPortPin(PORT_B, 0,GPIO_IN);
00033c   3001     movlw   0x01             	MOVLW	0x01
00033d   00fe     movwf   0x7e             	MOVWF	STK01
00033e   3000     movlw   0x00             	MOVLW	0x00
00033f   00ff     movwf   0x7f             	MOVWF	STK00
000340   3001     movlw   0x01             	MOVLW	0x01
000341   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000342   120a     bcf     0x0a, 0x4        
000343   265f     call    0x065f           	CALL	_GPIO_InitPortPin
000344   118a     bcf     0x0a, 0x3        	PAGESEL	$
000345   120a     bcf     0x0a, 0x4        
                                           ;	.line	22; "push_button.c"	break;
000346   2b67     goto    0x0367           	GOTO	_00110_DS_
                                           _00106_DS_
                                           ;	.line	24; "push_button.c"	GPIO_InitPortPin(PORT_B, 1,GPIO_IN);
000347   3001     movlw   0x01             	MOVLW	0x01
000348   00fe     movwf   0x7e             	MOVWF	STK01
000349   3001     movlw   0x01             	MOVLW	0x01
00034a   00ff     movwf   0x7f             	MOVWF	STK00
00034b   3001     movlw   0x01             	MOVLW	0x01
00034c   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
00034d   120a     bcf     0x0a, 0x4        
00034e   265f     call    0x065f           	CALL	_GPIO_InitPortPin
00034f   118a     bcf     0x0a, 0x3        	PAGESEL	$
000350   120a     bcf     0x0a, 0x4        
                                           ;	.line	25; "push_button.c"	break;
000351   2b67     goto    0x0367           	GOTO	_00110_DS_
                                           _00107_DS_
                                           ;	.line	27; "push_button.c"	GPIO_InitPortPin(PORT_B, 2,GPIO_IN);
000352   3001     movlw   0x01             	MOVLW	0x01
000353   00fe     movwf   0x7e             	MOVWF	STK01
000354   3002     movlw   0x02             	MOVLW	0x02
000355   00ff     movwf   0x7f             	MOVWF	STK00
000356   3001     movlw   0x01             	MOVLW	0x01
000357   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000358   120a     bcf     0x0a, 0x4        
000359   265f     call    0x065f           	CALL	_GPIO_InitPortPin
00035a   118a     bcf     0x0a, 0x3        	PAGESEL	$
00035b   120a     bcf     0x0a, 0x4        
                                           ;	.line	28; "push_button.c"	break;
00035c   2b67     goto    0x0367           	GOTO	_00110_DS_
                                           _00108_DS_
                                           ;	.line	30; "push_button.c"	GPIO_InitPortPin(PORT_B, 3,GPIO_IN);
00035d   3001     movlw   0x01             	MOVLW	0x01
00035e   00fe     movwf   0x7e             	MOVWF	STK01
00035f   3003     movlw   0x03             	MOVLW	0x03
000360   00ff     movwf   0x7f             	MOVWF	STK00
000361   3001     movlw   0x01             	MOVLW	0x01
000362   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000363   120a     bcf     0x0a, 0x4        
000364   265f     call    0x065f           	CALL	_GPIO_InitPortPin
000365   118a     bcf     0x0a, 0x3        	PAGESEL	$
000366   120a     bcf     0x0a, 0x4        
                                           _00110_DS_
                                           ;	.line	38; "push_button.c"	pb_info[pb].state = initial_state;
000367   3003     movlw   0x03             	MOVLW	0x03
000368   00ff     movwf   0x7f             	MOVWF	STK00
000369   1283     bcf     0x03, 0x5        	BANKSEL	r0x102E
00036a   1303     bcf     0x03, 0x6        
00036b   0845     movf    0x45, 0x0        	MOVF	r0x102E,W
00036c   158a     bsf     0x0a, 0x3        	PAGESEL	__mulchar
00036d   160a     bsf     0x0a, 0x4        
00036e   20f8     call    0x00f8           	CALL	__mulchar
00036f   118a     bcf     0x0a, 0x3        	PAGESEL	$
000370   120a     bcf     0x0a, 0x4        
000371   1283     bcf     0x03, 0x5        	BANKSEL	r0x1030
000372   1303     bcf     0x03, 0x6        
000373   00c7     movwf   0x47             	MOVWF	r0x1030
000374   01c8     clrf    0x48             	CLRF	r0x1031
000375   0847     movf    0x47, 0x0        	MOVF	r0x1030,W
000376   3e5a     addlw   0x5a             	ADDLW	(_pb_info + 0)
000377   00c7     movwf   0x47             	MOVWF	r0x1030
000378   3000     movlw   0x00             	MOVLW	high (_pb_info + 0)
000379   00c5     movwf   0x45             	MOVWF	r0x102E
00037a   3000     movlw   0x00             	MOVLW	0x00
00037b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00037c   0f48     incfsz  0x48, 0x0        	INCFSZ	r0x1031,W
00037d   07c5     addwf   0x45, 0x1        	ADDWF	r0x102E,F
00037e   3002     movlw   0x02             	MOVLW	0x02
00037f   0747     addwf   0x47, 0x0        	ADDWF	r0x1030,W
000380   00c8     movwf   0x48             	MOVWF	r0x1031
000381   01c9     clrf    0x49             	CLRF	r0x1032
000382   0dc9     rlf     0x49, 0x1        	RLF	r0x1032,F
000383   0845     movf    0x45, 0x0        	MOVF	r0x102E,W
000384   07c9     addwf   0x49, 0x1        	ADDWF	r0x1032,F
000385   0848     movf    0x48, 0x0        	MOVF	r0x1031,W
000386   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000387   1303     bcf     0x03, 0x6        
000388   0084     movwf   0x04             	MOVWF	FSR
000389   1383     bcf     0x03, 0x7        	BCF	STATUS,7
00038a   1283     bcf     0x03, 0x5        	BANKSEL	r0x1032
00038b   1303     bcf     0x03, 0x6        
00038c   1849     btfsc   0x49, 0x0        	BTFSC	r0x1032,0
00038d   1783     bsf     0x03, 0x7        	BSF	STATUS,7
00038e   0846     movf    0x46, 0x0        	MOVF	r0x102F,W
00038f   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000390   1303     bcf     0x03, 0x6        
000391   0080     movwf   0x00             	MOVWF	INDF
                                           ;;swapping arguments (AOP_TYPEs 1/2)
                                           ;;unsigned compare: left >= lit(0x4=4), size=1
                                           ;	.line	41; "push_button.c"	switch (initial_state)
000392   3004     movlw   0x04             	MOVLW	0x04
000393   1283     bcf     0x03, 0x5        	BANKSEL	r0x102F
000394   1303     bcf     0x03, 0x6        
000395   0246     subwf   0x46, 0x0        	SUBWF	r0x102F,W
000396   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000397   2bf1     goto    0x03f1           	GOTO	_00116_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
000398   3003     movlw   0x03             	MOVLW	HIGH(_00127_DS_)
000399   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
00039a   1303     bcf     0x03, 0x6        
00039b   008a     movwf   0x0a             	MOVWF	PCLATH
00039c   30a6     movlw   0xa6             	MOVLW	_00127_DS_
00039d   1283     bcf     0x03, 0x5        	BANKSEL	r0x102F
00039e   1303     bcf     0x03, 0x6        
00039f   0746     addwf   0x46, 0x0        	ADDWF	r0x102F,W
0003a0   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0003a1   2ba5     goto    0x03a5           	GOTO	_00004_DS_
0003a2   1283     bcf     0x03, 0x5        	BANKSEL	PCLATH
0003a3   1303     bcf     0x03, 0x6        
0003a4   0a8a     incf    0x0a, 0x1        	INCF	PCLATH,F
                                           _00004_DS_
0003a5   0082     movwf   0x02             	MOVWF	PCL
                                           _00127_DS_
0003a6   2baa     goto    0x03aa           	GOTO	_00112_DS_
0003a7   2bd0     goto    0x03d0           	GOTO	_00114_DS_
0003a8   2bd0     goto    0x03d0           	GOTO	_00114_DS_
0003a9   2baa     goto    0x03aa           	GOTO	_00112_DS_
                                           _00112_DS_
                                           ;	.line	45; "push_button.c"	pb_info[pb].samples[0] = PB_RELEASED_VOLTAGE;
0003aa   1283     bcf     0x03, 0x5        	BANKSEL	r0x1030
0003ab   1303     bcf     0x03, 0x6        
0003ac   0847     movf    0x47, 0x0        	MOVF	r0x1030,W
0003ad   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0003ae   1303     bcf     0x03, 0x6        
0003af   0084     movwf   0x04             	MOVWF	FSR
0003b0   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0003b1   1283     bcf     0x03, 0x5        	BANKSEL	r0x102E
0003b2   1303     bcf     0x03, 0x6        
0003b3   1845     btfsc   0x45, 0x0        	BTFSC	r0x102E,0
0003b4   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0003b5   3001     movlw   0x01             	MOVLW	0x01
0003b6   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0003b7   1303     bcf     0x03, 0x6        
0003b8   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	46; "push_button.c"	pb_info[pb].samples[1] = PB_RELEASED_VOLTAGE;
0003b9   3001     movlw   0x01             	MOVLW	0x01
0003ba   1283     bcf     0x03, 0x5        	BANKSEL	r0x1030
0003bb   1303     bcf     0x03, 0x6        
0003bc   0747     addwf   0x47, 0x0        	ADDWF	r0x1030,W
0003bd   00c6     movwf   0x46             	MOVWF	r0x102F
0003be   01c8     clrf    0x48             	CLRF	r0x1031
0003bf   0dc8     rlf     0x48, 0x1        	RLF	r0x1031,F
0003c0   0845     movf    0x45, 0x0        	MOVF	r0x102E,W
0003c1   07c8     addwf   0x48, 0x1        	ADDWF	r0x1031,F
0003c2   0846     movf    0x46, 0x0        	MOVF	r0x102F,W
0003c3   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0003c4   1303     bcf     0x03, 0x6        
0003c5   0084     movwf   0x04             	MOVWF	FSR
0003c6   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0003c7   1283     bcf     0x03, 0x5        	BANKSEL	r0x1031
0003c8   1303     bcf     0x03, 0x6        
0003c9   1848     btfsc   0x48, 0x0        	BTFSC	r0x1031,0
0003ca   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0003cb   3001     movlw   0x01             	MOVLW	0x01
0003cc   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0003cd   1303     bcf     0x03, 0x6        
0003ce   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	47; "push_button.c"	break;
0003cf   2bf1     goto    0x03f1           	GOTO	_00116_DS_
                                           _00114_DS_
                                           ;	.line	50; "push_button.c"	pb_info[pb].samples[0] = PB_PRESSED_VOLTAGE;
0003d0   1283     bcf     0x03, 0x5        	BANKSEL	r0x1030
0003d1   1303     bcf     0x03, 0x6        
0003d2   0847     movf    0x47, 0x0        	MOVF	r0x1030,W
0003d3   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0003d4   1303     bcf     0x03, 0x6        
0003d5   0084     movwf   0x04             	MOVWF	FSR
0003d6   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0003d7   1283     bcf     0x03, 0x5        	BANKSEL	r0x102E
0003d8   1303     bcf     0x03, 0x6        
0003d9   1845     btfsc   0x45, 0x0        	BTFSC	r0x102E,0
0003da   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0003db   3000     movlw   0x00             	MOVLW	0x00
0003dc   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0003dd   1303     bcf     0x03, 0x6        
0003de   0080     movwf   0x00             	MOVWF	INDF
                                           ;	.line	51; "push_button.c"	pb_info[pb].samples[1] = PB_PRESSED_VOLTAGE;
0003df   1283     bcf     0x03, 0x5        	BANKSEL	r0x1030
0003e0   1303     bcf     0x03, 0x6        
0003e1   0ac7     incf    0x47, 0x1        	INCF	r0x1030,F
0003e2   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
0003e3   0ac5     incf    0x45, 0x1        	INCF	r0x102E,F
0003e4   0847     movf    0x47, 0x0        	MOVF	r0x1030,W
0003e5   1283     bcf     0x03, 0x5        	BANKSEL	FSR
0003e6   1303     bcf     0x03, 0x6        
0003e7   0084     movwf   0x04             	MOVWF	FSR
0003e8   1383     bcf     0x03, 0x7        	BCF	STATUS,7
0003e9   1283     bcf     0x03, 0x5        	BANKSEL	r0x102E
0003ea   1303     bcf     0x03, 0x6        
0003eb   1845     btfsc   0x45, 0x0        	BTFSC	r0x102E,0
0003ec   1783     bsf     0x03, 0x7        	BSF	STATUS,7
0003ed   3000     movlw   0x00             	MOVLW	0x00
0003ee   1283     bcf     0x03, 0x5        	BANKSEL	INDF
0003ef   1303     bcf     0x03, 0x6        
0003f0   0080     movwf   0x00             	MOVWF	INDF
                                           _00116_DS_
                                           ;	.line	53; "push_button.c"	}
0003f1   0008     return                   	RETURN	
                                           ; exit point of _PB_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  584+  186 =   770 instructions ( 1912 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:24 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"setting_mode.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_LED_Init
                                           	extern	_LED_GetState
                                           	extern	_LED_Update
                                           	extern	_Heater_Init
                                           	extern	_Heater_update
                                           	extern	_Heater_GetState
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pex_update
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_SettingMode_update
                                           	global	_Counters
                                           	global	_Readings
                                           	global	_Flags
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           UD_setting_mode_0	udata
                                           _Counters	res	10
                                           
                                           UD_setting_mode_1	udata
                                           _Readings	res	8
                                           
                                           UD_setting_mode_2	udata
                                           _Flags	res	6
                                           
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_setting_mode_0	udata
                                           r0x1028	res	1
                                           r0x1029	res	1
                                           r0x101C	res	1
                                           r0x101D	res	1
                                           r0x101E	res	1
                                           r0x101F	res	1
                                           r0x1020	res	1
                                           r0x1021	res	1
                                           r0x1022	res	1
                                           r0x1023	res	1
                                           r0x1024	res	1
                                           r0x1025	res	1
                                           r0x1026	res	1
                                           r0x1027	res	1
                                           r0x1018	res	1
                                           r0x1019	res	1
                                           r0x101A	res	1
                                           r0x101B	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_setting_mode	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SettingMode_OFF_mode	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_state
                                           ;1 compiler assigned register :
                                           ;   STK00
                                           ;; Starting pCode block
                                           _SettingMode_OFF_mode	;Function start
                                           ; 2 exit points
                                           ;	.line	72; "setting_mode.c"	SSD_SET_state(SSD_MR,SSD_OFF);
000d83   3000     movlw   0x00             	MOVLW	0x00
000d84   00ff     movwf   0x7f             	MOVWF	STK00
000d85   3000     movlw   0x00             	MOVLW	0x00
000d86   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_SET_state
000d87   120a     bcf     0x0a, 0x4        
000d88   2504     call    0x0504           	CALL	_SSD_SET_state
000d89   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d8a   120a     bcf     0x0a, 0x4        
                                           ;	.line	73; "setting_mode.c"	SSD_SET_state(SSD_R,SSD_OFF);
000d8b   3000     movlw   0x00             	MOVLW	0x00
000d8c   00ff     movwf   0x7f             	MOVWF	STK00
000d8d   3001     movlw   0x01             	MOVLW	0x01
000d8e   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_SET_state
000d8f   120a     bcf     0x0a, 0x4        
000d90   2504     call    0x0504           	CALL	_SSD_SET_state
000d91   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d92   120a     bcf     0x0a, 0x4        
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	75; "setting_mode.c"	Flags.Heater_Operation = OFF ; //Turn off The heater element
000d93   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000d94   1703     bsf     0x03, 0x6        
000d95   01b1     clrf    0x31             	CLRF	(_Flags + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	76; "setting_mode.c"	Flags.Cooler_Operation = OFF ; //Turn off Heater element
000d96   01b2     clrf    0x32             	CLRF	(_Flags + 3)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	78; "setting_mode.c"	Flags.Toggle_led = 2;        //Turn off Warning Led
000d97   3002     movlw   0x02             	MOVLW	0x02
000d98   00b0     movwf   0x30             	MOVWF	(_Flags + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	80; "setting_mode.c"	Counters.FixedMode_counter  = 0 ;
000d99   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000d9a   1703     bsf     0x03, 0x6        
000d9b   0190     clrf    0x10             	CLRF	(_Counters + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
000d9c   0191     clrf    0x11             	CLRF	(_Counters + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	81; "setting_mode.c"	Counters.Blink_counter      = 0 ;
000d9d   0192     clrf    0x12             	CLRF	(_Counters + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
000d9e   0193     clrf    0x13             	CLRF	(_Counters + 3)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;	.line	82; "setting_mode.c"	Readings.temp_read          = 0 ;
000d9f   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000da0   1703     bsf     0x03, 0x6        
000da1   019a     clrf    0x1a             	CLRF	(_Readings + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
000da2   019b     clrf    0x1b             	CLRF	(_Readings + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
000da3   019c     clrf    0x1c             	CLRF	(_Readings + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
000da4   019d     clrf    0x1d             	CLRF	(_Readings + 3)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	83; "setting_mode.c"	Flags.next_state = 0 ;
000da5   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000da6   1703     bsf     0x03, 0x6        
000da7   01af     clrf    0x2f             	CLRF	(_Flags + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	84; "setting_mode.c"	Counters.FixedMode_counter = 250; //Turn on to fixed mode
000da8   30fa     movlw   0xfa             	MOVLW	0xfa
000da9   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000daa   1703     bsf     0x03, 0x6        
000dab   0090     movwf   0x10             	MOVWF	(_Counters + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
000dac   0191     clrf    0x11             	CLRF	(_Counters + 1)
000dad   0008     return                   	RETURN	
                                           ; exit point of _SettingMode_OFF_mode
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SettingMode_Blinking_mode	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;4 compiler assigned registers:
                                           ;   r0x1018
                                           ;   r0x1019
                                           ;   r0x101A
                                           ;   r0x101B
                                           ;; Starting pCode block
                                           _SettingMode_Blinking_mode	;Function start
                                           ; 2 exit points
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	56; "setting_mode.c"	Flags.Heater_Operation = OFF ; //Turn off The heater element
000dae   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000daf   1703     bsf     0x03, 0x6        
000db0   01b1     clrf    0x31             	CLRF	(_Flags + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	57; "setting_mode.c"	Flags.Cooler_Operation = OFF ;//Turn off Heater element
000db1   01b2     clrf    0x32             	CLRF	(_Flags + 3)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	58; "setting_mode.c"	Flags.Toggle_led = 2;      //Turn off Heating element Led
000db2   3002     movlw   0x02             	MOVLW	0x02
000db3   00b0     movwf   0x30             	MOVWF	(_Flags + 1)
                                           ;	.line	60; "setting_mode.c"	if(Counters.Blink_counter == 25)
000db4   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000db5   1703     bsf     0x03, 0x6        
000db6   0812     movf    0x12, 0x0        	MOVF	(_Counters + 2),W
000db7   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000db8   1303     bcf     0x03, 0x6        
000db9   00d9     movwf   0x59             	MOVWF	r0x1018
000dba   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000dbb   1703     bsf     0x03, 0x6        
000dbc   0813     movf    0x13, 0x0        	MOVF	(_Counters + 3),W
000dbd   1683     bsf     0x03, 0x5        	BANKSEL	r0x1019
000dbe   1303     bcf     0x03, 0x6        
000dbf   00da     movwf   0x5a             	MOVWF	r0x1019
000dc0   0859     movf    0x59, 0x0        	MOVF	r0x1018,W
000dc1   3a19     xorlw   0x19             	XORLW	0x19
000dc2   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000dc3   2dd8     goto    0x05d8           	GOTO	_00149_DS_
000dc4   085a     movf    0x5a, 0x0        	MOVF	r0x1019,W
000dc5   3a00     xorlw   0x00             	XORLW	0x00
000dc6   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000dc7   2dd8     goto    0x05d8           	GOTO	_00149_DS_
                                           ;	.line	62; "setting_mode.c"	Flags.next_state^=1;         //toggle SSD State
000dc8   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000dc9   1703     bsf     0x03, 0x6        
000dca   082f     movf    0x2f, 0x0        	MOVF	(_Flags + 0),W
000dcb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000dcc   1303     bcf     0x03, 0x6        
000dcd   00d9     movwf   0x59             	MOVWF	r0x1018
000dce   3001     movlw   0x01             	MOVLW	0x01
000dcf   06d9     xorwf   0x59, 0x1        	XORWF	r0x1018,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
000dd0   0859     movf    0x59, 0x0        	MOVF	r0x1018,W
000dd1   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000dd2   1703     bsf     0x03, 0x6        
000dd3   00af     movwf   0x2f             	MOVWF	(_Flags + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
                                           ;	.line	63; "setting_mode.c"	Counters.Blink_counter = 0 ;
000dd4   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000dd5   1703     bsf     0x03, 0x6        
000dd6   0192     clrf    0x12             	CLRF	(_Counters + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
000dd7   0193     clrf    0x13             	CLRF	(_Counters + 3)
                                           _00149_DS_
                                           ;	.line	65; "setting_mode.c"	Counters.Blink_counter++;
000dd8   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000dd9   1703     bsf     0x03, 0x6        
000dda   0812     movf    0x12, 0x0        	MOVF	(_Counters + 2),W
000ddb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000ddc   1303     bcf     0x03, 0x6        
000ddd   00d9     movwf   0x59             	MOVWF	r0x1018
000dde   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000ddf   1703     bsf     0x03, 0x6        
000de0   0813     movf    0x13, 0x0        	MOVF	(_Counters + 3),W
000de1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1019
000de2   1303     bcf     0x03, 0x6        
000de3   00da     movwf   0x5a             	MOVWF	r0x1019
000de4   0ad9     incf    0x59, 0x1        	INCF	r0x1018,F
000de5   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000de6   0ada     incf    0x5a, 0x1        	INCF	r0x1019,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
000de7   0859     movf    0x59, 0x0        	MOVF	r0x1018,W
000de8   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000de9   1703     bsf     0x03, 0x6        
000dea   0092     movwf   0x12             	MOVWF	(_Counters + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
000deb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1019
000dec   1303     bcf     0x03, 0x6        
000ded   085a     movf    0x5a, 0x0        	MOVF	r0x1019,W
000dee   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000def   1703     bsf     0x03, 0x6        
000df0   0093     movwf   0x13             	MOVWF	(_Counters + 3)
                                           ;	.line	66; "setting_mode.c"	Counters.FixedMode_counter++;
000df1   0810     movf    0x10, 0x0        	MOVF	(_Counters + 0),W
000df2   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000df3   1303     bcf     0x03, 0x6        
000df4   00d9     movwf   0x59             	MOVWF	r0x1018
000df5   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000df6   1703     bsf     0x03, 0x6        
000df7   0811     movf    0x11, 0x0        	MOVF	(_Counters + 1),W
000df8   1683     bsf     0x03, 0x5        	BANKSEL	r0x1019
000df9   1303     bcf     0x03, 0x6        
000dfa   00da     movwf   0x5a             	MOVWF	r0x1019
000dfb   0ad9     incf    0x59, 0x1        	INCF	r0x1018,F
000dfc   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000dfd   0ada     incf    0x5a, 0x1        	INCF	r0x1019,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=0, AOP_TYPE(res)=8
000dfe   0859     movf    0x59, 0x0        	MOVF	r0x1018,W
000dff   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000e00   1703     bsf     0x03, 0x6        
000e01   0090     movwf   0x10             	MOVWF	(_Counters + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=1, AOP_TYPE(res)=8
000e02   1683     bsf     0x03, 0x5        	BANKSEL	r0x1019
000e03   1303     bcf     0x03, 0x6        
000e04   085a     movf    0x5a, 0x0        	MOVF	r0x1019,W
000e05   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000e06   1703     bsf     0x03, 0x6        
000e07   0091     movwf   0x11             	MOVWF	(_Counters + 1)
                                           ;	.line	67; "setting_mode.c"	Counters.e2prom_count++;
000e08   0816     movf    0x16, 0x0        	MOVF	(_Counters + 6),W
000e09   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000e0a   1303     bcf     0x03, 0x6        
000e0b   00d9     movwf   0x59             	MOVWF	r0x1018
000e0c   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000e0d   1703     bsf     0x03, 0x6        
000e0e   0817     movf    0x17, 0x0        	MOVF	(_Counters + 7),W
000e0f   1683     bsf     0x03, 0x5        	BANKSEL	r0x1019
000e10   1303     bcf     0x03, 0x6        
000e11   00da     movwf   0x5a             	MOVWF	r0x1019
000e12   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000e13   1703     bsf     0x03, 0x6        
000e14   0818     movf    0x18, 0x0        	MOVF	(_Counters + 8),W
000e15   1683     bsf     0x03, 0x5        	BANKSEL	r0x101A
000e16   1303     bcf     0x03, 0x6        
000e17   00db     movwf   0x5b             	MOVWF	r0x101A
000e18   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000e19   1703     bsf     0x03, 0x6        
000e1a   0819     movf    0x19, 0x0        	MOVF	(_Counters + 9),W
000e1b   1683     bsf     0x03, 0x5        	BANKSEL	r0x101B
000e1c   1303     bcf     0x03, 0x6        
000e1d   00dc     movwf   0x5c             	MOVWF	r0x101B
000e1e   0ad9     incf    0x59, 0x1        	INCF	r0x1018,F
000e1f   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e20   0ada     incf    0x5a, 0x1        	INCF	r0x1019,F
000e21   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e22   0adb     incf    0x5b, 0x1        	INCF	r0x101A,F
000e23   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000e24   0adc     incf    0x5c, 0x1        	INCF	r0x101B,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
000e25   0859     movf    0x59, 0x0        	MOVF	r0x1018,W
000e26   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000e27   1703     bsf     0x03, 0x6        
000e28   0096     movwf   0x16             	MOVWF	(_Counters + 6)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
000e29   1683     bsf     0x03, 0x5        	BANKSEL	r0x1019
000e2a   1303     bcf     0x03, 0x6        
000e2b   085a     movf    0x5a, 0x0        	MOVF	r0x1019,W
000e2c   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000e2d   1703     bsf     0x03, 0x6        
000e2e   0097     movwf   0x17             	MOVWF	(_Counters + 7)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
000e2f   1683     bsf     0x03, 0x5        	BANKSEL	r0x101A
000e30   1303     bcf     0x03, 0x6        
000e31   085b     movf    0x5b, 0x0        	MOVF	r0x101A,W
000e32   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000e33   1703     bsf     0x03, 0x6        
000e34   0098     movwf   0x18             	MOVWF	(_Counters + 8)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
000e35   1683     bsf     0x03, 0x5        	BANKSEL	r0x101B
000e36   1303     bcf     0x03, 0x6        
000e37   085c     movf    0x5c, 0x0        	MOVF	r0x101B,W
000e38   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000e39   1703     bsf     0x03, 0x6        
000e3a   0099     movwf   0x19             	MOVWF	(_Counters + 9)
000e3b   0008     return                   	RETURN	
                                           ; exit point of _SettingMode_Blinking_mode
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SettingMode_Fixed_mode	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;12 compiler assigned registers:
                                           ;   r0x101C
                                           ;   r0x101D
                                           ;   r0x101E
                                           ;   r0x101F
                                           ;   r0x1020
                                           ;   r0x1021
                                           ;   r0x1022
                                           ;   r0x1023
                                           ;   r0x1024
                                           ;   r0x1025
                                           ;   r0x1026
                                           ;   r0x1027
                                           ;; Starting pCode block
                                           _SettingMode_Fixed_mode	;Function start
                                           ; 2 exit points
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	37; "setting_mode.c"	Flags.next_state = 1 ; //make the SSD go into normal operation
000e3c   3001     movlw   0x01             	MOVLW	0x01
000e3d   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000e3e   1703     bsf     0x03, 0x6        
000e3f   00af     movwf   0x2f             	MOVWF	(_Flags + 0)
                                           ;	.line	39; "setting_mode.c"	if(Readings.temp_read <= (Readings.Set_value-5))
000e40   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000e41   1703     bsf     0x03, 0x6        
000e42   081a     movf    0x1a, 0x0        	MOVF	(_Readings + 0),W
000e43   1683     bsf     0x03, 0x5        	BANKSEL	r0x101C
000e44   1303     bcf     0x03, 0x6        
000e45   00cd     movwf   0x4d             	MOVWF	r0x101C
000e46   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000e47   1703     bsf     0x03, 0x6        
000e48   081b     movf    0x1b, 0x0        	MOVF	(_Readings + 1),W
000e49   1683     bsf     0x03, 0x5        	BANKSEL	r0x101D
000e4a   1303     bcf     0x03, 0x6        
000e4b   00ce     movwf   0x4e             	MOVWF	r0x101D
000e4c   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000e4d   1703     bsf     0x03, 0x6        
000e4e   081c     movf    0x1c, 0x0        	MOVF	(_Readings + 2),W
000e4f   1683     bsf     0x03, 0x5        	BANKSEL	r0x101E
000e50   1303     bcf     0x03, 0x6        
000e51   00cf     movwf   0x4f             	MOVWF	r0x101E
000e52   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000e53   1703     bsf     0x03, 0x6        
000e54   081d     movf    0x1d, 0x0        	MOVF	(_Readings + 3),W
000e55   1683     bsf     0x03, 0x5        	BANKSEL	r0x101F
000e56   1303     bcf     0x03, 0x6        
000e57   00d0     movwf   0x50             	MOVWF	r0x101F
000e58   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000e59   1703     bsf     0x03, 0x6        
000e5a   081e     movf    0x1e, 0x0        	MOVF	(_Readings + 4),W
000e5b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1020
000e5c   1303     bcf     0x03, 0x6        
000e5d   00d1     movwf   0x51             	MOVWF	r0x1020
000e5e   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000e5f   1703     bsf     0x03, 0x6        
000e60   081f     movf    0x1f, 0x0        	MOVF	(_Readings + 5),W
000e61   1683     bsf     0x03, 0x5        	BANKSEL	r0x1021
000e62   1303     bcf     0x03, 0x6        
000e63   00d2     movwf   0x52             	MOVWF	r0x1021
000e64   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000e65   1703     bsf     0x03, 0x6        
000e66   0820     movf    0x20, 0x0        	MOVF	(_Readings + 6),W
000e67   1683     bsf     0x03, 0x5        	BANKSEL	r0x1022
000e68   1303     bcf     0x03, 0x6        
000e69   00d3     movwf   0x53             	MOVWF	r0x1022
000e6a   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000e6b   1703     bsf     0x03, 0x6        
000e6c   0821     movf    0x21, 0x0        	MOVF	(_Readings + 7),W
000e6d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1023
000e6e   1303     bcf     0x03, 0x6        
000e6f   00d4     movwf   0x54             	MOVWF	r0x1023
000e70   30fb     movlw   0xfb             	MOVLW	0xfb
000e71   0751     addwf   0x51, 0x0        	ADDWF	r0x1020,W
000e72   00d5     movwf   0x55             	MOVWF	r0x1024
000e73   30ff     movlw   0xff             	MOVLW	0xff
000e74   00d6     movwf   0x56             	MOVWF	r0x1025
000e75   0852     movf    0x52, 0x0        	MOVF	r0x1021,W
000e76   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000e77   0f52     incfsz  0x52, 0x0        	INCFSZ	r0x1021,W
000e78   07d6     addwf   0x56, 0x1        	ADDWF	r0x1025,F
000e79   30ff     movlw   0xff             	MOVLW	0xff
000e7a   00d7     movwf   0x57             	MOVWF	r0x1026
000e7b   0853     movf    0x53, 0x0        	MOVF	r0x1022,W
000e7c   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000e7d   0f53     incfsz  0x53, 0x0        	INCFSZ	r0x1022,W
000e7e   07d7     addwf   0x57, 0x1        	ADDWF	r0x1026,F
000e7f   30ff     movlw   0xff             	MOVLW	0xff
000e80   00d8     movwf   0x58             	MOVWF	r0x1027
000e81   0854     movf    0x54, 0x0        	MOVF	r0x1023,W
000e82   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000e83   0f54     incfsz  0x54, 0x0        	INCFSZ	r0x1023,W
000e84   07d8     addwf   0x58, 0x1        	ADDWF	r0x1027,F
000e85   0850     movf    0x50, 0x0        	MOVF	r0x101F,W
000e86   0258     subwf   0x58, 0x0        	SUBWF	r0x1027,W
000e87   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000e88   2e93     goto    0x0693           	GOTO	_00142_DS_
000e89   084f     movf    0x4f, 0x0        	MOVF	r0x101E,W
000e8a   0257     subwf   0x57, 0x0        	SUBWF	r0x1026,W
000e8b   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000e8c   2e93     goto    0x0693           	GOTO	_00142_DS_
000e8d   084e     movf    0x4e, 0x0        	MOVF	r0x101D,W
000e8e   0256     subwf   0x56, 0x0        	SUBWF	r0x1025,W
000e8f   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000e90   2e93     goto    0x0693           	GOTO	_00142_DS_
000e91   084d     movf    0x4d, 0x0        	MOVF	r0x101C,W
000e92   0255     subwf   0x55, 0x0        	SUBWF	r0x1024,W
                                           _00142_DS_
000e93   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000e94   2e9c     goto    0x069c           	GOTO	_00132_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	41; "setting_mode.c"	Flags.Toggle_led = 1 ;        //the led will toggle
000e95   3001     movlw   0x01             	MOVLW	0x01
                                           ;	.line	42; "setting_mode.c"	Flags.Heater_Operation = ON ; //Turn on The Heater element
000e96   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000e97   1703     bsf     0x03, 0x6        
000e98   00b0     movwf   0x30             	MOVWF	(_Flags + 1)
000e99   00b1     movwf   0x31             	MOVWF	(_Flags + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	43; "setting_mode.c"	Flags.Cooler_Operation = OFF ;//Turn off Cooler element
000e9a   01b2     clrf    0x32             	CLRF	(_Flags + 3)
000e9b   2ed2     goto    0x06d2           	GOTO	_00134_DS_
                                           _00132_DS_
                                           ;	.line	45; "setting_mode.c"	else if(Readings.temp_read >= (Readings.Set_value+5))
000e9c   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000e9d   1703     bsf     0x03, 0x6        
000e9e   081a     movf    0x1a, 0x0        	MOVF	(_Readings + 0),W
000e9f   1683     bsf     0x03, 0x5        	BANKSEL	r0x101C
000ea0   1303     bcf     0x03, 0x6        
000ea1   00cd     movwf   0x4d             	MOVWF	r0x101C
000ea2   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000ea3   1703     bsf     0x03, 0x6        
000ea4   081b     movf    0x1b, 0x0        	MOVF	(_Readings + 1),W
000ea5   1683     bsf     0x03, 0x5        	BANKSEL	r0x101D
000ea6   1303     bcf     0x03, 0x6        
000ea7   00ce     movwf   0x4e             	MOVWF	r0x101D
000ea8   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000ea9   1703     bsf     0x03, 0x6        
000eaa   081c     movf    0x1c, 0x0        	MOVF	(_Readings + 2),W
000eab   1683     bsf     0x03, 0x5        	BANKSEL	r0x101E
000eac   1303     bcf     0x03, 0x6        
000ead   00cf     movwf   0x4f             	MOVWF	r0x101E
000eae   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000eaf   1703     bsf     0x03, 0x6        
000eb0   081d     movf    0x1d, 0x0        	MOVF	(_Readings + 3),W
000eb1   1683     bsf     0x03, 0x5        	BANKSEL	r0x101F
000eb2   1303     bcf     0x03, 0x6        
000eb3   00d0     movwf   0x50             	MOVWF	r0x101F
000eb4   3005     movlw   0x05             	MOVLW	0x05
000eb5   07d1     addwf   0x51, 0x1        	ADDWF	r0x1020,F
000eb6   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000eb7   0ad2     incf    0x52, 0x1        	INCF	r0x1021,F
000eb8   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000eb9   0ad3     incf    0x53, 0x1        	INCF	r0x1022,F
000eba   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000ebb   0ad4     incf    0x54, 0x1        	INCF	r0x1023,F
000ebc   0854     movf    0x54, 0x0        	MOVF	r0x1023,W
000ebd   0250     subwf   0x50, 0x0        	SUBWF	r0x101F,W
000ebe   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000ebf   2eca     goto    0x06ca           	GOTO	_00143_DS_
000ec0   0853     movf    0x53, 0x0        	MOVF	r0x1022,W
000ec1   024f     subwf   0x4f, 0x0        	SUBWF	r0x101E,W
000ec2   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000ec3   2eca     goto    0x06ca           	GOTO	_00143_DS_
000ec4   0852     movf    0x52, 0x0        	MOVF	r0x1021,W
000ec5   024e     subwf   0x4e, 0x0        	SUBWF	r0x101D,W
000ec6   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000ec7   2eca     goto    0x06ca           	GOTO	_00143_DS_
000ec8   0851     movf    0x51, 0x0        	MOVF	r0x1020,W
000ec9   024d     subwf   0x4d, 0x0        	SUBWF	r0x101C,W
                                           _00143_DS_
000eca   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000ecb   2ed2     goto    0x06d2           	GOTO	_00134_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	47; "setting_mode.c"	Flags.Toggle_led   = 0 ;      //the led will turn on without toggling
000ecc   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000ecd   1703     bsf     0x03, 0x6        
000ece   01b0     clrf    0x30             	CLRF	(_Flags + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	48; "setting_mode.c"	Flags.Heater_Operation = OFF ; //Turn on The Heater element
000ecf   01b1     clrf    0x31             	CLRF	(_Flags + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	49; "setting_mode.c"	Flags.Cooler_Operation = ON ;//Turn off Heater element
000ed0   3001     movlw   0x01             	MOVLW	0x01
000ed1   00b2     movwf   0x32             	MOVWF	(_Flags + 3)
                                           _00134_DS_
000ed2   0008     return                   	RETURN	
                                           ; exit point of _SettingMode_Fixed_mode
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SettingMode_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _SettingMode_OFF_mode
                                           ;   _SettingMode_Fixed_mode
                                           ;   _SettingMode_Blinking_mode
                                           ;   _SettingMode_OFF_mode
                                           ;   _SettingMode_Fixed_mode
                                           ;   _SettingMode_Blinking_mode
                                           ;2 compiler assigned registers:
                                           ;   r0x1028
                                           ;   r0x1029
                                           ;; Starting pCode block
                                           _SettingMode_update	;Function start
                                           ; 2 exit points
                                           ;	.line	11; "setting_mode.c"	switch(Flags.Operation_Flag)
000ed3   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000ed4   1703     bsf     0x03, 0x6        
000ed5   0833     movf    0x33, 0x0        	MOVF	(_Flags + 4),W
000ed6   1683     bsf     0x03, 0x5        	BANKSEL	r0x1028
000ed7   1303     bcf     0x03, 0x6        
000ed8   00cb     movwf   0x4b             	MOVWF	r0x1028
000ed9   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000eda   2ee0     goto    0x06e0           	GOTO	_00105_DS_
000edb   084b     movf    0x4b, 0x0        	MOVF	r0x1028,W
000edc   3a01     xorlw   0x01             	XORLW	0x01
000edd   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000ede   2ee2     goto    0x06e2           	GOTO	_00106_DS_
000edf   2ef9     goto    0x06f9           	GOTO	_00112_DS_
                                           _00105_DS_
                                           ;	.line	14; "setting_mode.c"	SettingMode_OFF_mode();
000ee0   2583     call    0x0583           	CALL	_SettingMode_OFF_mode
                                           ;	.line	15; "setting_mode.c"	break;
000ee1   2ef9     goto    0x06f9           	GOTO	_00112_DS_
                                           _00106_DS_
                                           ;	.line	17; "setting_mode.c"	if(Counters.FixedMode_counter == 250)//if 5s are run out without pressing up or down buttons the system goes into fixed mode
000ee2   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000ee3   1703     bsf     0x03, 0x6        
000ee4   0810     movf    0x10, 0x0        	MOVF	(_Counters + 0),W
000ee5   1683     bsf     0x03, 0x5        	BANKSEL	r0x1028
000ee6   1303     bcf     0x03, 0x6        
000ee7   00cb     movwf   0x4b             	MOVWF	r0x1028
000ee8   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
000ee9   1703     bsf     0x03, 0x6        
000eea   0811     movf    0x11, 0x0        	MOVF	(_Counters + 1),W
000eeb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1029
000eec   1303     bcf     0x03, 0x6        
000eed   00cc     movwf   0x4c             	MOVWF	r0x1029
000eee   084b     movf    0x4b, 0x0        	MOVF	r0x1028,W
000eef   3afa     xorlw   0xfa             	XORLW	0xfa
000ef0   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000ef1   2ef8     goto    0x06f8           	GOTO	_00108_DS_
000ef2   084c     movf    0x4c, 0x0        	MOVF	r0x1029,W
000ef3   3a00     xorlw   0x00             	XORLW	0x00
000ef4   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000ef5   2ef8     goto    0x06f8           	GOTO	_00108_DS_
                                           ;	.line	19; "setting_mode.c"	SettingMode_Fixed_mode();
000ef6   263c     call    0x063c           	CALL	_SettingMode_Fixed_mode
000ef7   2ef9     goto    0x06f9           	GOTO	_00112_DS_
                                           _00108_DS_
                                           ;	.line	24; "setting_mode.c"	SettingMode_Blinking_mode();
000ef8   25ae     call    0x05ae           	CALL	_SettingMode_Blinking_mode
                                           _00112_DS_
                                           ;	.line	31; "setting_mode.c"	}
000ef9   0008     return                   	RETURN	
                                           ; exit point of _SettingMode_update
                                           
                                           
                                           ;	code size estimation:
                                           ;	  219+   78 =   297 instructions (  750 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:24 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"SSD.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_SettingMode_update
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_LED_Init
                                           	extern	_LED_GetState
                                           	extern	_LED_Update
                                           	extern	_Heater_Init
                                           	extern	_Heater_update
                                           	extern	_Heater_GetState
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pex_update
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_UTIL_DelayMS
                                           	extern	__modulong
                                           	extern	__divulong
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	__gptrget1
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_SSD_update
                                           	global	_SSD_GET_Symbol
                                           	global	_SSD_GET_state
                                           	global	_SSD_SET_Symbol
                                           	global	_SSD_SET_state
                                           	global	_SSD_Init
                                           	global	_display_flag
                                           	global	_SSD_symbols
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_SSD_0	udata
                                           r0x101F	res	1
                                           r0x1020	res	1
                                           r0x1021	res	1
                                           r0x1022	res	1
                                           r0x1012	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           r0x101D	res	1
                                           r0x101E	res	1
                                           r0x101A	res	1
                                           r0x101B	res	1
                                           r0x1015	res	1
                                           r0x1016	res	1
                                           r0x1017	res	1
                                           r0x1018	res	1
                                           r0x1019	res	1
                                           _SSD_update_current_ssd_1_69	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           
                                           ID_SSD_0	idata
                                           _display_flag
                                           	db	0x01
                                           
                                           
                                           ID_SSD_1	idata
                                           _SSD_symbols
                                           	db	0x0a
                                           	db	0x00
                                           
                                           
                                           ID_SSD_2	code
                                           _symbols
000ff2   343f     retlw   0x3f             	retlw 0x3f
000ff3   3406     retlw   0x06             	retlw 0x06
000ff4   345b     retlw   0x5b             	retlw 0x5b
000ff5   344f     retlw   0x4f             	retlw 0x4f
000ff6   3466     retlw   0x66             	retlw 0x66
000ff7   346d     retlw   0x6d             	retlw 0x6d
000ff8   347d     retlw   0x7d             	retlw 0x7d
000ff9   3407     retlw   0x07             	retlw 0x07
000ffa   347f     retlw   0x7f             	retlw 0x7f
000ffb   346f     retlw   0x6f             	retlw 0x6f
000ffc   3400     retlw   0x00             	retlw 0x00
                                           
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_SSD	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   __modulong
                                           ;   __modulong
                                           ;   __divulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   __modulong
                                           ;   __divulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   _SSD_SET_Symbol
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_state
                                           ;   __gptrget1
                                           ;   _GPIO_SetPortState
                                           ;   _SSD_SET_state
                                           ;   __modulong
                                           ;   __modulong
                                           ;   __divulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   __modulong
                                           ;   __divulong
                                           ;   _SSD_SET_Symbol
                                           ;   __modulong
                                           ;   _SSD_SET_Symbol
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_state
                                           ;   __gptrget1
                                           ;   _GPIO_SetPortState
                                           ;   _SSD_SET_state
                                           ;12 compiler assigned registers:
                                           ;   r0x1015
                                           ;   r0x1016
                                           ;   r0x1017
                                           ;   r0x1018
                                           ;   STK06
                                           ;   STK05
                                           ;   STK04
                                           ;   STK03
                                           ;   STK02
                                           ;   STK01
                                           ;   STK00
                                           ;   r0x1019
                                           ;; Starting pCode block
                                           _SSD_update	;Function start
                                           ; 2 exit points
                                           ;	.line	106; "SSD.c"	if(display_flag)//display the set value
000afc   3000     movlw   0x00             	MOVLW	0x00
000afd   1683     bsf     0x03, 0x5        	BANKSEL	_display_flag
000afe   1703     bsf     0x03, 0x6        
000aff   0441     iorwf   0x41, 0x0        	IORWF	_display_flag,W
000b00   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000b01   2baf     goto    0x03af           	GOTO	_00168_DS_
                                           ;	.line	108; "SSD.c"	SSD_SET_Symbol(SSD_MR,((Readings.Set_value%1000)%100)/10);
000b02   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000b03   1703     bsf     0x03, 0x6        
000b04   081e     movf    0x1e, 0x0        	MOVF	(_Readings + 4),W
000b05   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
000b06   1303     bcf     0x03, 0x6        
000b07   00e8     movwf   0x68             	MOVWF	r0x1015
000b08   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000b09   1703     bsf     0x03, 0x6        
000b0a   081f     movf    0x1f, 0x0        	MOVF	(_Readings + 5),W
000b0b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1016
000b0c   1303     bcf     0x03, 0x6        
000b0d   00e9     movwf   0x69             	MOVWF	r0x1016
000b0e   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000b0f   1703     bsf     0x03, 0x6        
000b10   0820     movf    0x20, 0x0        	MOVF	(_Readings + 6),W
000b11   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
000b12   1303     bcf     0x03, 0x6        
000b13   00ea     movwf   0x6a             	MOVWF	r0x1017
000b14   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000b15   1703     bsf     0x03, 0x6        
000b16   0821     movf    0x21, 0x0        	MOVF	(_Readings + 7),W
000b17   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000b18   1303     bcf     0x03, 0x6        
000b19   00eb     movwf   0x6b             	MOVWF	r0x1018
000b1a   30e8     movlw   0xe8             	MOVLW	0xe8
000b1b   00f9     movwf   0x79             	MOVWF	STK06
000b1c   3003     movlw   0x03             	MOVLW	0x03
000b1d   00fa     movwf   0x7a             	MOVWF	STK05
000b1e   3000     movlw   0x00             	MOVLW	0x00
000b1f   00fb     movwf   0x7b             	MOVWF	STK04
000b20   3000     movlw   0x00             	MOVLW	0x00
000b21   00fc     movwf   0x7c             	MOVWF	STK03
000b22   0868     movf    0x68, 0x0        	MOVF	r0x1015,W
000b23   00fd     movwf   0x7d             	MOVWF	STK02
000b24   0869     movf    0x69, 0x0        	MOVF	r0x1016,W
000b25   00fe     movwf   0x7e             	MOVWF	STK01
000b26   086a     movf    0x6a, 0x0        	MOVF	r0x1017,W
000b27   00ff     movwf   0x7f             	MOVWF	STK00
000b28   086b     movf    0x6b, 0x0        	MOVF	r0x1018,W
000b29   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000b2a   160a     bsf     0x0a, 0x4        
000b2b   275f     call    0x075f           	CALL	__modulong
000b2c   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b2d   120a     bcf     0x0a, 0x4        
000b2e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000b2f   1303     bcf     0x03, 0x6        
000b30   00eb     movwf   0x6b             	MOVWF	r0x1018
000b31   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000b32   00ea     movwf   0x6a             	MOVWF	r0x1017
000b33   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000b34   00e9     movwf   0x69             	MOVWF	r0x1016
000b35   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000b36   00e8     movwf   0x68             	MOVWF	r0x1015
000b37   3064     movlw   0x64             	MOVLW	0x64
000b38   00f9     movwf   0x79             	MOVWF	STK06
000b39   3000     movlw   0x00             	MOVLW	0x00
000b3a   00fa     movwf   0x7a             	MOVWF	STK05
000b3b   3000     movlw   0x00             	MOVLW	0x00
000b3c   00fb     movwf   0x7b             	MOVWF	STK04
000b3d   3000     movlw   0x00             	MOVLW	0x00
000b3e   00fc     movwf   0x7c             	MOVWF	STK03
000b3f   0868     movf    0x68, 0x0        	MOVF	r0x1015,W
000b40   00fd     movwf   0x7d             	MOVWF	STK02
000b41   0869     movf    0x69, 0x0        	MOVF	r0x1016,W
000b42   00fe     movwf   0x7e             	MOVWF	STK01
000b43   086a     movf    0x6a, 0x0        	MOVF	r0x1017,W
000b44   00ff     movwf   0x7f             	MOVWF	STK00
000b45   086b     movf    0x6b, 0x0        	MOVF	r0x1018,W
000b46   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000b47   160a     bsf     0x0a, 0x4        
000b48   275f     call    0x075f           	CALL	__modulong
000b49   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b4a   120a     bcf     0x0a, 0x4        
000b4b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000b4c   1303     bcf     0x03, 0x6        
000b4d   00eb     movwf   0x6b             	MOVWF	r0x1018
000b4e   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000b4f   00ea     movwf   0x6a             	MOVWF	r0x1017
000b50   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000b51   00e9     movwf   0x69             	MOVWF	r0x1016
000b52   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000b53   00e8     movwf   0x68             	MOVWF	r0x1015
000b54   300a     movlw   0x0a             	MOVLW	0x0a
000b55   00f9     movwf   0x79             	MOVWF	STK06
000b56   3000     movlw   0x00             	MOVLW	0x00
000b57   00fa     movwf   0x7a             	MOVWF	STK05
000b58   3000     movlw   0x00             	MOVLW	0x00
000b59   00fb     movwf   0x7b             	MOVWF	STK04
000b5a   3000     movlw   0x00             	MOVLW	0x00
000b5b   00fc     movwf   0x7c             	MOVWF	STK03
000b5c   0868     movf    0x68, 0x0        	MOVF	r0x1015,W
000b5d   00fd     movwf   0x7d             	MOVWF	STK02
000b5e   0869     movf    0x69, 0x0        	MOVF	r0x1016,W
000b5f   00fe     movwf   0x7e             	MOVWF	STK01
000b60   086a     movf    0x6a, 0x0        	MOVF	r0x1017,W
000b61   00ff     movwf   0x7f             	MOVWF	STK00
000b62   086b     movf    0x6b, 0x0        	MOVF	r0x1018,W
000b63   118a     bcf     0x0a, 0x3        	PAGESEL	__divulong
000b64   160a     bsf     0x0a, 0x4        
000b65   2674     call    0x0674           	CALL	__divulong
000b66   158a     bsf     0x0a, 0x3        	PAGESEL	$
000b67   120a     bcf     0x0a, 0x4        
000b68   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000b69   1303     bcf     0x03, 0x6        
000b6a   00eb     movwf   0x6b             	MOVWF	r0x1018
000b6b   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000b6c   00ea     movwf   0x6a             	MOVWF	r0x1017
000b6d   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000b6e   00e9     movwf   0x69             	MOVWF	r0x1016
000b6f   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000b70   00e8     movwf   0x68             	MOVWF	r0x1015
000b71   00ec     movwf   0x6c             	MOVWF	r0x1019
000b72   00ff     movwf   0x7f             	MOVWF	STK00
000b73   3000     movlw   0x00             	MOVLW	0x00
000b74   24ea     call    0x04ea           	CALL	_SSD_SET_Symbol
                                           ;	.line	109; "SSD.c"	SSD_SET_Symbol(SSD_R,Readings.Set_value%10);
000b75   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000b76   1703     bsf     0x03, 0x6        
000b77   081e     movf    0x1e, 0x0        	MOVF	(_Readings + 4),W
000b78   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
000b79   1303     bcf     0x03, 0x6        
000b7a   00e8     movwf   0x68             	MOVWF	r0x1015
000b7b   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000b7c   1703     bsf     0x03, 0x6        
000b7d   081f     movf    0x1f, 0x0        	MOVF	(_Readings + 5),W
000b7e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1016
000b7f   1303     bcf     0x03, 0x6        
000b80   00e9     movwf   0x69             	MOVWF	r0x1016
000b81   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000b82   1703     bsf     0x03, 0x6        
000b83   0820     movf    0x20, 0x0        	MOVF	(_Readings + 6),W
000b84   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
000b85   1303     bcf     0x03, 0x6        
000b86   00ea     movwf   0x6a             	MOVWF	r0x1017
000b87   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000b88   1703     bsf     0x03, 0x6        
000b89   0821     movf    0x21, 0x0        	MOVF	(_Readings + 7),W
000b8a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000b8b   1303     bcf     0x03, 0x6        
000b8c   00eb     movwf   0x6b             	MOVWF	r0x1018
000b8d   300a     movlw   0x0a             	MOVLW	0x0a
000b8e   00f9     movwf   0x79             	MOVWF	STK06
000b8f   3000     movlw   0x00             	MOVLW	0x00
000b90   00fa     movwf   0x7a             	MOVWF	STK05
000b91   3000     movlw   0x00             	MOVLW	0x00
000b92   00fb     movwf   0x7b             	MOVWF	STK04
000b93   3000     movlw   0x00             	MOVLW	0x00
000b94   00fc     movwf   0x7c             	MOVWF	STK03
000b95   0868     movf    0x68, 0x0        	MOVF	r0x1015,W
000b96   00fd     movwf   0x7d             	MOVWF	STK02
000b97   0869     movf    0x69, 0x0        	MOVF	r0x1016,W
000b98   00fe     movwf   0x7e             	MOVWF	STK01
000b99   086a     movf    0x6a, 0x0        	MOVF	r0x1017,W
000b9a   00ff     movwf   0x7f             	MOVWF	STK00
000b9b   086b     movf    0x6b, 0x0        	MOVF	r0x1018,W
000b9c   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000b9d   160a     bsf     0x0a, 0x4        
000b9e   275f     call    0x075f           	CALL	__modulong
000b9f   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ba0   120a     bcf     0x0a, 0x4        
000ba1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000ba2   1303     bcf     0x03, 0x6        
000ba3   00eb     movwf   0x6b             	MOVWF	r0x1018
000ba4   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000ba5   00ea     movwf   0x6a             	MOVWF	r0x1017
000ba6   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000ba7   00e9     movwf   0x69             	MOVWF	r0x1016
000ba8   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000ba9   00e8     movwf   0x68             	MOVWF	r0x1015
000baa   00ec     movwf   0x6c             	MOVWF	r0x1019
000bab   00ff     movwf   0x7f             	MOVWF	STK00
000bac   3001     movlw   0x01             	MOVLW	0x01
000bad   24ea     call    0x04ea           	CALL	_SSD_SET_Symbol
000bae   2c5b     goto    0x045b           	GOTO	_00169_DS_
                                           _00168_DS_
                                           ;	.line	113; "SSD.c"	SSD_SET_Symbol(SSD_MR,((Readings.temp_read%1000)%100)/10);
000baf   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000bb0   1703     bsf     0x03, 0x6        
000bb1   081a     movf    0x1a, 0x0        	MOVF	(_Readings + 0),W
000bb2   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
000bb3   1303     bcf     0x03, 0x6        
000bb4   00e8     movwf   0x68             	MOVWF	r0x1015
000bb5   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000bb6   1703     bsf     0x03, 0x6        
000bb7   081b     movf    0x1b, 0x0        	MOVF	(_Readings + 1),W
000bb8   1683     bsf     0x03, 0x5        	BANKSEL	r0x1016
000bb9   1303     bcf     0x03, 0x6        
000bba   00e9     movwf   0x69             	MOVWF	r0x1016
000bbb   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000bbc   1703     bsf     0x03, 0x6        
000bbd   081c     movf    0x1c, 0x0        	MOVF	(_Readings + 2),W
000bbe   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
000bbf   1303     bcf     0x03, 0x6        
000bc0   00ea     movwf   0x6a             	MOVWF	r0x1017
000bc1   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000bc2   1703     bsf     0x03, 0x6        
000bc3   081d     movf    0x1d, 0x0        	MOVF	(_Readings + 3),W
000bc4   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000bc5   1303     bcf     0x03, 0x6        
000bc6   00eb     movwf   0x6b             	MOVWF	r0x1018
000bc7   30e8     movlw   0xe8             	MOVLW	0xe8
000bc8   00f9     movwf   0x79             	MOVWF	STK06
000bc9   3003     movlw   0x03             	MOVLW	0x03
000bca   00fa     movwf   0x7a             	MOVWF	STK05
000bcb   3000     movlw   0x00             	MOVLW	0x00
000bcc   00fb     movwf   0x7b             	MOVWF	STK04
000bcd   3000     movlw   0x00             	MOVLW	0x00
000bce   00fc     movwf   0x7c             	MOVWF	STK03
000bcf   0868     movf    0x68, 0x0        	MOVF	r0x1015,W
000bd0   00fd     movwf   0x7d             	MOVWF	STK02
000bd1   0869     movf    0x69, 0x0        	MOVF	r0x1016,W
000bd2   00fe     movwf   0x7e             	MOVWF	STK01
000bd3   086a     movf    0x6a, 0x0        	MOVF	r0x1017,W
000bd4   00ff     movwf   0x7f             	MOVWF	STK00
000bd5   086b     movf    0x6b, 0x0        	MOVF	r0x1018,W
000bd6   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000bd7   160a     bsf     0x0a, 0x4        
000bd8   275f     call    0x075f           	CALL	__modulong
000bd9   158a     bsf     0x0a, 0x3        	PAGESEL	$
000bda   120a     bcf     0x0a, 0x4        
000bdb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000bdc   1303     bcf     0x03, 0x6        
000bdd   00eb     movwf   0x6b             	MOVWF	r0x1018
000bde   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000bdf   00ea     movwf   0x6a             	MOVWF	r0x1017
000be0   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000be1   00e9     movwf   0x69             	MOVWF	r0x1016
000be2   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000be3   00e8     movwf   0x68             	MOVWF	r0x1015
000be4   3064     movlw   0x64             	MOVLW	0x64
000be5   00f9     movwf   0x79             	MOVWF	STK06
000be6   3000     movlw   0x00             	MOVLW	0x00
000be7   00fa     movwf   0x7a             	MOVWF	STK05
000be8   3000     movlw   0x00             	MOVLW	0x00
000be9   00fb     movwf   0x7b             	MOVWF	STK04
000bea   3000     movlw   0x00             	MOVLW	0x00
000beb   00fc     movwf   0x7c             	MOVWF	STK03
000bec   0868     movf    0x68, 0x0        	MOVF	r0x1015,W
000bed   00fd     movwf   0x7d             	MOVWF	STK02
000bee   0869     movf    0x69, 0x0        	MOVF	r0x1016,W
000bef   00fe     movwf   0x7e             	MOVWF	STK01
000bf0   086a     movf    0x6a, 0x0        	MOVF	r0x1017,W
000bf1   00ff     movwf   0x7f             	MOVWF	STK00
000bf2   086b     movf    0x6b, 0x0        	MOVF	r0x1018,W
000bf3   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000bf4   160a     bsf     0x0a, 0x4        
000bf5   275f     call    0x075f           	CALL	__modulong
000bf6   158a     bsf     0x0a, 0x3        	PAGESEL	$
000bf7   120a     bcf     0x0a, 0x4        
000bf8   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000bf9   1303     bcf     0x03, 0x6        
000bfa   00eb     movwf   0x6b             	MOVWF	r0x1018
000bfb   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000bfc   00ea     movwf   0x6a             	MOVWF	r0x1017
000bfd   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000bfe   00e9     movwf   0x69             	MOVWF	r0x1016
000bff   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000c00   00e8     movwf   0x68             	MOVWF	r0x1015
000c01   300a     movlw   0x0a             	MOVLW	0x0a
000c02   00f9     movwf   0x79             	MOVWF	STK06
000c03   3000     movlw   0x00             	MOVLW	0x00
000c04   00fa     movwf   0x7a             	MOVWF	STK05
000c05   3000     movlw   0x00             	MOVLW	0x00
000c06   00fb     movwf   0x7b             	MOVWF	STK04
000c07   3000     movlw   0x00             	MOVLW	0x00
000c08   00fc     movwf   0x7c             	MOVWF	STK03
000c09   0868     movf    0x68, 0x0        	MOVF	r0x1015,W
000c0a   00fd     movwf   0x7d             	MOVWF	STK02
000c0b   0869     movf    0x69, 0x0        	MOVF	r0x1016,W
000c0c   00fe     movwf   0x7e             	MOVWF	STK01
000c0d   086a     movf    0x6a, 0x0        	MOVF	r0x1017,W
000c0e   00ff     movwf   0x7f             	MOVWF	STK00
000c0f   086b     movf    0x6b, 0x0        	MOVF	r0x1018,W
000c10   118a     bcf     0x0a, 0x3        	PAGESEL	__divulong
000c11   160a     bsf     0x0a, 0x4        
000c12   2674     call    0x0674           	CALL	__divulong
000c13   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c14   120a     bcf     0x0a, 0x4        
000c15   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000c16   1303     bcf     0x03, 0x6        
000c17   00eb     movwf   0x6b             	MOVWF	r0x1018
000c18   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000c19   00ea     movwf   0x6a             	MOVWF	r0x1017
000c1a   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000c1b   00e9     movwf   0x69             	MOVWF	r0x1016
000c1c   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000c1d   00e8     movwf   0x68             	MOVWF	r0x1015
000c1e   00ec     movwf   0x6c             	MOVWF	r0x1019
000c1f   00ff     movwf   0x7f             	MOVWF	STK00
000c20   3000     movlw   0x00             	MOVLW	0x00
000c21   24ea     call    0x04ea           	CALL	_SSD_SET_Symbol
                                           ;	.line	114; "SSD.c"	SSD_SET_Symbol(SSD_R,Readings.temp_read %10);
000c22   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000c23   1703     bsf     0x03, 0x6        
000c24   081a     movf    0x1a, 0x0        	MOVF	(_Readings + 0),W
000c25   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
000c26   1303     bcf     0x03, 0x6        
000c27   00e8     movwf   0x68             	MOVWF	r0x1015
000c28   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000c29   1703     bsf     0x03, 0x6        
000c2a   081b     movf    0x1b, 0x0        	MOVF	(_Readings + 1),W
000c2b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1016
000c2c   1303     bcf     0x03, 0x6        
000c2d   00e9     movwf   0x69             	MOVWF	r0x1016
000c2e   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000c2f   1703     bsf     0x03, 0x6        
000c30   081c     movf    0x1c, 0x0        	MOVF	(_Readings + 2),W
000c31   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
000c32   1303     bcf     0x03, 0x6        
000c33   00ea     movwf   0x6a             	MOVWF	r0x1017
000c34   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
000c35   1703     bsf     0x03, 0x6        
000c36   081d     movf    0x1d, 0x0        	MOVF	(_Readings + 3),W
000c37   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000c38   1303     bcf     0x03, 0x6        
000c39   00eb     movwf   0x6b             	MOVWF	r0x1018
000c3a   300a     movlw   0x0a             	MOVLW	0x0a
000c3b   00f9     movwf   0x79             	MOVWF	STK06
000c3c   3000     movlw   0x00             	MOVLW	0x00
000c3d   00fa     movwf   0x7a             	MOVWF	STK05
000c3e   3000     movlw   0x00             	MOVLW	0x00
000c3f   00fb     movwf   0x7b             	MOVWF	STK04
000c40   3000     movlw   0x00             	MOVLW	0x00
000c41   00fc     movwf   0x7c             	MOVWF	STK03
000c42   0868     movf    0x68, 0x0        	MOVF	r0x1015,W
000c43   00fd     movwf   0x7d             	MOVWF	STK02
000c44   0869     movf    0x69, 0x0        	MOVF	r0x1016,W
000c45   00fe     movwf   0x7e             	MOVWF	STK01
000c46   086a     movf    0x6a, 0x0        	MOVF	r0x1017,W
000c47   00ff     movwf   0x7f             	MOVWF	STK00
000c48   086b     movf    0x6b, 0x0        	MOVF	r0x1018,W
000c49   118a     bcf     0x0a, 0x3        	PAGESEL	__modulong
000c4a   160a     bsf     0x0a, 0x4        
000c4b   275f     call    0x075f           	CALL	__modulong
000c4c   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c4d   120a     bcf     0x0a, 0x4        
000c4e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
000c4f   1303     bcf     0x03, 0x6        
000c50   00eb     movwf   0x6b             	MOVWF	r0x1018
000c51   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000c52   00ea     movwf   0x6a             	MOVWF	r0x1017
000c53   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000c54   00e9     movwf   0x69             	MOVWF	r0x1016
000c55   087d     movf    0x7d, 0x0        	MOVF	STK02,W
000c56   00e8     movwf   0x68             	MOVWF	r0x1015
000c57   00ec     movwf   0x6c             	MOVWF	r0x1019
000c58   00ff     movwf   0x7f             	MOVWF	STK00
000c59   3001     movlw   0x01             	MOVLW	0x01
000c5a   24ea     call    0x04ea           	CALL	_SSD_SET_Symbol
                                           _00169_DS_
                                           ;	.line	116; "SSD.c"	SSD_SET_state(SSD_MR,SSD_OFF);
000c5b   3000     movlw   0x00             	MOVLW	0x00
000c5c   00ff     movwf   0x7f             	MOVWF	STK00
000c5d   3000     movlw   0x00             	MOVLW	0x00
000c5e   2504     call    0x0504           	CALL	_SSD_SET_state
                                           ;	.line	117; "SSD.c"	SSD_SET_state(SSD_R,SSD_OFF);
000c5f   3000     movlw   0x00             	MOVLW	0x00
000c60   00ff     movwf   0x7f             	MOVWF	STK00
000c61   3001     movlw   0x01             	MOVLW	0x01
000c62   2504     call    0x0504           	CALL	_SSD_SET_state
                                           ;	.line	118; "SSD.c"	GPIO_SetPortState(SSD_DataPORT,symbols[SSD_symbols[current_ssd]]);
000c63   1683     bsf     0x03, 0x5        	BANKSEL	_SSD_update_current_ssd_1_69
000c64   1303     bcf     0x03, 0x6        
000c65   086d     movf    0x6d, 0x0        	MOVF	_SSD_update_current_ssd_1_69,W
000c66   3eee     addlw   0xee             	ADDLW	(_SSD_symbols + 0)
000c67   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
000c68   1303     bcf     0x03, 0x6        
000c69   00e8     movwf   0x68             	MOVWF	r0x1015
000c6a   3000     movlw   0x00             	MOVLW	high (_SSD_symbols + 0)
000c6b   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000c6c   3e01     addlw   0x01             	ADDLW	0x01
000c6d   00e9     movwf   0x69             	MOVWF	r0x1016
000c6e   0868     movf    0x68, 0x0        	MOVF	r0x1015,W
000c6f   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000c70   1303     bcf     0x03, 0x6        
000c71   0084     movwf   0x04             	MOVWF	FSR
000c72   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000c73   1683     bsf     0x03, 0x5        	BANKSEL	r0x1016
000c74   1303     bcf     0x03, 0x6        
000c75   1869     btfsc   0x69, 0x0        	BTFSC	r0x1016,0
000c76   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000c77   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000c78   1303     bcf     0x03, 0x6        
000c79   0800     movf    0x00, 0x0        	MOVF	INDF,W
000c7a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
000c7b   1303     bcf     0x03, 0x6        
000c7c   00ea     movwf   0x6a             	MOVWF	r0x1017
000c7d   3ef2     addlw   0xf2             	ADDLW	(_symbols + 0)
000c7e   00e8     movwf   0x68             	MOVWF	r0x1015
000c7f   300f     movlw   0x0f             	MOVLW	high (_symbols + 0)
000c80   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000c81   3e01     addlw   0x01             	ADDLW	0x01
000c82   00e9     movwf   0x69             	MOVWF	r0x1016
000c83   0868     movf    0x68, 0x0        	MOVF	r0x1015,W
000c84   00fe     movwf   0x7e             	MOVWF	STK01
000c85   0869     movf    0x69, 0x0        	MOVF	r0x1016,W
000c86   00ff     movwf   0x7f             	MOVWF	STK00
000c87   3080     movlw   0x80             	MOVLW	0x80
000c88   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
000c89   160a     bsf     0x0a, 0x4        
000c8a   27c5     call    0x07c5           	CALL	__gptrget1
000c8b   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c8c   120a     bcf     0x0a, 0x4        
000c8d   1683     bsf     0x03, 0x5        	BANKSEL	r0x1017
000c8e   1303     bcf     0x03, 0x6        
000c8f   00ea     movwf   0x6a             	MOVWF	r0x1017
000c90   00ff     movwf   0x7f             	MOVWF	STK00
000c91   3003     movlw   0x03             	MOVLW	0x03
000c92   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortState
000c93   120a     bcf     0x0a, 0x4        
000c94   2511     call    0x0511           	CALL	_GPIO_SetPortState
000c95   158a     bsf     0x0a, 0x3        	PAGESEL	$
000c96   120a     bcf     0x0a, 0x4        
                                           ;	.line	119; "SSD.c"	SSD_SET_state(current_ssd,Flags.next_state);
000c97   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
000c98   1703     bsf     0x03, 0x6        
000c99   082f     movf    0x2f, 0x0        	MOVF	(_Flags + 0),W
000c9a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
000c9b   1303     bcf     0x03, 0x6        
000c9c   00e8     movwf   0x68             	MOVWF	r0x1015
000c9d   00ff     movwf   0x7f             	MOVWF	STK00
000c9e   1683     bsf     0x03, 0x5        	BANKSEL	_SSD_update_current_ssd_1_69
000c9f   1303     bcf     0x03, 0x6        
000ca0   086d     movf    0x6d, 0x0        	MOVF	_SSD_update_current_ssd_1_69,W
000ca1   2504     call    0x0504           	CALL	_SSD_SET_state
                                           ;	.line	120; "SSD.c"	if(current_ssd == SSD_R)
000ca2   1683     bsf     0x03, 0x5        	BANKSEL	_SSD_update_current_ssd_1_69
000ca3   1303     bcf     0x03, 0x6        
000ca4   086d     movf    0x6d, 0x0        	MOVF	_SSD_update_current_ssd_1_69,W
000ca5   3a01     xorlw   0x01             	XORLW	0x01
000ca6   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000ca7   2caa     goto    0x04aa           	GOTO	_00171_DS_
                                           ;	.line	122; "SSD.c"	current_ssd  = SSD_MR;
000ca8   01ed     clrf    0x6d             	CLRF	_SSD_update_current_ssd_1_69
000ca9   2cad     goto    0x04ad           	GOTO	_00173_DS_
                                           _00171_DS_
                                           ;	.line	127; "SSD.c"	current_ssd++;
000caa   1683     bsf     0x03, 0x5        	BANKSEL	_SSD_update_current_ssd_1_69
000cab   1303     bcf     0x03, 0x6        
000cac   0aed     incf    0x6d, 0x1        	INCF	_SSD_update_current_ssd_1_69,F
                                           _00173_DS_
000cad   0008     return                   	RETURN	
                                           ; exit point of _SSD_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_GET_Symbol	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;3 compiler assigned registers:
                                           ;   r0x101A
                                           ;   r0x101B
                                           ;   r0x101C
                                           ;; Starting pCode block
                                           _SSD_GET_Symbol	;Function start
                                           ; 2 exit points
                                           ;	.line	92; "SSD.c"	SSD_symbol SSD_GET_Symbol(tSSD ssd)
000cae   1683     bsf     0x03, 0x5        	BANKSEL	r0x101A
000caf   1303     bcf     0x03, 0x6        
000cb0   00e6     movwf   0x66             	MOVWF	r0x101A
                                           ;	.line	97; "SSD.c"	ret = SSD_symbols[ssd];
000cb1   3eee     addlw   0xee             	ADDLW	(_SSD_symbols + 0)
000cb2   00e6     movwf   0x66             	MOVWF	r0x101A
000cb3   3000     movlw   0x00             	MOVLW	high (_SSD_symbols + 0)
000cb4   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000cb5   3e01     addlw   0x01             	ADDLW	0x01
000cb6   00e7     movwf   0x67             	MOVWF	r0x101B
000cb7   0866     movf    0x66, 0x0        	MOVF	r0x101A,W
000cb8   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000cb9   1303     bcf     0x03, 0x6        
000cba   0084     movwf   0x04             	MOVWF	FSR
000cbb   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000cbc   1683     bsf     0x03, 0x5        	BANKSEL	r0x101B
000cbd   1303     bcf     0x03, 0x6        
000cbe   1867     btfsc   0x67, 0x0        	BTFSC	r0x101B,0
000cbf   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000cc0   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000cc1   1303     bcf     0x03, 0x6        
000cc2   0800     movf    0x00, 0x0        	MOVF	INDF,W
                                           ;;1	MOVWF	r0x101C
                                           ;	.line	99; "SSD.c"	return ret;
000cc3   0008     return                   	RETURN	
                                           ; exit point of _SSD_GET_Symbol
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_GET_state	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;   _GPIO_GetPortPinState
                                           ;3 compiler assigned registers:
                                           ;   r0x101D
                                           ;   r0x101E
                                           ;   STK00
                                           ;; Starting pCode block
                                           _SSD_GET_state	;Function start
                                           ; 2 exit points
                                           ;	.line	72; "SSD.c"	SSD_STATE SSD_GET_state(tSSD ssd)
000cc4   1683     bsf     0x03, 0x5        	BANKSEL	r0x101D
000cc5   1303     bcf     0x03, 0x6        
000cc6   00e4     movwf   0x64             	MOVWF	r0x101D
                                           ;	.line	74; "SSD.c"	switch(ssd)
000cc7   00e5     movwf   0x65             	MOVWF	r0x101E
000cc8   0865     movf    0x65, 0x0        	MOVF	r0x101E,W
000cc9   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000cca   2cd0     goto    0x04d0           	GOTO	_00145_DS_
000ccb   0864     movf    0x64, 0x0        	MOVF	r0x101D,W
000ccc   3a01     xorlw   0x01             	XORLW	0x01
000ccd   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000cce   2cdc     goto    0x04dc           	GOTO	_00146_DS_
000ccf   2ce8     goto    0x04e8           	GOTO	_00147_DS_
                                           _00145_DS_
                                           ;	.line	78; "SSD.c"	return GPIO_GetPortPinState(SSD_En_PORT,SSD_MR_En_Pin);
000cd0   3004     movlw   0x04             	MOVLW	0x04
000cd1   00ff     movwf   0x7f             	MOVWF	STK00
000cd2   3000     movlw   0x00             	MOVLW	0x00
000cd3   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000cd4   120a     bcf     0x0a, 0x4        
000cd5   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
000cd6   158a     bsf     0x0a, 0x3        	PAGESEL	$
000cd7   120a     bcf     0x0a, 0x4        
000cd8   1683     bsf     0x03, 0x5        	BANKSEL	r0x101D
000cd9   1303     bcf     0x03, 0x6        
000cda   00e4     movwf   0x64             	MOVWF	r0x101D
000cdb   2ce9     goto    0x04e9           	GOTO	_00149_DS_
                                           _00146_DS_
                                           ;	.line	81; "SSD.c"	return GPIO_GetPortPinState(SSD_En_PORT,SSD_R_En_Pin);
000cdc   3005     movlw   0x05             	MOVLW	0x05
000cdd   00ff     movwf   0x7f             	MOVWF	STK00
000cde   3000     movlw   0x00             	MOVLW	0x00
000cdf   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_GetPortPinState
000ce0   120a     bcf     0x0a, 0x4        
000ce1   23f2     call    0x03f2           	CALL	_GPIO_GetPortPinState
000ce2   158a     bsf     0x0a, 0x3        	PAGESEL	$
000ce3   120a     bcf     0x0a, 0x4        
000ce4   1683     bsf     0x03, 0x5        	BANKSEL	r0x101D
000ce5   1303     bcf     0x03, 0x6        
000ce6   00e4     movwf   0x64             	MOVWF	r0x101D
000ce7   2ce9     goto    0x04e9           	GOTO	_00149_DS_
                                           _00147_DS_
                                           ;	.line	85; "SSD.c"	return 0;
000ce8   3000     movlw   0x00             	MOVLW	0x00
                                           _00149_DS_
                                           ;	.line	87; "SSD.c"	}
000ce9   0008     return                   	RETURN	
                                           ; exit point of _SSD_GET_state
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_SET_Symbol	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;4 compiler assigned registers:
                                           ;   r0x1012
                                           ;   STK00
                                           ;   r0x1013
                                           ;   r0x1014
                                           ;; Starting pCode block
                                           _SSD_SET_Symbol	;Function start
                                           ; 2 exit points
                                           ;	.line	66; "SSD.c"	void SSD_SET_Symbol(tSSD ssd,SSD_symbol symbol)
000cea   1683     bsf     0x03, 0x5        	BANKSEL	r0x1012
000ceb   1303     bcf     0x03, 0x6        
000cec   00e1     movwf   0x61             	MOVWF	r0x1012
000ced   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000cee   00e2     movwf   0x62             	MOVWF	r0x1013
                                           ;	.line	68; "SSD.c"	SSD_symbols[ssd] = symbol ;
000cef   0861     movf    0x61, 0x0        	MOVF	r0x1012,W
000cf0   3eee     addlw   0xee             	ADDLW	(_SSD_symbols + 0)
000cf1   00e1     movwf   0x61             	MOVWF	r0x1012
000cf2   3000     movlw   0x00             	MOVLW	high (_SSD_symbols + 0)
000cf3   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000cf4   3e01     addlw   0x01             	ADDLW	0x01
000cf5   00e3     movwf   0x63             	MOVWF	r0x1014
000cf6   0861     movf    0x61, 0x0        	MOVF	r0x1012,W
000cf7   1283     bcf     0x03, 0x5        	BANKSEL	FSR
000cf8   1303     bcf     0x03, 0x6        
000cf9   0084     movwf   0x04             	MOVWF	FSR
000cfa   1383     bcf     0x03, 0x7        	BCF	STATUS,7
000cfb   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
000cfc   1303     bcf     0x03, 0x6        
000cfd   1863     btfsc   0x63, 0x0        	BTFSC	r0x1014,0
000cfe   1783     bsf     0x03, 0x7        	BSF	STATUS,7
000cff   0862     movf    0x62, 0x0        	MOVF	r0x1013,W
000d00   1283     bcf     0x03, 0x5        	BANKSEL	INDF
000d01   1303     bcf     0x03, 0x6        
000d02   0080     movwf   0x00             	MOVWF	INDF
000d03   0008     return                   	RETURN	
                                           ; exit point of _SSD_SET_Symbol
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_SET_state	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;   _GPIO_SetPortPinState
                                           ;5 compiler assigned registers:
                                           ;   r0x1012
                                           ;   STK00
                                           ;   r0x1013
                                           ;   r0x1014
                                           ;   STK01
                                           ;; Starting pCode block
                                           _SSD_SET_state	;Function start
                                           ; 2 exit points
                                           ;	.line	48; "SSD.c"	void SSD_SET_state(tSSD ssd,SSD_STATE state)
000d04   1683     bsf     0x03, 0x5        	BANKSEL	r0x1012
000d05   1303     bcf     0x03, 0x6        
000d06   00e1     movwf   0x61             	MOVWF	r0x1012
000d07   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000d08   00e2     movwf   0x62             	MOVWF	r0x1013
                                           ;	.line	50; "SSD.c"	switch(ssd)
000d09   0861     movf    0x61, 0x0        	MOVF	r0x1012,W
                                           ;;1	MOVWF	r0x1014
000d0a   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000d0b   2d11     goto    0x0511           	GOTO	_00123_DS_
000d0c   0861     movf    0x61, 0x0        	MOVF	r0x1012,W
000d0d   3a01     xorlw   0x01             	XORLW	0x01
000d0e   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000d0f   2d1e     goto    0x051e           	GOTO	_00124_DS_
000d10   2d2a     goto    0x052a           	GOTO	_00127_DS_
                                           _00123_DS_
                                           ;	.line	54; "SSD.c"	GPIO_SetPortPinState(SSD_En_PORT,SSD_MR_En_Pin,state);
000d11   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
000d12   1303     bcf     0x03, 0x6        
000d13   0862     movf    0x62, 0x0        	MOVF	r0x1013,W
000d14   00fe     movwf   0x7e             	MOVWF	STK01
000d15   3004     movlw   0x04             	MOVLW	0x04
000d16   00ff     movwf   0x7f             	MOVWF	STK00
000d17   3000     movlw   0x00             	MOVLW	0x00
000d18   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000d19   120a     bcf     0x0a, 0x4        
000d1a   2553     call    0x0553           	CALL	_GPIO_SetPortPinState
000d1b   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d1c   120a     bcf     0x0a, 0x4        
                                           ;	.line	55; "SSD.c"	break;
000d1d   2d2a     goto    0x052a           	GOTO	_00127_DS_
                                           _00124_DS_
                                           ;	.line	57; "SSD.c"	GPIO_SetPortPinState(SSD_En_PORT,SSD_R_En_Pin,state);
000d1e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
000d1f   1303     bcf     0x03, 0x6        
000d20   0862     movf    0x62, 0x0        	MOVF	r0x1013,W
000d21   00fe     movwf   0x7e             	MOVWF	STK01
000d22   3005     movlw   0x05             	MOVLW	0x05
000d23   00ff     movwf   0x7f             	MOVWF	STK00
000d24   3000     movlw   0x00             	MOVLW	0x00
000d25   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortPinState
000d26   120a     bcf     0x0a, 0x4        
000d27   2553     call    0x0553           	CALL	_GPIO_SetPortPinState
000d28   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d29   120a     bcf     0x0a, 0x4        
                                           _00127_DS_
                                           ;	.line	62; "SSD.c"	}
000d2a   0008     return                   	RETURN	
                                           ; exit point of _SSD_SET_state
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _SSD_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _GPIO_InitPort
                                           ;   __gptrget1
                                           ;   _GPIO_SetPortState
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_Symbol
                                           ;   _GPIO_InitPort
                                           ;   __gptrget1
                                           ;   _GPIO_SetPortState
                                           ;   _GPIO_InitPortPin
                                           ;   _GPIO_InitPortPin
                                           ;   _SSD_SET_state
                                           ;   _SSD_SET_Symbol
                                           ;6 compiler assigned registers:
                                           ;   r0x101F
                                           ;   STK00
                                           ;   r0x1020
                                           ;   STK01
                                           ;   r0x1021
                                           ;   r0x1022
                                           ;; Starting pCode block
                                           _SSD_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	23; "SSD.c"	void SSD_Init(tSSD ssd,SSD_STATE initial_state, SSD_symbol initial_symbol)
000d2b   1683     bsf     0x03, 0x5        	BANKSEL	r0x101F
000d2c   1303     bcf     0x03, 0x6        
000d2d   00dd     movwf   0x5d             	MOVWF	r0x101F
000d2e   087f     movf    0x7f, 0x0        	MOVF	STK00,W
000d2f   00de     movwf   0x5e             	MOVWF	r0x1020
000d30   087e     movf    0x7e, 0x0        	MOVF	STK01,W
000d31   00df     movwf   0x5f             	MOVWF	r0x1021
                                           ;	.line	27; "SSD.c"	GPIO_InitPort(SSD_DataPORT,GPIO_OUT);
000d32   3000     movlw   0x00             	MOVLW	0x00
000d33   00ff     movwf   0x7f             	MOVWF	STK00
000d34   3003     movlw   0x03             	MOVLW	0x03
000d35   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPort
000d36   120a     bcf     0x0a, 0x4        
000d37   2649     call    0x0649           	CALL	_GPIO_InitPort
000d38   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d39   120a     bcf     0x0a, 0x4        
                                           ;	.line	28; "SSD.c"	GPIO_SetPortState(SSD_DataPORT,symbols[SSD_NULL]);
000d3a   30fc     movlw   0xfc             	MOVLW	(_symbols + 10)
000d3b   00fe     movwf   0x7e             	MOVWF	STK01
000d3c   300f     movlw   0x0f             	MOVLW	high (_symbols + 10)
000d3d   00ff     movwf   0x7f             	MOVWF	STK00
000d3e   3080     movlw   0x80             	MOVLW	0x80
000d3f   118a     bcf     0x0a, 0x3        	PAGESEL	__gptrget1
000d40   160a     bsf     0x0a, 0x4        
000d41   27c5     call    0x07c5           	CALL	__gptrget1
000d42   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d43   120a     bcf     0x0a, 0x4        
000d44   1683     bsf     0x03, 0x5        	BANKSEL	r0x1022
000d45   1303     bcf     0x03, 0x6        
000d46   00e0     movwf   0x60             	MOVWF	r0x1022
000d47   00ff     movwf   0x7f             	MOVWF	STK00
000d48   3003     movlw   0x03             	MOVLW	0x03
000d49   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_SetPortState
000d4a   120a     bcf     0x0a, 0x4        
000d4b   2511     call    0x0511           	CALL	_GPIO_SetPortState
000d4c   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d4d   120a     bcf     0x0a, 0x4        
                                           ;	.line	30; "SSD.c"	switch(ssd)
000d4e   1683     bsf     0x03, 0x5        	BANKSEL	r0x101F
000d4f   1303     bcf     0x03, 0x6        
000d50   085d     movf    0x5d, 0x0        	MOVF	r0x101F,W
000d51   00e0     movwf   0x60             	MOVWF	r0x1022
000d52   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000d53   2d59     goto    0x0559           	GOTO	_00105_DS_
000d54   085d     movf    0x5d, 0x0        	MOVF	r0x101F,W
000d55   3a01     xorlw   0x01             	XORLW	0x01
000d56   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
000d57   2d64     goto    0x0564           	GOTO	_00106_DS_
000d58   2d6e     goto    0x056e           	GOTO	_00108_DS_
                                           _00105_DS_
                                           ;	.line	34; "SSD.c"	GPIO_InitPortPin(SSD_En_PORT,SSD_MR_En_Pin,GPIO_OUT);
000d59   3000     movlw   0x00             	MOVLW	0x00
000d5a   00fe     movwf   0x7e             	MOVWF	STK01
000d5b   3004     movlw   0x04             	MOVLW	0x04
000d5c   00ff     movwf   0x7f             	MOVWF	STK00
000d5d   3000     movlw   0x00             	MOVLW	0x00
000d5e   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000d5f   120a     bcf     0x0a, 0x4        
000d60   265f     call    0x065f           	CALL	_GPIO_InitPortPin
000d61   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d62   120a     bcf     0x0a, 0x4        
                                           ;	.line	35; "SSD.c"	break;
000d63   2d6e     goto    0x056e           	GOTO	_00108_DS_
                                           _00106_DS_
                                           ;	.line	37; "SSD.c"	GPIO_InitPortPin(SSD_En_PORT,SSD_R_En_Pin,GPIO_OUT);
000d64   3000     movlw   0x00             	MOVLW	0x00
000d65   00fe     movwf   0x7e             	MOVWF	STK01
000d66   3005     movlw   0x05             	MOVLW	0x05
000d67   00ff     movwf   0x7f             	MOVWF	STK00
000d68   3000     movlw   0x00             	MOVLW	0x00
000d69   118a     bcf     0x0a, 0x3        	PAGESEL	_GPIO_InitPortPin
000d6a   120a     bcf     0x0a, 0x4        
000d6b   265f     call    0x065f           	CALL	_GPIO_InitPortPin
000d6c   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d6d   120a     bcf     0x0a, 0x4        
                                           _00108_DS_
                                           ;	.line	44; "SSD.c"	SSD_SET_state(ssd,initial_state);
000d6e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1020
000d6f   1303     bcf     0x03, 0x6        
000d70   085e     movf    0x5e, 0x0        	MOVF	r0x1020,W
000d71   00ff     movwf   0x7f             	MOVWF	STK00
000d72   085d     movf    0x5d, 0x0        	MOVF	r0x101F,W
000d73   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_SET_state
000d74   120a     bcf     0x0a, 0x4        
000d75   2504     call    0x0504           	CALL	_SSD_SET_state
000d76   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d77   120a     bcf     0x0a, 0x4        
                                           ;	.line	45; "SSD.c"	SSD_SET_Symbol(ssd, initial_symbol);
000d78   1683     bsf     0x03, 0x5        	BANKSEL	r0x1021
000d79   1303     bcf     0x03, 0x6        
000d7a   085f     movf    0x5f, 0x0        	MOVF	r0x1021,W
000d7b   00ff     movwf   0x7f             	MOVWF	STK00
000d7c   085d     movf    0x5d, 0x0        	MOVF	r0x101F,W
000d7d   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_SET_Symbol
000d7e   120a     bcf     0x0a, 0x4        
000d7f   24ea     call    0x04ea           	CALL	_SSD_SET_Symbol
000d80   158a     bsf     0x0a, 0x3        	PAGESEL	$
000d81   120a     bcf     0x0a, 0x4        
000d82   0008     return                   	RETURN	
                                           ; exit point of _SSD_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  419+  114 =   533 instructions ( 1294 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:24 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"Temp.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_LED_Init
                                           	extern	_LED_GetState
                                           	extern	_LED_Update
                                           	extern	_Heater_Init
                                           	extern	_Heater_update
                                           	extern	_Heater_GetState
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pex_update
                                           	extern	_TMR0_Init
                                           	extern	_TMR0_Update
                                           	extern	_TMR0_Start
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_SettingMode_update
                                           	extern	__mullong
                                           	extern	___ulong2fs
                                           	extern	___fsdiv
                                           	extern	___fs2ulong
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_Temprature_update
                                           	global	_Temprature_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_Temp_0	udata
                                           r0x1012	res	1
                                           r0x1013	res	1
                                           r0x1014	res	1
                                           r0x1015	res	1
                                           r0x1018	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_Temp	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Temprature_update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _Temprature_Read
                                           ;   _ADC_GetResult
                                           ;   __mullong
                                           ;   ___ulong2fs
                                           ;   ___fsdiv
                                           ;   ___fs2ulong
                                           ;14 compiler assigned registers:
                                           ;   r0x1018
                                           ;   r0x1012
                                           ;   r0x1013
                                           ;   STK00
                                           ;   r0x1014
                                           ;   r0x1015
                                           ;   r0x1016
                                           ;   r0x1017
                                           ;   STK06
                                           ;   STK05
                                           ;   STK04
                                           ;   STK03
                                           ;   STK02
                                           ;   STK01
                                           ;; Starting pCode block
                                           _Temprature_update	;Function start
                                           ; 2 exit points
                                           _Temprature_Read
                                           ;	.line	18; "Temp.c"	if(Counters.Temp_counter == 10)
001479   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
00147a   1703     bsf     0x03, 0x6        
00147b   0815     movf    0x15, 0x0        	MOVF	(_Counters + 5),W
00147c   1683     bsf     0x03, 0x5        	BANKSEL	r0x1012
00147d   1703     bsf     0x03, 0x6        
00147e   00b5     movwf   0x35             	MOVWF	r0x1012
00147f   3a0a     xorlw   0x0a             	XORLW	0x0a
001480   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001481   2d17     goto    0x0517           	GOTO	_00111_DS_
                                           ;	.line	20; "Temp.c"	Readings.temp_read = ADC_GetResult(2);
001482   3002     movlw   0x02             	MOVLW	0x02
001483   158a     bsf     0x0a, 0x3        	PAGESEL	_ADC_GetResult
001484   120a     bcf     0x0a, 0x4        
001485   2741     call    0x0741           	CALL	_ADC_GetResult
001486   118a     bcf     0x0a, 0x3        	PAGESEL	$
001487   160a     bsf     0x0a, 0x4        
001488   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
001489   1703     bsf     0x03, 0x6        
00148a   00b8     movwf   0x38             	MOVWF	r0x1015
00148b   00b6     movwf   0x36             	MOVWF	r0x1013
00148c   087f     movf    0x7f, 0x0        	MOVF	STK00,W
00148d   00b5     movwf   0x35             	MOVWF	r0x1012
00148e   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
00148f   1703     bsf     0x03, 0x6        
001490   009a     movwf   0x1a             	MOVWF	(_Readings + 0)
001491   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
001492   1703     bsf     0x03, 0x6        
001493   00b7     movwf   0x37             	MOVWF	r0x1014
                                           ;;99	MOVF	r0x1013,W
                                           ;;1	CLRF	r0x1016
                                           ;;1	CLRF	r0x1017
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=3, offset=0, AOP_TYPE(res)=8
                                           ;;100	MOVF	r0x1014,W
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
001494   0838     movf    0x38, 0x0        	MOVF	r0x1015,W
001495   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
001496   1703     bsf     0x03, 0x6        
001497   009b     movwf   0x1b             	MOVWF	(_Readings + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
001498   3000     movlw   0x00             	MOVLW	0x00
001499   009c     movwf   0x1c             	MOVWF	(_Readings + 2)
00149a   009d     movwf   0x1d             	MOVWF	(_Readings + 3)
                                           ;	.line	21; "Temp.c"	Readings.temp_read = (Readings.temp_read*150*5)/(1.5*1023);
00149b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
00149c   1703     bsf     0x03, 0x6        
00149d   0837     movf    0x37, 0x0        	MOVF	r0x1014,W
00149e   00f9     movwf   0x79             	MOVWF	STK06
00149f   0838     movf    0x38, 0x0        	MOVF	r0x1015,W
0014a0   00fa     movwf   0x7a             	MOVWF	STK05
0014a1   3000     movlw   0x00             	MOVLW	0x00
0014a2   00fb     movwf   0x7b             	MOVWF	STK04
0014a3   3000     movlw   0x00             	MOVLW	0x00
0014a4   00fc     movwf   0x7c             	MOVWF	STK03
0014a5   30ee     movlw   0xee             	MOVLW	0xee
0014a6   00fd     movwf   0x7d             	MOVWF	STK02
0014a7   3002     movlw   0x02             	MOVLW	0x02
0014a8   00fe     movwf   0x7e             	MOVWF	STK01
0014a9   3000     movlw   0x00             	MOVLW	0x00
0014aa   00ff     movwf   0x7f             	MOVWF	STK00
0014ab   3000     movlw   0x00             	MOVLW	0x00
0014ac   118a     bcf     0x0a, 0x3        	PAGESEL	__mullong
0014ad   160a     bsf     0x0a, 0x4        
0014ae   252a     call    0x052a           	CALL	__mullong
0014af   118a     bcf     0x0a, 0x3        	PAGESEL	$
0014b0   160a     bsf     0x0a, 0x4        
0014b1   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
0014b2   1703     bsf     0x03, 0x6        
0014b3   00b8     movwf   0x38             	MOVWF	r0x1015
0014b4   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0014b5   00b7     movwf   0x37             	MOVWF	r0x1014
0014b6   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0014b7   00b6     movwf   0x36             	MOVWF	r0x1013
0014b8   087d     movf    0x7d, 0x0        	MOVF	STK02,W
0014b9   00b5     movwf   0x35             	MOVWF	r0x1012
0014ba   00fd     movwf   0x7d             	MOVWF	STK02
0014bb   0836     movf    0x36, 0x0        	MOVF	r0x1013,W
0014bc   00fe     movwf   0x7e             	MOVWF	STK01
0014bd   0837     movf    0x37, 0x0        	MOVF	r0x1014,W
0014be   00ff     movwf   0x7f             	MOVWF	STK00
0014bf   0838     movf    0x38, 0x0        	MOVF	r0x1015,W
0014c0   118a     bcf     0x0a, 0x3        	PAGESEL	___ulong2fs
0014c1   160a     bsf     0x0a, 0x4        
0014c2   23ba     call    0x03ba           	CALL	___ulong2fs
0014c3   118a     bcf     0x0a, 0x3        	PAGESEL	$
0014c4   160a     bsf     0x0a, 0x4        
0014c5   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
0014c6   1703     bsf     0x03, 0x6        
0014c7   00b8     movwf   0x38             	MOVWF	r0x1015
0014c8   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0014c9   00b7     movwf   0x37             	MOVWF	r0x1014
0014ca   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0014cb   00b6     movwf   0x36             	MOVWF	r0x1013
0014cc   087d     movf    0x7d, 0x0        	MOVF	STK02,W
0014cd   00b5     movwf   0x35             	MOVWF	r0x1012
0014ce   3000     movlw   0x00             	MOVLW	0x00
0014cf   00f9     movwf   0x79             	MOVWF	STK06
0014d0   30d0     movlw   0xd0             	MOVLW	0xd0
0014d1   00fa     movwf   0x7a             	MOVWF	STK05
0014d2   30bf     movlw   0xbf             	MOVLW	0xbf
0014d3   00fb     movwf   0x7b             	MOVWF	STK04
0014d4   3044     movlw   0x44             	MOVLW	0x44
0014d5   00fc     movwf   0x7c             	MOVWF	STK03
0014d6   0835     movf    0x35, 0x0        	MOVF	r0x1012,W
0014d7   00fd     movwf   0x7d             	MOVWF	STK02
0014d8   0836     movf    0x36, 0x0        	MOVF	r0x1013,W
0014d9   00fe     movwf   0x7e             	MOVWF	STK01
0014da   0837     movf    0x37, 0x0        	MOVF	r0x1014,W
0014db   00ff     movwf   0x7f             	MOVWF	STK00
0014dc   0838     movf    0x38, 0x0        	MOVF	r0x1015,W
0014dd   158a     bsf     0x0a, 0x3        	PAGESEL	___fsdiv
0014de   120a     bcf     0x0a, 0x4        
0014df   2000     call    0x0000           	CALL	___fsdiv
0014e0   118a     bcf     0x0a, 0x3        	PAGESEL	$
0014e1   160a     bsf     0x0a, 0x4        
0014e2   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
0014e3   1703     bsf     0x03, 0x6        
0014e4   00b8     movwf   0x38             	MOVWF	r0x1015
0014e5   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0014e6   00b7     movwf   0x37             	MOVWF	r0x1014
0014e7   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0014e8   00b6     movwf   0x36             	MOVWF	r0x1013
0014e9   087d     movf    0x7d, 0x0        	MOVF	STK02,W
0014ea   00b5     movwf   0x35             	MOVWF	r0x1012
0014eb   00fd     movwf   0x7d             	MOVWF	STK02
0014ec   0836     movf    0x36, 0x0        	MOVF	r0x1013,W
0014ed   00fe     movwf   0x7e             	MOVWF	STK01
0014ee   0837     movf    0x37, 0x0        	MOVF	r0x1014,W
0014ef   00ff     movwf   0x7f             	MOVWF	STK00
0014f0   0838     movf    0x38, 0x0        	MOVF	r0x1015,W
0014f1   118a     bcf     0x0a, 0x3        	PAGESEL	___fs2ulong
0014f2   160a     bsf     0x0a, 0x4        
0014f3   22d2     call    0x02d2           	CALL	___fs2ulong
0014f4   118a     bcf     0x0a, 0x3        	PAGESEL	$
0014f5   160a     bsf     0x0a, 0x4        
0014f6   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
0014f7   1703     bsf     0x03, 0x6        
0014f8   00b8     movwf   0x38             	MOVWF	r0x1015
0014f9   087f     movf    0x7f, 0x0        	MOVF	STK00,W
0014fa   00b7     movwf   0x37             	MOVWF	r0x1014
0014fb   087e     movf    0x7e, 0x0        	MOVF	STK01,W
0014fc   00b6     movwf   0x36             	MOVWF	r0x1013
0014fd   087d     movf    0x7d, 0x0        	MOVF	STK02,W
0014fe   00b5     movwf   0x35             	MOVWF	r0x1012
0014ff   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
001500   1703     bsf     0x03, 0x6        
001501   009a     movwf   0x1a             	MOVWF	(_Readings + 0)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=2, offset=1, AOP_TYPE(res)=8
001502   1683     bsf     0x03, 0x5        	BANKSEL	r0x1013
001503   1703     bsf     0x03, 0x6        
001504   0836     movf    0x36, 0x0        	MOVF	r0x1013,W
001505   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
001506   1703     bsf     0x03, 0x6        
001507   009b     movwf   0x1b             	MOVWF	(_Readings + 1)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=1, offset=2, AOP_TYPE(res)=8
001508   1683     bsf     0x03, 0x5        	BANKSEL	r0x1014
001509   1703     bsf     0x03, 0x6        
00150a   0837     movf    0x37, 0x0        	MOVF	r0x1014,W
00150b   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
00150c   1703     bsf     0x03, 0x6        
00150d   009c     movwf   0x1c             	MOVWF	(_Readings + 2)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=3, AOP_TYPE(res)=8
00150e   1683     bsf     0x03, 0x5        	BANKSEL	r0x1015
00150f   1703     bsf     0x03, 0x6        
001510   0838     movf    0x38, 0x0        	MOVF	r0x1015,W
001511   1683     bsf     0x03, 0x5        	BANKSEL	_Readings
001512   1703     bsf     0x03, 0x6        
001513   009d     movwf   0x1d             	MOVWF	(_Readings + 3)
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
                                           ;	.line	22; "Temp.c"	Counters.Temp_counter=0 ; // counter to read every 100ms one reading
001514   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001515   1703     bsf     0x03, 0x6        
001516   0195     clrf    0x15             	CLRF	(_Counters + 5)
                                           _00111_DS_
                                           ;	.line	28; "Temp.c"	Counters.Temp_counter++;
001517   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001518   1703     bsf     0x03, 0x6        
001519   0815     movf    0x15, 0x0        	MOVF	(_Counters + 5),W
00151a   1683     bsf     0x03, 0x5        	BANKSEL	r0x1018
00151b   1703     bsf     0x03, 0x6        
00151c   00b9     movwf   0x39             	MOVWF	r0x1018
00151d   0ab9     incf    0x39, 0x1        	INCF	r0x1018,F
                                           ;;/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic14/gen.c:6461: size=0, offset=0, AOP_TYPE(res)=8
00151e   0839     movf    0x39, 0x0        	MOVF	r0x1018,W
00151f   1683     bsf     0x03, 0x5        	BANKSEL	_Counters
001520   1703     bsf     0x03, 0x6        
001521   0095     movwf   0x15             	MOVWF	(_Counters + 5)
001522   0008     return                   	RETURN	
                                           ; exit point of _Temprature_update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _Temprature_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _ADC_Init
                                           ;   _ADC_Init
                                           ;; Starting pCode block
                                           _Temprature_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	4; "Temp.c"	ADC_Init(1); // 250ns sampling rate
001523   3001     movlw   0x01             	MOVLW	0x01
001524   158a     bsf     0x0a, 0x3        	PAGESEL	_ADC_Init
001525   120a     bcf     0x0a, 0x4        
001526   27ac     call    0x07ac           	CALL	_ADC_Init
001527   118a     bcf     0x0a, 0x3        	PAGESEL	$
001528   160a     bsf     0x0a, 0x4        
001529   0008     return                   	RETURN	
                                           ; exit point of _Temprature_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	  109+   34 =   143 instructions (  354 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:24 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"Timer.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_GPIO_InitPortPin
                                           	extern	_GPIO_InitPort
                                           	extern	_GPIO_Update
                                           	extern	_GPIO_SetPortPinState
                                           	extern	_GPIO_SetPortState
                                           	extern	_GPIO_GetPortPinState
                                           	extern	_UTIL_DelayMS
                                           	extern	_SSD_Init
                                           	extern	_SSD_SET_Symbol
                                           	extern	_SSD_SET_state
                                           	extern	_SSD_GET_state
                                           	extern	_SSD_GET_Symbol
                                           	extern	_SSD_update
                                           	extern	_SettingMode_update
                                           	extern	_PB_Init
                                           	extern	_PB_Update
                                           	extern	_PB_GetState
                                           	extern	_ADC_Init
                                           	extern	_ADC_Update
                                           	extern	_ADC_GetResult
                                           	extern	_Start_conversion_Int
                                           	extern	_Temprature_Init
                                           	extern	_Temprature_update
                                           	extern	_LED_Init
                                           	extern	_LED_GetState
                                           	extern	_LED_Update
                                           	extern	_Heater_Init
                                           	extern	_Heater_update
                                           	extern	_Heater_GetState
                                           	extern	_Cooler_Init
                                           	extern	_Cooler_SetState
                                           	extern	_Cooler_GetState
                                           	extern	_Cooler_update
                                           	extern	_I2C_Init
                                           	extern	_I2C_Hold
                                           	extern	_I2C_Begin
                                           	extern	_I2C_End
                                           	extern	_I2C_Write
                                           	extern	_I2C_Read
                                           	extern	_e2pext_r
                                           	extern	_e2pext_w
                                           	extern	_e2pex_update
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_PIR2bits
                                           	extern	_T1CONbits
                                           	extern	_T2CONbits
                                           	extern	_SSPCONbits
                                           	extern	_CCP1CONbits
                                           	extern	_RCSTAbits
                                           	extern	_CCP2CONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_PIE1bits
                                           	extern	_PIE2bits
                                           	extern	_PCONbits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPSTATbits
                                           	extern	_TXSTAbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ADCON1bits
                                           	extern	_EECON1bits
                                           	extern	_Counters
                                           	extern	_Flags
                                           	extern	_Readings
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_PIR2
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_TMR2
                                           	extern	_T2CON
                                           	extern	_SSPBUF
                                           	extern	_SSPCON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_CCP1CON
                                           	extern	_RCSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP2CON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_PIE1
                                           	extern	_PIE2
                                           	extern	_PCON
                                           	extern	_SSPCON2
                                           	extern	_PR2
                                           	extern	_SSPADD
                                           	extern	_SSPSTAT
                                           	extern	_TXSTA
                                           	extern	_SPBRG
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEDATH
                                           	extern	_EEADRH
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_TMR0_Update
                                           	global	_TMR0_Start
                                           	global	_TMR0_Init
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_Timer_0	udata
                                           r0x1006	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_Timer	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _TMR0_Update	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;functions called:
                                           ;   _PB_Update
                                           ;   _SSD_update
                                           ;   _Temprature_update
                                           ;   _LED_Update
                                           ;   _Heater_update
                                           ;   _Cooler_update
                                           ;   _SettingMode_update
                                           ;   _e2pex_update
                                           ;   _SettingMode_update
                                           ;   _Heater_update
                                           ;   _Cooler_update
                                           ;   _e2pex_update
                                           ;   _LED_Update
                                           ;   _PB_Update
                                           ;   _SSD_update
                                           ;   _Temprature_update
                                           ;   _LED_Update
                                           ;   _Heater_update
                                           ;   _Cooler_update
                                           ;   _SettingMode_update
                                           ;   _e2pex_update
                                           ;   _SettingMode_update
                                           ;   _Heater_update
                                           ;   _Cooler_update
                                           ;   _e2pex_update
                                           ;   _LED_Update
                                           ;1 compiler assigned register :
                                           ;   r0x1006
                                           ;; Starting pCode block
                                           _TMR0_Update	;Function start
                                           ; 2 exit points
                                           ;	.line	20; "Timer.c"	if(Flags.Operation_Flag == ON_MODE)
001800   1683     bsf     0x03, 0x5        	BANKSEL	_Flags
001801   1703     bsf     0x03, 0x6        
001802   0833     movf    0x33, 0x0        	MOVF	(_Flags + 4),W
001803   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
001804   1703     bsf     0x03, 0x6        
001805   00c2     movwf   0x42             	MOVWF	r0x1006
001806   3a01     xorlw   0x01             	XORLW	0x01
001807   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001808   2832     goto    0x0032           	GOTO	_00116_DS_
                                           ;	.line	22; "Timer.c"	PB_Update();               //~0
001809   118a     bcf     0x0a, 0x3        	PAGESEL	_PB_Update
00180a   120a     bcf     0x0a, 0x4        
00180b   2157     call    0x0157           	CALL	_PB_Update
00180c   158a     bsf     0x0a, 0x3        	PAGESEL	$
00180d   160a     bsf     0x0a, 0x4        
                                           ;	.line	23; "Timer.c"	SSD_update();             //~0,4ms
00180e   158a     bsf     0x0a, 0x3        	PAGESEL	_SSD_update
00180f   120a     bcf     0x0a, 0x4        
001810   22fc     call    0x02fc           	CALL	_SSD_update
001811   158a     bsf     0x0a, 0x3        	PAGESEL	$
001812   160a     bsf     0x0a, 0x4        
                                           ;	.line	24; "Timer.c"	Temprature_update();     //~0 ,9ms
001813   118a     bcf     0x0a, 0x3        	PAGESEL	_Temprature_update
001814   160a     bsf     0x0a, 0x4        
001815   2479     call    0x0479           	CALL	_Temprature_update
001816   158a     bsf     0x0a, 0x3        	PAGESEL	$
001817   160a     bsf     0x0a, 0x4        
                                           ;	.line	25; "Timer.c"	LED_Update();           //~0
001818   118a     bcf     0x0a, 0x3        	PAGESEL	_LED_Update
001819   160a     bsf     0x0a, 0x4        
00181a   2239     call    0x0239           	CALL	_LED_Update
00181b   158a     bsf     0x0a, 0x3        	PAGESEL	$
00181c   160a     bsf     0x0a, 0x4        
                                           ;	.line	26; "Timer.c"	Heater_update();       //~0
00181d   158a     bsf     0x0a, 0x3        	PAGESEL	_Heater_update
00181e   160a     bsf     0x0a, 0x4        
00181f   20d7     call    0x00d7           	CALL	_Heater_update
001820   158a     bsf     0x0a, 0x3        	PAGESEL	$
001821   160a     bsf     0x0a, 0x4        
                                           ;	.line	27; "Timer.c"	Cooler_update();      //~0
001822   158a     bsf     0x0a, 0x3        	PAGESEL	_Cooler_update
001823   160a     bsf     0x0a, 0x4        
001824   2092     call    0x0092           	CALL	_Cooler_update
001825   158a     bsf     0x0a, 0x3        	PAGESEL	$
001826   160a     bsf     0x0a, 0x4        
                                           ;	.line	28; "Timer.c"	SettingMode_update();//~0,0.08ms(fixed)  0,.06ms(blinking)
001827   158a     bsf     0x0a, 0x3        	PAGESEL	_SettingMode_update
001828   120a     bcf     0x0a, 0x4        
001829   26d3     call    0x06d3           	CALL	_SettingMode_update
00182a   158a     bsf     0x0a, 0x3        	PAGESEL	$
00182b   160a     bsf     0x0a, 0x4        
                                           ;	.line	29; "Timer.c"	e2pex_update();     // 1.5  , 6.5ms
00182c   118a     bcf     0x0a, 0x3        	PAGESEL	_e2pex_update
00182d   160a     bsf     0x0a, 0x4        
00182e   2000     call    0x0000           	CALL	_e2pex_update
00182f   158a     bsf     0x0a, 0x3        	PAGESEL	$
001830   160a     bsf     0x0a, 0x4        
001831   2851     goto    0x0051           	GOTO	_00118_DS_
                                           _00116_DS_
                                           ;	.line	31; "Timer.c"	else if(Flags.Operation_Flag == OFF_MODE)
001832   3000     movlw   0x00             	MOVLW	0x00
001833   1683     bsf     0x03, 0x5        	BANKSEL	r0x1006
001834   1703     bsf     0x03, 0x6        
001835   0442     iorwf   0x42, 0x0        	IORWF	r0x1006,W
001836   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001837   2851     goto    0x0051           	GOTO	_00118_DS_
                                           ;	.line	33; "Timer.c"	SettingMode_update(); //~0 , 0.08 ms(fixed)  0 ms ,.06(blinking)
001838   158a     bsf     0x0a, 0x3        	PAGESEL	_SettingMode_update
001839   120a     bcf     0x0a, 0x4        
00183a   26d3     call    0x06d3           	CALL	_SettingMode_update
00183b   158a     bsf     0x0a, 0x3        	PAGESEL	$
00183c   160a     bsf     0x0a, 0x4        
                                           ;	.line	34; "Timer.c"	Heater_update();     //~0
00183d   158a     bsf     0x0a, 0x3        	PAGESEL	_Heater_update
00183e   160a     bsf     0x0a, 0x4        
00183f   20d7     call    0x00d7           	CALL	_Heater_update
001840   158a     bsf     0x0a, 0x3        	PAGESEL	$
001841   160a     bsf     0x0a, 0x4        
                                           ;	.line	35; "Timer.c"	Cooler_update();    //~0
001842   158a     bsf     0x0a, 0x3        	PAGESEL	_Cooler_update
001843   160a     bsf     0x0a, 0x4        
001844   2092     call    0x0092           	CALL	_Cooler_update
001845   158a     bsf     0x0a, 0x3        	PAGESEL	$
001846   160a     bsf     0x0a, 0x4        
                                           ;	.line	36; "Timer.c"	e2pex_update();    //1.5 ,6.5ms
001847   118a     bcf     0x0a, 0x3        	PAGESEL	_e2pex_update
001848   160a     bsf     0x0a, 0x4        
001849   2000     call    0x0000           	CALL	_e2pex_update
00184a   158a     bsf     0x0a, 0x3        	PAGESEL	$
00184b   160a     bsf     0x0a, 0x4        
                                           ;	.line	37; "Timer.c"	LED_Update();     //~0
00184c   118a     bcf     0x0a, 0x3        	PAGESEL	_LED_Update
00184d   160a     bsf     0x0a, 0x4        
00184e   2239     call    0x0239           	CALL	_LED_Update
00184f   158a     bsf     0x0a, 0x3        	PAGESEL	$
001850   160a     bsf     0x0a, 0x4        
                                           _00118_DS_
001851   0008     return                   	RETURN	
                                           ; exit point of _TMR0_Update
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _TMR0_Start	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _TMR0_Start	;Function start
                                           ; 2 exit points
                                           ;	.line	11; "Timer.c"	TMR0_SET_INTERRUPT_STATE(Interrupt);
001852   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
001853   1303     bcf     0x03, 0x6        
001854   168b     bsf     0x0b, 0x5        	BSF	_INTCONbits,5
                                           ;	.line	12; "Timer.c"	GIE = 1; //set global interrupt flag
001855   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           ;	.line	13; "Timer.c"	TMR0_SELECT_CLOCK_SOURCE(Timer);
001856   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
001857   1303     bcf     0x03, 0x6        
001858   1281     bcf     0x01, 0x5        	BCF	_OPTION_REGbits,5
                                           ;	.line	14; "Timer.c"	TMR0_state(TMR0_ON); //TMR0 on
001859   1281     bcf     0x01, 0x5        	BCF	_OPTION_REGbits,5
00185a   0008     return                   	RETURN	
                                           ; exit point of _TMR0_Start
                                           
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _TMR0_Init	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;; Starting pCode block
                                           _TMR0_Init	;Function start
                                           ; 2 exit points
                                           ;	.line	5; "Timer.c"	TMR0_state(TMR0_OFF);
00185b   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
00185c   1303     bcf     0x03, 0x6        
00185d   1681     bsf     0x01, 0x5        	BSF	_OPTION_REGbits,5
                                           ;	.line	6; "Timer.c"	TMR0_SELECT_PRESCALAR(N_256);
00185e   1181     bcf     0x01, 0x3        	BCF	_OPTION_REGbits,3
00185f   1501     bsf     0x01, 0x2        	BSF	_OPTION_REGbits,2
001860   1481     bsf     0x01, 0x1        	BSF	_OPTION_REGbits,1
001861   1401     bsf     0x01, 0x0        	BSF	_OPTION_REGbits,0
001862   0008     return                   	RETURN	
                                           ; exit point of _TMR0_Init
                                           
                                           
                                           ;	code size estimation:
                                           ;	   35+   32 =    67 instructions (  198 byte)
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jun 20 2015) (MINGW32)
                                           ; This file was generated Sun Jul 19 20:05:25 2020
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"utilities.c"
                                           	list	p=16f877a
                                           	radix dec
                                           	include "p16f877a.inc"
                                                   LIST
                                           
                                           ;==========================================================================
                                           ; Build date : Aug 07 2014
                                           ;  MPASM PIC16F877A processor include
                                           ; 
                                           ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                                           ;==========================================================================
                                           
                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           
                                           	extern PSAVE
                                           	extern SSAVE
                                           	extern WSAVE
                                           	extern STK12
                                           	extern STK11
                                           	extern STK10
                                           	extern STK09
                                           	extern STK08
                                           	extern STK07
                                           	extern STK06
                                           	extern STK05
                                           	extern STK04
                                           	extern STK03
                                           	extern STK02
                                           	extern STK01
                                           	extern STK00
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_UTIL_DelayMS
                                           
                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_utilities_0	udata
                                           r0x1000	res	1
                                           r0x1001	res	1
                                           r0x1002	res	1
                                           r0x1003	res	1
                                           r0x1004	res	1
                                           r0x1005	res	1
                                           r0x1006	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_utilities	code
                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;entry:  _UTIL_DelayMS	;Function start
                                           ; 2 exit points
                                           ;has an exit
                                           ;7 compiler assigned registers:
                                           ;   r0x1000
                                           ;   r0x1001
                                           ;   r0x1002
                                           ;   r0x1003
                                           ;   r0x1004
                                           ;   r0x1005
                                           ;   r0x1006
                                           ;; Starting pCode block
                                           _UTIL_DelayMS	;Function start
                                           ; 2 exit points
                                           ;	.line	3; "utilities.c"	void UTIL_DelayMS(unsigned char delay_ms)
001863   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
001864   1703     bsf     0x03, 0x6        
001865   00a2     movwf   0x22             	MOVWF	r0x1000
                                           ;	.line	8; "utilities.c"	for (x = 0; x < delay_ms; x++)
001866   01a3     clrf    0x23             	CLRF	r0x1001
001867   01a4     clrf    0x24             	CLRF	r0x1002
                                           _00111_DS_
001868   1683     bsf     0x03, 0x5        	BANKSEL	r0x1000
001869   1703     bsf     0x03, 0x6        
00186a   0822     movf    0x22, 0x0        	MOVF	r0x1000,W
00186b   00a5     movwf   0x25             	MOVWF	r0x1003
00186c   01a6     clrf    0x26             	CLRF	r0x1004
00186d   3000     movlw   0x00             	MOVLW	0x00
00186e   0224     subwf   0x24, 0x0        	SUBWF	r0x1002,W
00186f   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
001870   2873     goto    0x0073           	GOTO	_00128_DS_
001871   0825     movf    0x25, 0x0        	MOVF	r0x1003,W
001872   0223     subwf   0x23, 0x0        	SUBWF	r0x1001,W
                                           _00128_DS_
001873   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
001874   2891     goto    0x0091           	GOTO	_00113_DS_
                                           ;;genSkipc:3247: created from rifx:027A5DF4
                                           ;	.line	10; "utilities.c"	for(y = 0; y <120; y++)
001875   3078     movlw   0x78             	MOVLW	0x78
001876   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
001877   1703     bsf     0x03, 0x6        
001878   00a5     movwf   0x25             	MOVWF	r0x1003
001879   01a6     clrf    0x26             	CLRF	r0x1004
                                           _00109_DS_
00187a   30ff     movlw   0xff             	MOVLW	0xff
00187b   1683     bsf     0x03, 0x5        	BANKSEL	r0x1003
00187c   1703     bsf     0x03, 0x6        
00187d   0725     addwf   0x25, 0x0        	ADDWF	r0x1003,W
00187e   00a7     movwf   0x27             	MOVWF	r0x1005
00187f   30ff     movlw   0xff             	MOVLW	0xff
001880   00a8     movwf   0x28             	MOVWF	r0x1006
001881   0826     movf    0x26, 0x0        	MOVF	r0x1004,W
001882   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
001883   0f26     incfsz  0x26, 0x0        	INCFSZ	r0x1004,W
001884   07a8     addwf   0x28, 0x1        	ADDWF	r0x1006,F
001885   0827     movf    0x27, 0x0        	MOVF	r0x1005,W
001886   00a5     movwf   0x25             	MOVWF	r0x1003
001887   0828     movf    0x28, 0x0        	MOVF	r0x1006,W
001888   00a6     movwf   0x26             	MOVWF	r0x1004
001889   0827     movf    0x27, 0x0        	MOVF	r0x1005,W
00188a   0428     iorwf   0x28, 0x0        	IORWF	r0x1006,W
00188b   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00188c   287a     goto    0x007a           	GOTO	_00109_DS_
                                           ;	.line	8; "utilities.c"	for (x = 0; x < delay_ms; x++)
00188d   0aa3     incf    0x23, 0x1        	INCF	r0x1001,F
00188e   1903     btfsc   0x03, 0x2        	BTFSC	STATUS,2
00188f   0aa4     incf    0x24, 0x1        	INCF	r0x1002,F
001890   2868     goto    0x0068           	GOTO	_00111_DS_
                                           _00113_DS_
001891   0008     return                   	RETURN	
                                           ; exit point of _UTIL_DelayMS
                                           
                                           
                                           ;	code size estimation:
                                           ;	   39+    4 =    43 instructions (   94 byte)
                                           
                                           	end
